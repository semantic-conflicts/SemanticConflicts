import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -119;
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 100;
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        boolean boolean7 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 67);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient12.sslFactory;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient12.executor = executor14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery(10L);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient9.createNettyHttpRequest("wQISTx/KiNMj0rZ0e3Ygwg==", "7TCks62sgIblmovGKBi9FA==");
        boolean boolean13 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("NIeUQne0DpCs1Nxr8tuK8A==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient0.remoteAddress = inetSocketAddress37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient29.webSocketHandler;
        java.util.concurrent.Executor executor55 = webSocketClient29.executor;
        java.net.InetSocketAddress inetSocketAddress56 = webSocketClient29.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress56);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient0.createNettyHttpRequest("giIg7LZuATRtMsGscW77TQ==", "097Re4X25x2btZQmtzC7wg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -40 + "'", byte6 == (byte) -40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "7GomPe1oJdxq410x0a/ITQ==" + "'", str7.equals("7GomPe1oJdxq410x0a/ITQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        byte byte45 = webSocketClient0.randomByte();
        java.io.InputStream inputStream46 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient0.setupSsl(inputStream46, "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 39 + "'", byte45 == (byte) 39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.reconnectEvery(100L);
        org.jboss.netty.channel.Channel channel24 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient0.executor = executor26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel11 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "0MGILvq1sMA3BJXvFhclVg==" + "'", str8.equals("0MGILvq1sMA3BJXvFhclVg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel11);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 41);
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "+bgf73rgf3a86DQSTGWwCw==" + "'", str8.equals("+bgf73rgf3a86DQSTGWwCw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("XMOqcL6RioVrh4n1e4jPvg==", "hZCkmx6u2kCk4AVksZXEFA==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        org.jboss.netty.channel.Channel channel12 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        boolean boolean7 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        java.lang.String str13 = webSocketClient8.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient8.sslFactory;
        webSocketClient0.sslFactory = sslFactory14;
        java.util.concurrent.Executor executor16 = null;
        webSocketClient0.executor = executor16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient0.webSocketHandler;
        java.lang.String str25 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient0.setupSsl(inputStream26, "ASYZglrc77sqwHDJjD5o3g==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str25 + "' != '" + "L2lvfyJxape07ZhkjyS7qA==" + "'", str25.equals("L2lvfyJxape07ZhkjyS7qA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "LGCG7ZnkBqKZ3AfPpm9jTA==" + "'", str7.equals("LGCG7ZnkBqKZ3AfPpm9jTA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient0.remoteAddress;
        byte byte19 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler20;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient0.bootstrap = clientBootstrap23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 104 + "'", byte19 == (byte) 104);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 39);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient7.bootstrap;
        webSocketClient7.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient7.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient7.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler13);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient29.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient29.request;
        boolean boolean56 = webSocketClient29.ssl;
        byte byte57 = webSocketClient29.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte57 + "' != '" + (byte) 86 + "'", byte57 == (byte) 86);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("kUSjj3TvP+pwU8VFptHRdg==", "Lj+UkW+8ZnepNfSL3fjHhA==");
        boolean boolean8 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler12;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient10.remoteAddress = inetSocketAddress15;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "NIeUQne0DpCs1Nxr8tuK8A==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler26;
        webSocketClient0.webSocketHandler = webSocketHandler26;
        java.lang.String str29 = webSocketClient0.base64Nonce();
        boolean boolean30 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 54 + "'", byte7 == (byte) 54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "vWq4es8whDw94ZWcGZ1LHA==" + "'", str29.equals("vWq4es8whDw94ZWcGZ1LHA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient0.remoteAddress = inetSocketAddress21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        webSocketClient1.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient1.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler16;
        java.util.concurrent.Executor executor18 = webSocketClient14.executor;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient14.remoteAddress = inetSocketAddress19;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient14.setupSsl(inputStream21, "NIeUQne0DpCs1Nxr8tuK8A==");
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient24.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = null;
        webSocketClient27.ioExceptionHandler = uncaughtExceptionHandler28;
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient27.webSocketHandler;
        webSocketClient23.webSocketHandler = webSocketHandler30;
        webSocketClient1.webSocketHandler = webSocketHandler30;
        java.util.concurrent.Executor executor33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler30, executor33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -49 + "'", byte8 == (byte) -49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler30);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "LWayfwFatRhcK9YYigLIkQ==" + "'", str6.equals("LWayfwFatRhcK9YYigLIkQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -82 + "'", byte9 == (byte) -82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient29.executor = executor32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient34.bootstrap = clientBootstrap36;
        java.util.concurrent.Executor executor38 = webSocketClient34.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler39;
        java.io.InputStream inputStream41 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient34.setupSsl(inputStream41, "unFH0DAf3w/1wj3Abw+zqw==");
        org.webbitserver.helpers.SslFactory sslFactory44 = webSocketClient43.sslFactory;
        webSocketClient29.sslFactory = sslFactory44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient29.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient1.bootstrap = clientBootstrap8;
        java.util.concurrent.Executor executor10 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient1.reconnectEvery((long) (byte) -128);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient13.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient13.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        boolean boolean33 = webSocketClient27.ssl;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient27.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor40 = webSocketClient39.executor;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient39.webSocketHandler;
        webSocketClient27.webSocketHandler = webSocketHandler41;
        webSocketClient13.webSocketHandler = webSocketHandler41;
        webSocketClient1.webSocketHandler = webSocketHandler41;
        java.util.concurrent.Executor executor45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler41, executor45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "PpAhNXMzrGugrvXX6TGo+A==" + "'", str7.equals("PpAhNXMzrGugrvXX6TGo+A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) -33 + "'", byte20 == (byte) -33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        webSocketClient0.base64Nonce = "QzfOerERyHdUEIljz4CocA==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        java.lang.String str16 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str16 + "' != '" + "dZlvdifhj9g1235gAVPnVw==" + "'", str16.equals("dZlvdifhj9g1235gAVPnVw=="));
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        webSocketClient0.base64Nonce = "UY0Wm2tWj/WDUNBfpO8v5w==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "VYQNBfedW5oNHwY3qAC/5g==" + "'", str11.equals("VYQNBfedW5oNHwY3qAC/5g=="));
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "fexvOr6sFoxH3ynPbXn3hA==");
        org.webbitserver.WebSocketHandler webSocketHandler33 = null;
        webSocketClient0.webSocketHandler = webSocketHandler33;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.reconnectEvery(0L);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("", "1YdxRs3ecGx3WMaK8L3cpQ==");
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) 83);
        org.jboss.netty.channel.Channel channel10 = null;
        webSocketClient9.channel = channel10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        webSocketClient3.ssl = false;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient3.createNettyHttpRequest("hi!", "bMDGal4FptClEzdkReYeaQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = null;
        webSocketClient0.bootstrap = clientBootstrap26;
        org.jboss.netty.channel.Channel channel28 = null;
        webSocketClient0.channel = channel28;
        java.lang.String str30 = webSocketClient0.base64Nonce;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient0.executor = executor31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str30 + "' != '" + "li2BQJtwy/6jOHfXFrn5Xg==" + "'", str30.equals("li2BQJtwy/6jOHfXFrn5Xg=="));
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "UY0Wm2tWj/WDUNBfpO8v5w==";
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient0.executor = executor30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "4EuVkO5mYDVNBOlf/rFxOg==" + "'", str27.equals("4EuVkO5mYDVNBOlf/rFxOg=="));
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient0.executor = executor14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        boolean boolean22 = webSocketClient16.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient16.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient0.request = httpRequest25;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -96 + "'", byte5 == (byte) -96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) 83);
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient9.reconnectEvery((long) (byte) 77);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "NIeUQne0DpCs1Nxr8tuK8A==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "B3rC/zlPCBHRubtL7vPSKw==" + "'", str6.equals("B3rC/zlPCBHRubtL7vPSKw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "unFH0DAf3w/1wj3Abw+zqw==");
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient9.sslFactory;
        java.lang.String str11 = webSocketClient9.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler3 = null;
        webSocketClient1.webSocketHandler = webSocketHandler3;
        java.util.concurrent.Executor executor5 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient1.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        java.lang.String str21 = webSocketClient16.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory22 = null;
        webSocketClient16.sslFactory = sslFactory22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient16.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient29.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler33;
        org.webbitserver.WebSocketHandler webSocketHandler35 = webSocketClient32.webSocketHandler;
        webSocketClient16.webSocketHandler = webSocketHandler35;
        webSocketClient1.webSocketHandler = webSocketHandler35;
        java.util.concurrent.Executor executor38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler35, executor38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler35);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        byte byte30 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient31.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient31.remoteAddress = inetSocketAddress33;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient31.remoteAddress = inetSocketAddress35;
        boolean boolean37 = webSocketClient31.ssl;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient31.remoteAddress = inetSocketAddress38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient40.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor44 = webSocketClient43.executor;
        org.webbitserver.WebSocketHandler webSocketHandler45 = webSocketClient43.webSocketHandler;
        webSocketClient31.webSocketHandler = webSocketHandler45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient31.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = webSocketClient31.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = webSocketClient31.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient50.request;
        java.io.InputStream inputStream52 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = webSocketClient50.setupSsl(inputStream52, "hi!");
        java.lang.String str55 = webSocketClient50.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory56 = null;
        webSocketClient50.sslFactory = sslFactory56;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient50.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler61 = null;
        webSocketClient50.ioExceptionHandler = uncaughtExceptionHandler61;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient63.request;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = webSocketClient63.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler67 = null;
        webSocketClient66.ioExceptionHandler = uncaughtExceptionHandler67;
        org.webbitserver.WebSocketHandler webSocketHandler69 = webSocketClient66.webSocketHandler;
        webSocketClient50.webSocketHandler = webSocketHandler69;
        webSocketClient31.webSocketHandler = webSocketHandler69;
        webSocketClient0.webSocketHandler = webSocketHandler69;
        byte byte73 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) 37 + "'", byte30 == (byte) 37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte73 + "' != '" + (byte) -15 + "'", byte73 == (byte) -15);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("c4NQk7UL8fFN+mgKc2RY8w==", "JuTkirO2XQy3cs/95AjdEw==");
        webSocketClient0.ssl = true;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient0.executor = executor37;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = null;
        webSocketClient0.bootstrap = clientBootstrap39;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 79 + "'", byte7 == (byte) 79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.createNettyHttpRequest("fXaF1l3/VNk+/4rPSlqdqQ==", "hi!");
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        webSocketClient0.base64Nonce = "eYR33Oq2aGqOFqT/1+PC/Q==";
        java.lang.String str47 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "eYR33Oq2aGqOFqT/1+PC/Q==" + "'", str47.equals("eYR33Oq2aGqOFqT/1+PC/Q=="));
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "dnPlsM22nPaSibTWZvw2zA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.exceptionHandler;
        org.jboss.netty.channel.Channel channel13 = webSocketClient8.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler14;
        byte byte16 = webSocketClient8.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        boolean boolean23 = webSocketClient17.ssl;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient17.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient26.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor30 = webSocketClient29.executor;
        org.webbitserver.WebSocketHandler webSocketHandler31 = webSocketClient29.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler31;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient17.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient17.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient17.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = null;
        webSocketClient36.sslFactory = sslFactory42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient36.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient52.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient52.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler55;
        webSocketClient17.webSocketHandler = webSocketHandler55;
        webSocketClient8.webSocketHandler = webSocketHandler55;
        webSocketClient0.webSocketHandler = webSocketHandler55;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap61 = null;
        webSocketClient60.bootstrap = clientBootstrap61;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler64 = webSocketClient63.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress65 = null;
        webSocketClient63.remoteAddress = inetSocketAddress65;
        java.net.InetSocketAddress inetSocketAddress67 = null;
        webSocketClient63.remoteAddress = inetSocketAddress67;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest71 = webSocketClient63.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient60.request = httpRequest71;
        java.util.concurrent.Executor executor73 = webSocketClient60.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient60.request;
        webSocketClient0.request = httpRequest74;
        org.jboss.netty.channel.Channel channel76 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) -9 + "'", byte16 == (byte) -9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel76);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 18 + "'", byte6 == (byte) 18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "uuGKqwUlJ2MdheH8vP9Tbw==" + "'", str7.equals("uuGKqwUlJ2MdheH8vP9Tbw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        java.lang.String str16 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient0.createNettyHttpRequest("LxLcOR6ZmnxBuX37qlPL+w==", "S8J8XYHWy4KgV2Q08SgNgA==");
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient0.remoteAddress = inetSocketAddress34;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "JOXtiKNi6D+zjRBkNDwOiA==" + "'", str10.equals("JOXtiKNi6D+zjRBkNDwOiA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        webSocketClient29.base64Nonce = "cpk7yudA1v1rxr0L7C1qKA==";
        webSocketClient29.base64Nonce = "LLa0OxV4rkmiLcXZlp4z+Q==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        boolean boolean7 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -27 + "'", byte7 == (byte) -27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "eccnHLWIW28N9VLLwy6H9w==" + "'", str10.equals("eccnHLWIW28N9VLLwy6H9w=="));
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        webSocketClient0.base64Nonce = "eADHiazNCKW503e0i4x4ew==";
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 67);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 57);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "";
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "/LOTtewtZRtWvcrpjB3KCA==" + "'", str11.equals("/LOTtewtZRtWvcrpjB3KCA=="));
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient13.ioExceptionHandler = uncaughtExceptionHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient13.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient13.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient13.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hPu95FtqwfbbHVmkGCT+cw==" + "'", str10.equals("hPu95FtqwfbbHVmkGCT+cw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -54);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (byte) -34);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("eYR33Oq2aGqOFqT/1+PC/Q==", "NIeUQne0DpCs1Nxr8tuK8A==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "qdpJlpYUISwO2rAmvpfYmQ==");
        java.lang.Class<?> wildcardClass16 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient10.sslFactory;
        java.lang.String str15 = webSocketClient10.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 88 + "'", byte11 == (byte) 88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        webSocketClient0.base64Nonce = "";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient0.createNettyHttpRequest("GRvJ5NcfTvRj37YKclrdYg==", "EzxHb0VYfnfck1XSoEEY3w==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "XMOqcL6RioVrh4n1e4jPvg==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        boolean boolean12 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("NJIXoIKre0jMl+ReG4+2Yg==", "BfxXAIg90O3Txywd6xS8dg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "7rF52fleuE4RTT+G2wEv7g==" + "'", str8.equals("7rF52fleuE4RTT+G2wEv7g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.reconnectEvery((long) '4');
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        webSocketClient16.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.request = httpRequest28;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient12.setupSsl(inputStream30, "99dKv0fQrB2sT+rHktwh5A==");
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient33.exceptionHandler;
        org.jboss.netty.channel.Channel channel38 = webSocketClient33.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler39;
        byte byte41 = webSocketClient33.randomByte();
        java.lang.String str42 = webSocketClient33.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient43.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient43.remoteAddress = inetSocketAddress45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient43.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = webSocketClient49.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        webSocketClient49.remoteAddress = inetSocketAddress51;
        java.net.InetSocketAddress inetSocketAddress53 = null;
        webSocketClient49.remoteAddress = inetSocketAddress53;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient49.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.net.InetSocketAddress inetSocketAddress58 = webSocketClient49.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient49.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient43.request = httpRequest61;
        webSocketClient33.request = httpRequest61;
        webSocketClient12.request = httpRequest61;
        webSocketClient11.request = httpRequest61;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -42 + "'", byte23 == (byte) -42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte41 + "' != '" + (byte) -58 + "'", byte41 == (byte) -58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "Ry+n+zetmeltx7WnC8WFcg==" + "'", str42.equals("Ry+n+zetmeltx7WnC8WFcg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest61);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        byte byte13 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "dZlvdifhj9g1235gAVPnVw==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 109 + "'", byte13 == (byte) 109);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "g22LpgGzwnJx0OqI6z+ujg==");
        boolean boolean9 = webSocketClient8.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient8.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "X5Wcln6jpIVWftxdYZ4vTA==" + "'", str5.equals("X5Wcln6jpIVWftxdYZ4vTA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 113);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient5.ioExceptionHandler = uncaughtExceptionHandler9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor34 = null;
        webSocketClient12.executor = executor34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient36.sslFactory;
        webSocketClient12.sslFactory = sslFactory42;
        webSocketClient5.sslFactory = sslFactory42;
        webSocketClient0.sslFactory = sslFactory42;
        boolean boolean46 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler47;
        org.jboss.netty.channel.Channel channel49 = null;
        webSocketClient0.channel = channel49;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient4.sslFactory;
        boolean boolean18 = webSocketClient4.ssl;
        org.jboss.netty.channel.Channel channel19 = webSocketClient4.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        org.webbitserver.helpers.SslFactory sslFactory16 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "9Wv9kH5UQkheNOyDqaYi4A==" + "'", str10.equals("9Wv9kH5UQkheNOyDqaYi4A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory16);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.exceptionHandler = uncaughtExceptionHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient12.exceptionHandler;
        org.jboss.netty.channel.Channel channel17 = null;
        webSocketClient12.channel = channel17;
        java.lang.String str19 = webSocketClient12.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient20.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient20.sslFactory = sslFactory24;
        java.lang.String str26 = webSocketClient20.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = webSocketClient33.sslFactory;
        webSocketClient27.sslFactory = sslFactory39;
        webSocketClient20.sslFactory = sslFactory39;
        java.util.concurrent.Executor executor42 = null;
        webSocketClient20.executor = executor42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient20.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient20.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "hi!");
        webSocketClient12.request = httpRequest49;
        webSocketClient0.request = httpRequest49;
        java.lang.Class<?> wildcardClass52 = httpRequest49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -45 + "'", byte7 == (byte) -45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str19 + "' != '" + "IJbPToH8wnGlDugBD3spSA==" + "'", str19.equals("IJbPToH8wnGlDugBD3spSA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.reconnectEvery((long) (byte) -54);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient1.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient1.reconnectEvery(0L);
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient1.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient6.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient9.webSocketHandler;
        webSocketClient5.webSocketHandler = webSocketHandler11;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler11);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.reconnectEvery(100L);
        webSocketClient23.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = webSocketClient23.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap27);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient4.request;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient14.exceptionHandler;
        org.jboss.netty.channel.Channel channel19 = webSocketClient14.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler20;
        byte byte22 = webSocketClient14.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        boolean boolean29 = webSocketClient23.ssl;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient23.remoteAddress = inetSocketAddress30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor36 = webSocketClient35.executor;
        org.webbitserver.WebSocketHandler webSocketHandler37 = webSocketClient35.webSocketHandler;
        webSocketClient23.webSocketHandler = webSocketHandler37;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient23.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient23.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient42.request;
        java.io.InputStream inputStream44 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient42.setupSsl(inputStream44, "hi!");
        java.lang.String str47 = webSocketClient42.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory48 = null;
        webSocketClient42.sslFactory = sslFactory48;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient42.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient42.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient55.request;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = webSocketClient55.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler59 = null;
        webSocketClient58.ioExceptionHandler = uncaughtExceptionHandler59;
        org.webbitserver.WebSocketHandler webSocketHandler61 = webSocketClient58.webSocketHandler;
        webSocketClient42.webSocketHandler = webSocketHandler61;
        webSocketClient23.webSocketHandler = webSocketHandler61;
        webSocketClient14.webSocketHandler = webSocketHandler61;
        webSocketClient0.webSocketHandler = webSocketHandler61;
        webSocketClient0.ssl = true;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient0.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "qarzn/wst91HHejDapWaKw==");
        org.webbitserver.netty.WebSocketClient webSocketClient72 = webSocketClient0.reconnectEvery((long) (byte) 120);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 3 + "'", byte22 == (byte) 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest73);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.createNettyHttpRequest("1YdxRs3ecGx3WMaK8L3cpQ==", "1YdxRs3ecGx3WMaK8L3cpQ==");
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "oRyhAjin9zDFrVJ94meovg==" + "'", str10.equals("oRyhAjin9zDFrVJ94meovg=="));
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "vg679zBRzyFpqIZXtW1Mag==" + "'", str8.equals("vg679zBRzyFpqIZXtW1Mag=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient9.bootstrap = clientBootstrap16;
        java.util.concurrent.Executor executor18 = webSocketClient9.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient9.reconnectEvery((long) (byte) -83);
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient20.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str15 + "' != '" + "rVZU5sMoIs2rKL/rzJ/UFA==" + "'", str15.equals("rVZU5sMoIs2rKL/rzJ/UFA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler21);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient10.bootstrap = clientBootstrap14;
        java.util.concurrent.Executor executor16 = null;
        webSocketClient10.executor = executor16;
        java.lang.String str18 = webSocketClient10.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket19 = webSocketClient10.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 40 + "'", byte11 == (byte) 40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "Gu4O67Mt84FY5j1E6nke1g==" + "'", str18.equals("Gu4O67Mt84FY5j1E6nke1g=="));
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient10.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient6.sslFactory = sslFactory12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient22.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient22.webSocketHandler;
        webSocketClient6.webSocketHandler = webSocketHandler25;
        webSocketClient3.webSocketHandler = webSocketHandler25;
        byte byte28 = webSocketClient3.randomByte();
        java.lang.String str29 = webSocketClient3.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 25 + "'", byte28 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "IprCpQhTiOGp3+G2KWPoWA==" + "'", str29.equals("IprCpQhTiOGp3+G2KWPoWA=="));
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient0.reconnectEvery((long) (byte) -56);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        boolean boolean46 = webSocketClient43.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "8hsReODDqVRRIF6mX0+9KA==";
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -54);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient11.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient11.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "dnPlsM22nPaSibTWZvw2zA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient11.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient19.exceptionHandler = uncaughtExceptionHandler21;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient19.exceptionHandler;
        org.jboss.netty.channel.Channel channel24 = webSocketClient19.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient19.exceptionHandler = uncaughtExceptionHandler25;
        byte byte27 = webSocketClient19.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        boolean boolean34 = webSocketClient28.ssl;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient28.remoteAddress = inetSocketAddress35;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient37.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor41 = webSocketClient40.executor;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient40.webSocketHandler;
        webSocketClient28.webSocketHandler = webSocketHandler42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient28.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient28.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient28.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient47.request;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient47.setupSsl(inputStream49, "hi!");
        java.lang.String str52 = webSocketClient47.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory53 = null;
        webSocketClient47.sslFactory = sslFactory53;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient47.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = null;
        webSocketClient47.ioExceptionHandler = uncaughtExceptionHandler58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient60.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler64 = null;
        webSocketClient63.ioExceptionHandler = uncaughtExceptionHandler64;
        org.webbitserver.WebSocketHandler webSocketHandler66 = webSocketClient63.webSocketHandler;
        webSocketClient47.webSocketHandler = webSocketHandler66;
        webSocketClient28.webSocketHandler = webSocketHandler66;
        webSocketClient19.webSocketHandler = webSocketHandler66;
        webSocketClient11.webSocketHandler = webSocketHandler66;
        org.webbitserver.netty.WebSocketClient webSocketClient71 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap72 = null;
        webSocketClient71.bootstrap = clientBootstrap72;
        org.webbitserver.netty.WebSocketClient webSocketClient74 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler75 = webSocketClient74.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress76 = null;
        webSocketClient74.remoteAddress = inetSocketAddress76;
        java.net.InetSocketAddress inetSocketAddress78 = null;
        webSocketClient74.remoteAddress = inetSocketAddress78;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest82 = webSocketClient74.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient71.request = httpRequest82;
        java.util.concurrent.Executor executor84 = webSocketClient71.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest85 = webSocketClient71.request;
        webSocketClient11.request = httpRequest85;
        webSocketClient9.request = httpRequest85;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) -109 + "'", byte27 == (byte) -109);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest85);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient0.bootstrap = clientBootstrap13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "6LQXFCYHIWBKrnxU4l0Xqw==" + "'", str8.equals("6LQXFCYHIWBKrnxU4l0Xqw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "XMOqcL6RioVrh4n1e4jPvg==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient9.setupSsl(inputStream12, "8nekkAt9VgyYNIlogX2P0A==");
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler17 = null;
        webSocketClient15.webSocketHandler = webSocketHandler17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient15.createNettyHttpRequest("V0xVa3Ev8bRfSZpboCLmxg==", "unFH0DAf3w/1wj3Abw+zqw==");
        webSocketClient14.request = httpRequest21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 120 + "'", byte10 == (byte) 120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.lang.String str28 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "g22LpgGzwnJx0OqI6z+ujg==" + "'", str28.equals("g22LpgGzwnJx0OqI6z+ujg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel12 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("c4NQk7UL8fFN+mgKc2RY8w==", "JuTkirO2XQy3cs/95AjdEw==");
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient0.remoteAddress = inetSocketAddress35;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -26 + "'", byte7 == (byte) -26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler16 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler16);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        org.webbitserver.WebSocketHandler webSocketHandler9 = null;
        webSocketClient0.webSocketHandler = webSocketHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        byte byte14 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "F1rSWh43vW2O6OqiS/AXzQ==" + "'", str11.equals("F1rSWh43vW2O6OqiS/AXzQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -9 + "'", byte14 == (byte) -9);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        java.lang.String str38 = webSocketClient11.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient11.createNettyHttpRequest("dnPlsM22nPaSibTWZvw2zA==", "dnPlsM22nPaSibTWZvw2zA==");
        webSocketClient0.request = httpRequest41;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler43;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "/4CeDcJfJeGu1pK5RKx3qQ==" + "'", str10.equals("/4CeDcJfJeGu1pK5RKx3qQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str38 + "' != '" + "yQOnpf9n14pPXLbbCM7aZA==" + "'", str38.equals("yQOnpf9n14pPXLbbCM7aZA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -104);
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient0.setupSsl(inputStream35, "UY0Wm2tWj/WDUNBfpO8v5w==");
        byte byte38 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "azEue6YSkPmEvoep/fDe8A==" + "'", str31.equals("azEue6YSkPmEvoep/fDe8A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte38 + "' != '" + (byte) -20 + "'", byte38 == (byte) -20);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        byte byte12 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient0.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 11 + "'", byte7 == (byte) 11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 86 + "'", byte12 == (byte) 86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -27;
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient0.bootstrap = clientBootstrap13;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient0.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient0.remoteAddress = inetSocketAddress16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient12.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        webSocketClient0.base64Nonce = "A2PBjw9KkpusAbo3H3yTjw==";
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket25 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -55 + "'", byte7 == (byte) -55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient11.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "hi!");
        java.net.InetSocketAddress inetSocketAddress41 = webSocketClient11.remoteAddress;
        java.lang.String str42 = webSocketClient11.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress43 = webSocketClient11.remoteAddress;
        org.jboss.netty.channel.Channel channel44 = null;
        webSocketClient11.channel = channel44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient11.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap48 = null;
        webSocketClient47.bootstrap = clientBootstrap48;
        java.net.InetSocketAddress inetSocketAddress50 = webSocketClient47.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory51 = null;
        webSocketClient47.sslFactory = sslFactory51;
        java.lang.String str53 = webSocketClient47.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient60.sslFactory;
        webSocketClient54.sslFactory = sslFactory66;
        webSocketClient47.sslFactory = sslFactory66;
        java.util.concurrent.Executor executor69 = null;
        webSocketClient47.executor = executor69;
        boolean boolean71 = webSocketClient47.ssl;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient47.sslFactory;
        webSocketClient11.sslFactory = sslFactory72;
        webSocketClient0.sslFactory = sslFactory72;
        java.lang.String str75 = webSocketClient0.base64Nonce();
        java.lang.String str76 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler77 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler77;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "SJiuSxG40cBrjIlzv6O2HQ==" + "'", str6.equals("SJiuSxG40cBrjIlzv6O2HQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "+EynaI678ynCXz9yvYMPXg==" + "'", str42.equals("+EynaI678ynCXz9yvYMPXg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str75 + "' != '" + "GGnra04UUUO5ctxqVk6Mfg==" + "'", str75.equals("GGnra04UUUO5ctxqVk6Mfg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 119);
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient7.setupSsl(inputStream8, "jOBgZDdkRpw9zMPU3eGgEA==");
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient10.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler11);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        byte byte15 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 98 + "'", byte14 == (byte) 98);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -89 + "'", byte15 == (byte) -89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -42);
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient10.sslFactory;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient10.remoteAddress;
        java.util.concurrent.Executor executor13 = webSocketClient10.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -108 + "'", byte5 == (byte) -108);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient11.setupSsl(inputStream13, "hi!");
        java.lang.String str16 = webSocketClient11.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient11.sslFactory;
        webSocketClient5.sslFactory = sslFactory17;
        webSocketClient0.sslFactory = sslFactory17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler20;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient0.bootstrap;
        java.lang.Class<?> wildcardClass23 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient3.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient3.reconnectEvery((long) (byte) 121);
        webSocketClient11.base64Nonce = "+iQ+pNIV+walI1dKa2TKsw==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient11.bootstrap = clientBootstrap14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "NIeUQne0DpCs1Nxr8tuK8A==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient9.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient9.webSocketHandler;
        boolean boolean21 = webSocketClient9.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient22.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory26 = null;
        webSocketClient22.sslFactory = sslFactory26;
        java.lang.String str28 = webSocketClient22.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient22.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = webSocketClient22.bootstrap;
        org.jboss.netty.channel.Channel channel31 = webSocketClient22.channel;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient22.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient22.reconnectEvery((long) (byte) 67);
        java.util.concurrent.Executor executor35 = null;
        webSocketClient34.executor = executor35;
        org.webbitserver.WebSocketHandler webSocketHandler37 = webSocketClient34.webSocketHandler;
        webSocketClient9.webSocketHandler = webSocketHandler37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler37);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.request = httpRequest11;
        webSocketClient0.base64Nonce = "";
        java.util.concurrent.Executor executor15 = null;
        webSocketClient0.executor = executor15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient10.executor = executor12;
        byte byte14 = webSocketClient10.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -18 + "'", byte14 == (byte) -18);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient9.setupSsl(inputStream36, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = null;
        webSocketClient38.bootstrap = clientBootstrap39;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient38.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient38.sslFactory;
        webSocketClient0.sslFactory = sslFactory42;
        boolean boolean44 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient0.reconnectEvery(0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "hM4sMJgfCuCOxYM1B4jJJA==";
        java.lang.String str33 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 34 + "'", byte7 == (byte) 34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str33 + "' != '" + "R7ZvMk6JXMscIGGA5WHVIA==" + "'", str33.equals("R7ZvMk6JXMscIGGA5WHVIA=="));
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) 85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -94 + "'", byte7 == (byte) -94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler10;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -89 + "'", byte6 == (byte) -89);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "zsa/3QkBq8Ai8pie8+yNZw==" + "'", str7.equals("zsa/3QkBq8Ai8pie8+yNZw=="));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient3.remoteAddress = inetSocketAddress9;
        webSocketClient3.base64Nonce = "1kLH1QO3IocyxbrpVJBvDQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "g22LpgGzwnJx0OqI6z+ujg==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient8.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "zhIaiQGRlUmvdfbrhWGR3Q==" + "'", str5.equals("zhIaiQGRlUmvdfbrhWGR3Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 67);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 57);
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient14.sslFactory;
        webSocketClient14.base64Nonce = "YV7TJM07xvdaj/Ns6dqjHg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -42);
        byte byte11 = webSocketClient10.randomByte();
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient10.remoteAddress;
        webSocketClient10.base64Nonce = "OgETuFKxBqPkhNaLpOa6ZA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 25 + "'", byte5 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -55 + "'", byte11 == (byte) -55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient0.reconnectEvery((long) (byte) -56);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient43.request;
        java.util.concurrent.Executor executor47 = webSocketClient43.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor47);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient29.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient31.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient34.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient34.webSocketHandler;
        webSocketClient29.webSocketHandler = webSocketHandler38;
        webSocketClient29.ssl = false;
        webSocketClient29.base64Nonce = "";
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket44 = webSocketClient29.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "Pc6kJbGB68wSEA/FKf3+MQ==" + "'", str10.equals("Pc6kJbGB68wSEA/FKf3+MQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "XMOqcL6RioVrh4n1e4jPvg==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient9.bootstrap = clientBootstrap12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient9.reconnectEvery((long) (byte) 101);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient9.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 5 + "'", byte10 == (byte) 5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -109;
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -9 + "'", byte8 == (byte) -9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient9.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "ZunMqW7rgfhTEmDZwuFzCQ==";
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("NIeUQne0DpCs1Nxr8tuK8A==", "hi!");
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient0.sslFactory = sslFactory10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        byte byte28 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -45 + "'", byte28 == (byte) -45);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "X7I7qeZwJpq6vV5pXrp+dQ==" + "'", str10.equals("X7I7qeZwJpq6vV5pXrp+dQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "LGCG7ZnkBqKZ3AfPpm9jTA==";
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 63 + "'", byte7 == (byte) 63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.reconnectEvery((long) (byte) 95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "9ps5iyP1f9KdrPf+PYYweQ==" + "'", str10.equals("9ps5iyP1f9KdrPf+PYYweQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient20.exceptionHandler = uncaughtExceptionHandler22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        byte byte26 = webSocketClient20.randomByte();
        java.lang.String str27 = webSocketClient20.base64Nonce();
        java.util.concurrent.Executor executor28 = webSocketClient20.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = null;
        webSocketClient34.sslFactory = sslFactory40;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient34.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient33.request = httpRequest44;
        webSocketClient20.request = httpRequest44;
        webSocketClient13.request = httpRequest44;
        webSocketClient0.request = httpRequest44;
        java.util.concurrent.Executor executor49 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient0.request;
        java.lang.String str51 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -48 + "'", byte26 == (byte) -48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "wiFH3y+XEes4yuFtnVDi3A==" + "'", str27.equals("wiFH3y+XEes4yuFtnVDi3A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str51 + "' != '" + "aG9AWwwWlc7Rq/Qbh65ToA==" + "'", str51.equals("aG9AWwwWlc7Rq/Qbh65ToA=="));
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor35 = webSocketClient10.executor;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient10.executor = executor36;
        java.lang.String str38 = webSocketClient10.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress40 = webSocketClient10.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient10.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient11.setupSsl(inputStream13, "hi!");
        java.lang.String str16 = webSocketClient11.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient11.sslFactory;
        webSocketClient5.sslFactory = sslFactory17;
        webSocketClient0.sslFactory = sslFactory17;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient0.sslFactory = sslFactory30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = webSocketClient0.bootstrap;
        webSocketClient0.base64Nonce = "yVFcL9ec7kDdPMBIYwz2TA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap32);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "unFH0DAf3w/1wj3Abw+zqw==");
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "Lj+UkW+8ZnepNfSL3fjHhA==");
        org.jboss.netty.channel.Channel channel13 = null;
        webSocketClient0.channel = channel13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        byte byte11 = webSocketClient10.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient10.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient13.exceptionHandler = uncaughtExceptionHandler16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient13.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient13.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient13.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient24.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.setupSsl(inputStream37, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel40 = null;
        webSocketClient36.channel = channel40;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient42.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient42.remoteAddress = inetSocketAddress44;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient42.remoteAddress = inetSocketAddress46;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = webSocketClient42.ioExceptionHandler;
        byte byte49 = webSocketClient42.randomByte();
        webSocketClient42.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient42.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient42.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest58 = webSocketClient57.request;
        java.io.InputStream inputStream59 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = webSocketClient57.setupSsl(inputStream59, "hi!");
        java.lang.String str62 = webSocketClient57.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory63 = webSocketClient57.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest66 = webSocketClient57.createNettyHttpRequest("XMOqcL6RioVrh4n1e4jPvg==", "hZCkmx6u2kCk4AVksZXEFA==");
        webSocketClient42.request = httpRequest66;
        webSocketClient36.request = httpRequest66;
        webSocketClient13.request = httpRequest66;
        webSocketClient10.request = httpRequest66;
        java.net.InetSocketAddress inetSocketAddress71 = webSocketClient10.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 71 + "'", byte11 == (byte) 71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) 100 + "'", byte49 == (byte) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress71);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient13.webSocketHandler;
        webSocketClient9.webSocketHandler = webSocketHandler15;
        webSocketClient1.webSocketHandler = webSocketHandler15;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 119);
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient7.sslFactory;
        java.lang.String str9 = webSocketClient7.base64Nonce;
        java.lang.String str10 = webSocketClient7.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "6i5vtMPyLmLJR9zuGYe43g==" + "'", str10.equals("6i5vtMPyLmLJR9zuGYe43g=="));
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.String str9 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient10.request = httpRequest28;
        webSocketClient0.request = httpRequest28;
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket32 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 73 + "'", byte8 == (byte) 73);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "8G51/IYzegJU+VNd+sGNdg==" + "'", str9.equals("8G51/IYzegJU+VNd+sGNdg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        java.lang.String str28 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -2 + "'", byte6 == (byte) -2);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "3JH9Z0bH6eWUziMSMmcuLQ==" + "'", str7.equals("3JH9Z0bH6eWUziMSMmcuLQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Class<?> wildcardClass4 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        boolean boolean7 = webSocketClient0.ssl;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "+kYaY2Wz3pwJofTVa/JnJw==");
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        boolean boolean11 = webSocketClient9.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient12.webSocketHandler = webSocketHandler40;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient12.sslFactory;
        byte byte44 = webSocketClient12.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler45 = webSocketClient12.webSocketHandler;
        webSocketClient9.webSocketHandler = webSocketHandler45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -9 + "'", byte19 == (byte) -9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory43);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte44 + "' != '" + (byte) -95 + "'", byte44 == (byte) -95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler45);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        webSocketClient0.base64Nonce = "+oDi99FAcJXXKbCYDgpbcQ==";
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        byte byte11 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.createNettyHttpRequest("99dKv0fQrB2sT+rHktwh5A==", "WPlihPCvgIoBxszGuWi88w==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 28 + "'", byte11 == (byte) 28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient11.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient11.createNettyHttpRequest("fXaF1l3/VNk+/4rPSlqdqQ==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient11.sslFactory = sslFactory35;
        webSocketClient0.sslFactory = sslFactory35;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "wGyGfIo7N532c7jCaGO8KA==" + "'", str10.equals("wGyGfIo7N532c7jCaGO8KA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        webSocketClient0.base64Nonce = "xlKGtF8xhx/HUpdWVnNMSQ==";
        byte byte25 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -100 + "'", byte7 == (byte) -100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte25 + "' != '" + (byte) 76 + "'", byte25 == (byte) 76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("/c8eY/NO7XMbiYebMbfDlA==", "Sx5cGcyCQRjahLBW4g1q6A==");
        java.lang.Class<?> wildcardClass11 = httpRequest10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "XzsrwVJXrQC+MDcmYFWfNQ==" + "'", str6.equals("XzsrwVJXrQC+MDcmYFWfNQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor5 = webSocketClient0.executor;
        webSocketClient0.ssl = false;
        webSocketClient0.base64Nonce = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        byte byte13 = webSocketClient12.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient14.ioExceptionHandler = uncaughtExceptionHandler25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient27.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient30.ioExceptionHandler = uncaughtExceptionHandler31;
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient30.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler33;
        webSocketClient12.webSocketHandler = webSocketHandler33;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 108 + "'", byte13 == (byte) 108);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler33);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient0.webSocketHandler;
        java.lang.String str25 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "f7Xi1ubjrF+q9jN/jUzfIQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str25 + "' != '" + "qYIWqTe1O+FpOCP7RyVWLQ==" + "'", str25.equals("qYIWqTe1O+FpOCP7RyVWLQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient33.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.request = httpRequest41;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler43;
        byte byte45 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "3lDTB6A+Z8U0JK2SeCcFRw==" + "'", str31.equals("3lDTB6A+Z8U0JK2SeCcFRw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 74 + "'", byte45 == (byte) 74);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        webSocketClient0.ssl = true;
        org.jboss.netty.channel.Channel channel15 = null;
        webSocketClient0.channel = channel15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.util.concurrent.Executor executor20 = webSocketClient9.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient23.exceptionHandler = uncaughtExceptionHandler25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        byte byte29 = webSocketClient23.randomByte();
        java.lang.String str30 = webSocketClient23.base64Nonce();
        java.util.concurrent.Executor executor31 = webSocketClient23.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient37.setupSsl(inputStream39, "hi!");
        java.lang.String str42 = webSocketClient37.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient37.sslFactory = sslFactory43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient37.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient36.request = httpRequest47;
        webSocketClient23.request = httpRequest47;
        webSocketClient9.request = httpRequest47;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) 46 + "'", byte29 == (byte) 46);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str30 + "' != '" + "xlOil10046LwT2okLiIePw==" + "'", str30.equals("xlOil10046LwT2okLiIePw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "NIeUQne0DpCs1Nxr8tuK8A==");
        java.lang.String str10 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 77);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -54);
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 30;
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.lang.String str28 = webSocketClient1.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient1.createNettyHttpRequest("dnPlsM22nPaSibTWZvw2zA==", "dnPlsM22nPaSibTWZvw2zA==");
        webSocketClient1.base64Nonce = "kxHPt4zX/Gk0gCFGuwBQbw==";
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler38;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient34.exceptionHandler;
        byte byte41 = webSocketClient34.randomByte();
        java.util.concurrent.Executor executor42 = null;
        webSocketClient34.executor = executor42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient44.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient44.remoteAddress = inetSocketAddress46;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient44.remoteAddress = inetSocketAddress48;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient44.request;
        org.jboss.netty.channel.Channel channel51 = webSocketClient44.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient44.reconnectEvery((long) (byte) 83);
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler60 = webSocketClient54.ioExceptionHandler;
        byte byte61 = webSocketClient54.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory62 = webSocketClient54.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap64 = null;
        webSocketClient63.bootstrap = clientBootstrap64;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler67 = webSocketClient66.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress68 = null;
        webSocketClient66.remoteAddress = inetSocketAddress68;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        webSocketClient66.remoteAddress = inetSocketAddress70;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient66.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient63.request = httpRequest74;
        webSocketClient54.request = httpRequest74;
        boolean boolean77 = webSocketClient54.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler79 = webSocketClient78.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        webSocketClient78.remoteAddress = inetSocketAddress80;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        webSocketClient78.remoteAddress = inetSocketAddress82;
        boolean boolean84 = webSocketClient78.ssl;
        java.net.InetSocketAddress inetSocketAddress85 = null;
        webSocketClient78.remoteAddress = inetSocketAddress85;
        org.webbitserver.netty.WebSocketClient webSocketClient87 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest88 = webSocketClient87.request;
        org.webbitserver.netty.WebSocketClient webSocketClient90 = webSocketClient87.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor91 = webSocketClient90.executor;
        org.webbitserver.WebSocketHandler webSocketHandler92 = webSocketClient90.webSocketHandler;
        webSocketClient78.webSocketHandler = webSocketHandler92;
        webSocketClient54.webSocketHandler = webSocketHandler92;
        webSocketClient53.webSocketHandler = webSocketHandler92;
        webSocketClient34.webSocketHandler = webSocketHandler92;
        webSocketClient1.webSocketHandler = webSocketHandler92;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient98 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str28 + "' != '" + "NPt86EU+Zaz5rloC+vzvtw==" + "'", str28.equals("NPt86EU+Zaz5rloC+vzvtw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte41 + "' != '" + (byte) 64 + "'", byte41 == (byte) 64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte61 + "' != '" + (byte) -64 + "'", byte61 == (byte) -64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler92);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "9LyIHio+Z6T8rhLhoMHTAQ==";
        java.lang.Class<?> wildcardClass18 = webSocketClient15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        webSocketClient0.base64Nonce = "fE4bTvHBbK/mYGh/2OQzdg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient3.ioExceptionHandler;
        java.lang.Class<?> wildcardClass10 = webSocketClient3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 25 + "'", byte7 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -42);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 24 + "'", byte5 == (byte) 24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -54);
        java.lang.String str10 = webSocketClient9.base64Nonce();
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient9.channel = channel11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "pET9ftoHG/Mc+BohlcX6eA==" + "'", str10.equals("pET9ftoHG/Mc+BohlcX6eA=="));
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "hM4sMJgfCuCOxYM1B4jJJA==";
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.String str35 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -6 + "'", byte7 == (byte) -6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str35 + "' != '" + "lG0gWjkpKWbBCBepUE3+MQ==" + "'", str35.equals("lG0gWjkpKWbBCBepUE3+MQ=="));
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient3.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient3.exceptionHandler;
        boolean boolean6 = webSocketClient3.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient4.reconnectEvery((long) (short) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        byte byte4 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient5.sslFactory = sslFactory13;
        org.webbitserver.WebSocketHandler webSocketHandler15 = null;
        webSocketClient5.webSocketHandler = webSocketHandler15;
        byte byte17 = webSocketClient5.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient5.sslFactory = sslFactory24;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory26;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler28;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 76 + "'", byte4 == (byte) 76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -34 + "'", byte12 == (byte) -34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -107 + "'", byte17 == (byte) -107);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        boolean boolean25 = webSocketClient19.ssl;
        boolean boolean26 = webSocketClient19.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient19.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient0.createNettyHttpRequest("YE+w5dZYqCgjWYjZHyOang==", "1iHG1ZlmPizeai3/c+r4Fg==");
        java.lang.Class<?> wildcardClass39 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient23.bootstrap = clientBootstrap24;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient23.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient23.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "dnPlsM22nPaSibTWZvw2zA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient23.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient31.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = null;
        webSocketClient31.exceptionHandler = uncaughtExceptionHandler33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient31.exceptionHandler;
        org.jboss.netty.channel.Channel channel36 = webSocketClient31.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient31.exceptionHandler = uncaughtExceptionHandler37;
        byte byte39 = webSocketClient31.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient40.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient40.remoteAddress = inetSocketAddress42;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient40.remoteAddress = inetSocketAddress44;
        boolean boolean46 = webSocketClient40.ssl;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient40.remoteAddress = inetSocketAddress47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor53 = webSocketClient52.executor;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient52.webSocketHandler;
        webSocketClient40.webSocketHandler = webSocketHandler54;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler56 = webSocketClient40.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler57 = webSocketClient40.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient40.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        java.io.InputStream inputStream61 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient59.setupSsl(inputStream61, "hi!");
        java.lang.String str64 = webSocketClient59.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory65 = null;
        webSocketClient59.sslFactory = sslFactory65;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest69 = webSocketClient59.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler70 = null;
        webSocketClient59.ioExceptionHandler = uncaughtExceptionHandler70;
        org.webbitserver.netty.WebSocketClient webSocketClient72 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient72.request;
        org.webbitserver.netty.WebSocketClient webSocketClient75 = webSocketClient72.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler76 = null;
        webSocketClient75.ioExceptionHandler = uncaughtExceptionHandler76;
        org.webbitserver.WebSocketHandler webSocketHandler78 = webSocketClient75.webSocketHandler;
        webSocketClient59.webSocketHandler = webSocketHandler78;
        webSocketClient40.webSocketHandler = webSocketHandler78;
        webSocketClient31.webSocketHandler = webSocketHandler78;
        webSocketClient23.webSocketHandler = webSocketHandler78;
        webSocketClient0.webSocketHandler = webSocketHandler78;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte39 + "' != '" + (byte) -9 + "'", byte39 == (byte) -9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler78);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient0.reconnectEvery((long) (byte) -16);
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient19.remoteAddress = inetSocketAddress20;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient0.setupSsl(inputStream16, "In5q9ZYgi3SOLteP0pP09w==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "g22LpgGzwnJx0OqI6z+ujg==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        boolean boolean11 = webSocketClient8.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient8.reconnectEvery((long) (byte) -109);
        org.jboss.netty.channel.Channel channel14 = webSocketClient13.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "NDk3EU5Or2a6xWkZNgliOg==" + "'", str5.equals("NDk3EU5Or2a6xWkZNgliOg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -77);
        webSocketClient0.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("JjUqYqW3Bn7DRe4giDYCRg==", "oRyhAjin9zDFrVJ94meovg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        byte byte15 = webSocketClient0.randomByte();
        java.lang.String str16 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor17 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 31 + "'", byte14 == (byte) 31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -8 + "'", byte15 == (byte) -8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str16 + "' != '" + "nY6UIMVO2c8Q/DQ+VoJjEA==" + "'", str16.equals("nY6UIMVO2c8Q/DQ+VoJjEA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient0.executor = executor14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient13.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient10.request = httpRequest21;
        webSocketClient1.request = httpRequest21;
        boolean boolean24 = webSocketClient1.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = null;
        webSocketClient25.exceptionHandler = uncaughtExceptionHandler27;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient25.exceptionHandler;
        org.jboss.netty.channel.Channel channel30 = webSocketClient25.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient25.exceptionHandler = uncaughtExceptionHandler31;
        byte byte33 = webSocketClient25.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        boolean boolean40 = webSocketClient34.ssl;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient34.remoteAddress = inetSocketAddress41;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient43.request;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient43.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor47 = webSocketClient46.executor;
        org.webbitserver.WebSocketHandler webSocketHandler48 = webSocketClient46.webSocketHandler;
        webSocketClient34.webSocketHandler = webSocketHandler48;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = webSocketClient34.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler51 = webSocketClient34.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = webSocketClient34.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient53.request;
        java.io.InputStream inputStream55 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = webSocketClient53.setupSsl(inputStream55, "hi!");
        java.lang.String str58 = webSocketClient53.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory59 = null;
        webSocketClient53.sslFactory = sslFactory59;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient53.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler64 = null;
        webSocketClient53.ioExceptionHandler = uncaughtExceptionHandler64;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest67 = webSocketClient66.request;
        org.webbitserver.netty.WebSocketClient webSocketClient69 = webSocketClient66.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler70 = null;
        webSocketClient69.ioExceptionHandler = uncaughtExceptionHandler70;
        org.webbitserver.WebSocketHandler webSocketHandler72 = webSocketClient69.webSocketHandler;
        webSocketClient53.webSocketHandler = webSocketHandler72;
        webSocketClient34.webSocketHandler = webSocketHandler72;
        webSocketClient25.webSocketHandler = webSocketHandler72;
        webSocketClient1.webSocketHandler = webSocketHandler72;
        java.util.concurrent.Executor executor77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler72, executor77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -64 + "'", byte8 == (byte) -64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte33 + "' != '" + (byte) -85 + "'", byte33 == (byte) -85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler72);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 123 + "'", byte7 == (byte) 123);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 67);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 57);
        webSocketClient14.base64Nonce = "Yh4IiLaYYJTT7hRrjvbhDg==";
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient14.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient14.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket19 = webSocketClient14.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient4.sslFactory;
        org.jboss.netty.channel.Channel channel18 = webSocketClient4.channel;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient4.remoteAddress;
        byte byte20 = webSocketClient4.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 18 + "'", byte20 == (byte) 18);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient7.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient10.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient10.webSocketHandler;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient10.setupSsl(inputStream15, "unFH0DAf3w/1wj3Abw+zqw==");
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient10.sslFactory;
        webSocketClient0.sslFactory = sslFactory18;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient0.bootstrap = clientBootstrap21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 114 + "'", byte5 == (byte) 114);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "aMmy9AegPotJEQXzzEme1A==";
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("c4NQk7UL8fFN+mgKc2RY8w==", "JuTkirO2XQy3cs/95AjdEw==");
        boolean boolean35 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient41.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient41.remoteAddress = inetSocketAddress43;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient41.remoteAddress = inetSocketAddress45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient41.ioExceptionHandler;
        byte byte48 = webSocketClient41.randomByte();
        webSocketClient41.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient41.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient36.request = httpRequest53;
        webSocketClient0.request = httpRequest53;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 25 + "'", byte7 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) 47 + "'", byte48 == (byte) 47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient0.sslFactory;
        boolean boolean6 = webSocketClient0.ssl;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "lmazsbxlfzYugxcFF2gLlg==");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        java.net.InetSocketAddress inetSocketAddress45 = webSocketClient44.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = webSocketClient49.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler53 = webSocketClient49.webSocketHandler;
        webSocketClient44.webSocketHandler = webSocketHandler53;
        webSocketClient13.webSocketHandler = webSocketHandler53;
        webSocketClient9.webSocketHandler = webSocketHandler53;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler53);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient5.sslFactory;
        org.jboss.netty.channel.Channel channel12 = webSocketClient5.channel;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient44.bootstrap = clientBootstrap45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient44.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient0.sslFactory;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient3.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient8.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler12;
        boolean boolean14 = webSocketClient8.ssl;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient8.setupSsl(inputStream15, "qarzn/wst91HHejDapWaKw==");
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        boolean boolean24 = webSocketClient18.ssl;
        boolean boolean25 = webSocketClient18.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient18.sslFactory = sslFactory32;
        webSocketClient17.sslFactory = sslFactory32;
        webSocketClient3.sslFactory = sslFactory32;
        boolean boolean36 = webSocketClient3.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient0.remoteAddress = inetSocketAddress12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -56 + "'", byte7 == (byte) -56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient9.sslFactory = sslFactory27;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient9.sslFactory = sslFactory36;
        webSocketClient0.sslFactory = sslFactory36;
        webSocketClient0.ssl = true;
        webSocketClient0.base64Nonce = "Rv+NCwYBYzPtQ15IguHTwQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("eNi5cjJqGD3lefzona7k5Q==", "lAAYOR/++eEWNNZWI17j6A==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 100);
        java.lang.String str11 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient22.exceptionHandler = uncaughtExceptionHandler24;
        java.util.concurrent.Executor executor26 = webSocketClient22.executor;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient22.remoteAddress = inetSocketAddress27;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient22.setupSsl(inputStream29, "NIeUQne0DpCs1Nxr8tuK8A==");
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = null;
        webSocketClient35.ioExceptionHandler = uncaughtExceptionHandler36;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient35.webSocketHandler;
        webSocketClient31.webSocketHandler = webSocketHandler38;
        webSocketClient12.webSocketHandler = webSocketHandler38;
        webSocketClient0.webSocketHandler = webSocketHandler38;
        java.net.InetSocketAddress inetSocketAddress42 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -108 + "'", byte7 == (byte) -108);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 71 + "'", byte19 == (byte) 71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory43);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        webSocketClient0.ssl = true;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient0.setupSsl(inputStream15, "YetQOfNoh0oaR7VDQA4prA==");
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient18.reconnectEvery((-1L));
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient18.setupSsl(inputStream26, "hi!");
        byte byte29 = webSocketClient18.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient18.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler30;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient17.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) -120 + "'", byte29 == (byte) -120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler30);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient9.sslFactory = sslFactory27;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient9.sslFactory = sslFactory36;
        webSocketClient0.sslFactory = sslFactory36;
        webSocketClient0.ssl = true;
        java.lang.String str41 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "h1VkhsY41fgHrCOFTXrJ1A==" + "'", str41.equals("h1VkhsY41fgHrCOFTXrJ1A=="));
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient11.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient0.base64Nonce();
        byte byte15 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "seXOjPGoYh8zyTNZDNhUtA==" + "'", str14.equals("seXOjPGoYh8zyTNZDNhUtA=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -113 + "'", byte15 == (byte) -113);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 53 + "'", byte7 == (byte) 53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 67);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient0.setupSsl(inputStream49, "4uBbgP2HIdNm4sY7r0I4zA==");
        java.io.InputStream inputStream52 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = webSocketClient51.setupSsl(inputStream52, "sbOtBi4Wzx3aK0weepbWbQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient51.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "g22LpgGzwnJx0OqI6z+ujg==";
        boolean boolean7 = webSocketClient0.ssl;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "QmjVoy7QQOlbNggLtzKiDw==");
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "g22LpgGzwnJx0OqI6z+ujg==" + "'", str11.equals("g22LpgGzwnJx0OqI6z+ujg=="));
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "Qcte7QApBrCGUnOcmDbVEw==" + "'", str6.equals("Qcte7QApBrCGUnOcmDbVEw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient10.ioExceptionHandler;
        byte byte17 = webSocketClient10.randomByte();
        webSocketClient10.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient20.exceptionHandler = uncaughtExceptionHandler22;
        java.util.concurrent.Executor executor24 = webSocketClient20.executor;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient20.remoteAddress = inetSocketAddress25;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient20.setupSsl(inputStream27, "NIeUQne0DpCs1Nxr8tuK8A==");
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient30.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler34;
        org.webbitserver.WebSocketHandler webSocketHandler36 = webSocketClient33.webSocketHandler;
        webSocketClient29.webSocketHandler = webSocketHandler36;
        webSocketClient10.webSocketHandler = webSocketHandler36;
        webSocketClient1.webSocketHandler = webSocketHandler36;
        java.util.concurrent.Executor executor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler36, executor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -29 + "'", byte8 == (byte) -29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -31 + "'", byte17 == (byte) -31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler36);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.reconnectEvery((long) (byte) 110);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "g22LpgGzwnJx0OqI6z+ujg==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "GGtu7/7CxVWnyR+Ia2aRnA==" + "'", str5.equals("GGtu7/7CxVWnyR+Ia2aRnA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient9.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient3.reconnectEvery((long) (byte) -39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "hM4sMJgfCuCOxYM1B4jJJA==";
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient0.setupSsl(inputStream35, "nmX6m6NrGd3tFGrVsiAXqA==");
        byte byte38 = webSocketClient37.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -63 + "'", byte7 == (byte) -63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte38 + "' != '" + (byte) 24 + "'", byte38 == (byte) 24);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient12.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient12.reconnectEvery((long) (byte) 100);
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("ZunMqW7rgfhTEmDZwuFzCQ==", "YV7TJM07xvdaj/Ns6dqjHg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 4 + "'", byte19 == (byte) 4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 51 + "'", byte7 == (byte) 51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        java.lang.String str7 = webSocketClient3.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient3.exceptionHandler = uncaughtExceptionHandler8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient3.exceptionHandler;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient3.setupSsl(inputStream11, "f3OkcrtzTiXdTrpj6vvGAg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "vNiNfUPv9G0uSkrNDUdrXA==" + "'", str7.equals("vNiNfUPv9G0uSkrNDUdrXA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient6.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient6.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient6.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient0.request = httpRequest18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler20;
        webSocketClient0.base64Nonce = "m+JJhO8YQ6pjj45NUKnVhQ==";
        java.lang.String str24 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "m+JJhO8YQ6pjj45NUKnVhQ==" + "'", str24.equals("m+JJhO8YQ6pjj45NUKnVhQ=="));
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "NIeUQne0DpCs1Nxr8tuK8A==");
        java.lang.String str10 = webSocketClient0.base64Nonce;
        boolean boolean11 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 79;
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient3.bootstrap = clientBootstrap8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel9 = null;
        webSocketClient0.channel = channel9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.ioExceptionHandler;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient14.bootstrap = clientBootstrap15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient14.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory18 = null;
        webSocketClient14.sslFactory = sslFactory18;
        java.lang.String str20 = webSocketClient14.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient14.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient14.bootstrap;
        org.jboss.netty.channel.Channel channel23 = webSocketClient14.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = webSocketClient14.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient14.createNettyHttpRequest("pMbXX7HJYDFtAi/JrfYetw==", "kh6PyUatj9tg2JXvIznOFQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient14.createNettyHttpRequest("BO3xOV+Y+2xqyL8PR0yafA==", "eYR33Oq2aGqOFqT/1+PC/Q==");
        webSocketClient0.request = httpRequest30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient0.bootstrap = clientBootstrap24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("xAcnx5mX3gD0s84TE8vlFg==", "Nwu8mHsWPy8whML0YdVpew==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = null;
        webSocketClient0.bootstrap = clientBootstrap29;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 10 + "'", byte7 == (byte) 10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "/0U0jGJKwhKyMUzgupiFpw==" + "'", str31.equals("/0U0jGJKwhKyMUzgupiFpw=="));
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient8.sslFactory = sslFactory27;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient8.executor = executor30;
        boolean boolean32 = webSocketClient8.ssl;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient8.setupSsl(inputStream33, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient36.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient36.remoteAddress = inetSocketAddress38;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        webSocketClient36.remoteAddress = inetSocketAddress40;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient36.ioExceptionHandler;
        byte byte43 = webSocketClient36.randomByte();
        webSocketClient36.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient36.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient36.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler51 = webSocketClient50.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        webSocketClient50.remoteAddress = inetSocketAddress52;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        webSocketClient50.remoteAddress = inetSocketAddress54;
        boolean boolean56 = webSocketClient50.ssl;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient50.remoteAddress = inetSocketAddress57;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = webSocketClient59.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor63 = webSocketClient62.executor;
        org.webbitserver.WebSocketHandler webSocketHandler64 = webSocketClient62.webSocketHandler;
        webSocketClient50.webSocketHandler = webSocketHandler64;
        webSocketClient36.webSocketHandler = webSocketHandler64;
        org.webbitserver.helpers.SslFactory sslFactory67 = webSocketClient36.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient36.createNettyHttpRequest("c4NQk7UL8fFN+mgKc2RY8w==", "JuTkirO2XQy3cs/95AjdEw==");
        webSocketClient8.request = httpRequest70;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient8.sslFactory;
        webSocketClient0.sslFactory = sslFactory72;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) 94 + "'", byte43 == (byte) 94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        byte byte4 = webSocketClient0.randomByte();
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) -23 + "'", byte4 == (byte) -23);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        byte byte7 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = null;
        webSocketClient0.request = httpRequest8;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -114 + "'", byte7 == (byte) -114);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "kNkB+wz6h21tTDOUr3Qf7Q==" + "'", str5.equals("kNkB+wz6h21tTDOUr3Qf7Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient9.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient9.remoteAddress = inetSocketAddress13;
        boolean boolean15 = webSocketClient9.ssl;
        byte byte16 = webSocketClient9.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        webSocketClient17.sslFactory = sslFactory29;
        webSocketClient9.sslFactory = sslFactory29;
        webSocketClient0.sslFactory = sslFactory29;
        java.util.concurrent.Executor executor33 = webSocketClient0.executor;
        webSocketClient0.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient0.bootstrap = clientBootstrap36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "EpbJCpjPlImd2TUtLYL9ow==" + "'", str6.equals("EpbJCpjPlImd2TUtLYL9ow=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 103 + "'", byte16 == (byte) 103);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.channel.Channel channel27 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = null;
        webSocketClient28.bootstrap = clientBootstrap29;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = webSocketClient28.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient28.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient35.bootstrap = clientBootstrap36;
        java.net.InetSocketAddress inetSocketAddress38 = webSocketClient35.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient35.sslFactory = sslFactory39;
        java.lang.String str41 = webSocketClient35.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient42.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient42.remoteAddress = inetSocketAddress44;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient42.remoteAddress = inetSocketAddress46;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        java.io.InputStream inputStream50 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient48.setupSsl(inputStream50, "hi!");
        java.lang.String str53 = webSocketClient48.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory54 = webSocketClient48.sslFactory;
        webSocketClient42.sslFactory = sslFactory54;
        webSocketClient35.sslFactory = sslFactory54;
        java.util.concurrent.Executor executor57 = null;
        webSocketClient35.executor = executor57;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        java.io.InputStream inputStream61 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient59.setupSsl(inputStream61, "hi!");
        java.lang.String str64 = webSocketClient59.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory65 = webSocketClient59.sslFactory;
        webSocketClient35.sslFactory = sslFactory65;
        webSocketClient28.sslFactory = sslFactory65;
        org.webbitserver.helpers.SslFactory sslFactory68 = webSocketClient28.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler69 = webSocketClient28.exceptionHandler;
        java.io.InputStream inputStream70 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient72 = webSocketClient28.setupSsl(inputStream70, "c4NQk7UL8fFN+mgKc2RY8w==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest75 = webSocketClient72.createNettyHttpRequest("YV7TJM07xvdaj/Ns6dqjHg==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient0.request = httpRequest75;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest75);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "hM4sMJgfCuCOxYM1B4jJJA==";
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 120 + "'", byte7 == (byte) 120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient0.reconnectEvery((long) (byte) 18);
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler35;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient38.request;
        java.io.InputStream inputStream40 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient38.setupSsl(inputStream40, "hi!");
        java.lang.String str43 = webSocketClient38.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory44 = webSocketClient38.sslFactory;
        org.jboss.netty.channel.Channel channel45 = webSocketClient38.channel;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient38.sslFactory;
        webSocketClient33.sslFactory = sslFactory46;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap49 = null;
        webSocketClient48.bootstrap = clientBootstrap49;
        java.net.InetSocketAddress inetSocketAddress51 = webSocketClient48.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory52 = null;
        webSocketClient48.sslFactory = sslFactory52;
        java.lang.String str54 = webSocketClient48.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler56 = webSocketClient55.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient55.remoteAddress = inetSocketAddress57;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        webSocketClient55.remoteAddress = inetSocketAddress59;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest62 = webSocketClient61.request;
        java.io.InputStream inputStream63 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient65 = webSocketClient61.setupSsl(inputStream63, "hi!");
        java.lang.String str66 = webSocketClient61.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory67 = webSocketClient61.sslFactory;
        webSocketClient55.sslFactory = sslFactory67;
        webSocketClient48.sslFactory = sslFactory67;
        java.util.concurrent.Executor executor70 = null;
        webSocketClient48.executor = executor70;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient48.createNettyHttpRequest("", "");
        java.io.InputStream inputStream75 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient77 = webSocketClient48.setupSsl(inputStream75, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap78 = null;
        webSocketClient77.bootstrap = clientBootstrap78;
        org.webbitserver.WebSocketHandler webSocketHandler80 = webSocketClient77.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory81 = webSocketClient77.sslFactory;
        webSocketClient33.sslFactory = sslFactory81;
        org.webbitserver.helpers.SslFactory sslFactory83 = webSocketClient33.sslFactory;
        webSocketClient0.sslFactory = sslFactory83;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap85 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "IbySr/MDJj4F1pLr0WdIlQ==" + "'", str27.equals("IbySr/MDJj4F1pLr0WdIlQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap85);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        webSocketClient29.base64Nonce = "cpk7yudA1v1rxr0L7C1qKA==";
        java.lang.String str35 = webSocketClient29.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "cpk7yudA1v1rxr0L7C1qKA==" + "'", str35.equals("cpk7yudA1v1rxr0L7C1qKA=="));
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("NIeUQne0DpCs1Nxr8tuK8A==", "hi!");
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient0.sslFactory = sslFactory10;
        boolean boolean12 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler45;
        java.net.InetSocketAddress inetSocketAddress47 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress47);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        byte byte11 = webSocketClient10.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient10.exceptionHandler;
        webSocketClient10.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient10.bootstrap = clientBootstrap15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 115 + "'", byte11 == (byte) 115);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient3.bootstrap;
        byte byte5 = webSocketClient3.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient6.request;
        org.jboss.netty.channel.Channel channel13 = webSocketClient6.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "PIK/YfZUGOZRmSxm7E9snw==");
        webSocketClient3.request = httpRequest16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = null;
        webSocketClient18.bootstrap = clientBootstrap19;
        java.net.InetSocketAddress inetSocketAddress21 = webSocketClient18.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory22 = null;
        webSocketClient18.sslFactory = sslFactory22;
        java.lang.String str24 = webSocketClient18.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient18.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient18.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient18.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient18.reconnectEvery((long) (byte) 112);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient18.createNettyHttpRequest("XoPMfzxHCgC40O9gkI2x7Q==", "Rv+NCwYBYzPtQ15IguHTwQ==");
        webSocketClient3.request = httpRequest32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -16 + "'", byte5 == (byte) -16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient7.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient7.bootstrap;
        org.jboss.netty.channel.Channel channel16 = webSocketClient7.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient17.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient17.exceptionHandler = uncaughtExceptionHandler21;
        boolean boolean23 = webSocketClient17.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient24.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.setupSsl(inputStream37, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean40 = webSocketClient36.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient36.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler41;
        webSocketClient7.webSocketHandler = webSocketHandler41;
        webSocketClient0.webSocketHandler = webSocketHandler41;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient0.bootstrap = clientBootstrap45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        java.lang.Class<?> wildcardClass11 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 109 + "'", byte8 == (byte) 109);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "lg8T47MNGMlOCQI8UVN2XA==" + "'", str6.equals("lg8T47MNGMlOCQI8UVN2XA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        byte byte10 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "twU9SszQ5Vd1c3QP/DvG/A==";
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "RaCzLjruOl8bVw/BsG9TKQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 38 + "'", byte10 == (byte) 38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "k5ydhXL0lplxlsfhWrzSaw==" + "'", str8.equals("k5ydhXL0lplxlsfhWrzSaw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "VD9ZNWhyrHkMAjcvD/PAuA==" + "'", str11.equals("VD9ZNWhyrHkMAjcvD/PAuA=="));
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        webSocketClient0.base64Nonce = "zsa/3QkBq8Ai8pie8+yNZw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -54);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (byte) -34);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("xAcnx5mX3gD0s84TE8vlFg==", "fXaF1l3/VNk+/4rPSlqdqQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient9.exceptionHandler;
        java.lang.String str17 = webSocketClient9.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str17 + "' != '" + "/YgywCn5EIIYD0NoQ2Z3hw==" + "'", str17.equals("/YgywCn5EIIYD0NoQ2Z3hw=="));
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient15.request = httpRequest28;
        byte byte30 = webSocketClient15.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient15.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = null;
        webSocketClient15.ioExceptionHandler = uncaughtExceptionHandler32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) -79 + "'", byte30 == (byte) -79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "unFH0DAf3w/1wj3Abw+zqw==");
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "Lj+UkW+8ZnepNfSL3fjHhA==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient0.bootstrap = clientBootstrap24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("xAcnx5mX3gD0s84TE8vlFg==", "Nwu8mHsWPy8whML0YdVpew==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -114 + "'", byte7 == (byte) -114);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "uIyjMMzMWqM+U1okVSwqKQ==" + "'", str6.equals("uIyjMMzMWqM+U1okVSwqKQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        java.lang.String str6 = webSocketClient0.base64Nonce;
        byte byte7 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 88 + "'", byte7 == (byte) 88);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient11.bootstrap;
        org.jboss.netty.channel.Channel channel20 = webSocketClient11.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = webSocketClient11.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient11.createNettyHttpRequest("pMbXX7HJYDFtAi/JrfYetw==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient0.request = httpRequest24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient32.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient32.remoteAddress = inetSocketAddress34;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient32.remoteAddress = inetSocketAddress36;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient38.request;
        java.io.InputStream inputStream40 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient38.setupSsl(inputStream40, "hi!");
        java.lang.String str43 = webSocketClient38.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory44 = webSocketClient38.sslFactory;
        webSocketClient32.sslFactory = sslFactory44;
        webSocketClient26.sslFactory = sslFactory44;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient47.request;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient47.setupSsl(inputStream49, "hi!");
        java.lang.String str52 = webSocketClient47.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory53 = webSocketClient47.sslFactory;
        webSocketClient26.sslFactory = sslFactory53;
        webSocketClient0.sslFactory = sslFactory53;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler56 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler56;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory53);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient13.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient13.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient20.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient20.sslFactory = sslFactory24;
        java.lang.String str26 = webSocketClient20.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = webSocketClient33.sslFactory;
        webSocketClient27.sslFactory = sslFactory39;
        webSocketClient20.sslFactory = sslFactory39;
        java.util.concurrent.Executor executor42 = null;
        webSocketClient20.executor = executor42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        java.io.InputStream inputStream46 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient44.setupSsl(inputStream46, "hi!");
        java.lang.String str49 = webSocketClient44.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient44.sslFactory;
        webSocketClient20.sslFactory = sslFactory50;
        webSocketClient13.sslFactory = sslFactory50;
        org.webbitserver.helpers.SslFactory sslFactory53 = webSocketClient13.sslFactory;
        webSocketClient0.sslFactory = sslFactory53;
        webSocketClient0.base64Nonce = "qarzn/wst91HHejDapWaKw==";
        java.util.concurrent.Executor executor57 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor57);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 97;
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("c4NQk7UL8fFN+mgKc2RY8w==", "aMNY9PyytDjO1qi2rsMR9g==");
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "g22LpgGzwnJx0OqI6z+ujg==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        boolean boolean11 = webSocketClient8.ssl;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient8.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap20 = null;
        webSocketClient13.bootstrap = clientBootstrap20;
        java.util.concurrent.Executor executor22 = webSocketClient13.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient13.reconnectEvery((long) (byte) -128);
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient25.ioExceptionHandler;
        byte byte32 = webSocketClient25.randomByte();
        webSocketClient25.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient25.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient25.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient39.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient39.remoteAddress = inetSocketAddress41;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient39.remoteAddress = inetSocketAddress43;
        boolean boolean45 = webSocketClient39.ssl;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient39.remoteAddress = inetSocketAddress46;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient48.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor52 = webSocketClient51.executor;
        org.webbitserver.WebSocketHandler webSocketHandler53 = webSocketClient51.webSocketHandler;
        webSocketClient39.webSocketHandler = webSocketHandler53;
        webSocketClient25.webSocketHandler = webSocketHandler53;
        webSocketClient13.webSocketHandler = webSocketHandler53;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient57.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        webSocketClient57.remoteAddress = inetSocketAddress59;
        java.net.InetSocketAddress inetSocketAddress61 = null;
        webSocketClient57.remoteAddress = inetSocketAddress61;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient57.reconnectEvery((-1L));
        java.io.InputStream inputStream65 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient67 = webSocketClient57.setupSsl(inputStream65, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient57.createNettyHttpRequest("aaXXqReQsFlvTSrUNgSnPQ==", "9LyIHio+Z6T8rhLhoMHTAQ==");
        webSocketClient13.request = httpRequest70;
        webSocketClient8.request = httpRequest70;
        org.webbitserver.WebSocketHandler webSocketHandler73 = webSocketClient8.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "mU+7CMCAWnQ9NijwdVnSMg==" + "'", str5.equals("mU+7CMCAWnQ9NijwdVnSMg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str19 + "' != '" + "HNky04brbIRXnVitOhWgEw==" + "'", str19.equals("HNky04brbIRXnVitOhWgEw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte32 + "' != '" + (byte) 16 + "'", byte32 == (byte) 16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler73);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "m+JJhO8YQ6pjj45NUKnVhQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.String str41 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap42 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "JGDU40lJDYdZGTNz8xlpfw==" + "'", str41.equals("JGDU40lJDYdZGTNz8xlpfw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap42);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient0.bootstrap = clientBootstrap12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient16.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient19.ioExceptionHandler = uncaughtExceptionHandler20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient19.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient19.webSocketHandler;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient19.setupSsl(inputStream24, "unFH0DAf3w/1wj3Abw+zqw==");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient19.setupSsl(inputStream27, "cpk7yudA1v1rxr0L7C1qKA==");
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient35.ioExceptionHandler;
        byte byte42 = webSocketClient35.randomByte();
        webSocketClient35.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient35.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient30.request = httpRequest47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        java.io.InputStream inputStream51 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient49.setupSsl(inputStream51, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient54.request;
        java.io.InputStream inputStream56 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = webSocketClient54.setupSsl(inputStream56, "hi!");
        java.lang.String str59 = webSocketClient54.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory60 = null;
        webSocketClient54.sslFactory = sslFactory60;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient54.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient53.request = httpRequest64;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient53.sslFactory;
        webSocketClient30.sslFactory = sslFactory66;
        webSocketClient19.sslFactory = sslFactory66;
        webSocketClient0.sslFactory = sslFactory66;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte42 + "' != '" + (byte) 120 + "'", byte42 == (byte) 120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "K/oJCd7uEd6QP2iRoedKpw==";
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery(10L);
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "hZCkmx6u2kCk4AVksZXEFA==";
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient13.sslFactory = sslFactory19;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient13.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        webSocketClient12.request = httpRequest23;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient12.sslFactory;
        org.jboss.netty.channel.Channel channel26 = webSocketClient12.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = null;
        webSocketClient27.bootstrap = clientBootstrap28;
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient27.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory31 = null;
        webSocketClient27.sslFactory = sslFactory31;
        java.lang.String str33 = webSocketClient27.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient40.setupSsl(inputStream42, "hi!");
        java.lang.String str45 = webSocketClient40.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient40.sslFactory;
        webSocketClient34.sslFactory = sslFactory46;
        webSocketClient27.sslFactory = sslFactory46;
        java.util.concurrent.Executor executor49 = null;
        webSocketClient27.executor = executor49;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient27.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient27.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "hi!");
        java.net.InetSocketAddress inetSocketAddress57 = webSocketClient27.remoteAddress;
        java.lang.String str58 = webSocketClient27.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress59 = webSocketClient27.remoteAddress;
        org.jboss.netty.channel.Channel channel60 = null;
        webSocketClient27.channel = channel60;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler62 = webSocketClient27.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap64 = null;
        webSocketClient63.bootstrap = clientBootstrap64;
        java.net.InetSocketAddress inetSocketAddress66 = webSocketClient63.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory67 = null;
        webSocketClient63.sslFactory = sslFactory67;
        java.lang.String str69 = webSocketClient63.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient70 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler71 = webSocketClient70.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        webSocketClient70.remoteAddress = inetSocketAddress72;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        webSocketClient70.remoteAddress = inetSocketAddress74;
        org.webbitserver.netty.WebSocketClient webSocketClient76 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest77 = webSocketClient76.request;
        java.io.InputStream inputStream78 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient80 = webSocketClient76.setupSsl(inputStream78, "hi!");
        java.lang.String str81 = webSocketClient76.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory82 = webSocketClient76.sslFactory;
        webSocketClient70.sslFactory = sslFactory82;
        webSocketClient63.sslFactory = sslFactory82;
        java.util.concurrent.Executor executor85 = null;
        webSocketClient63.executor = executor85;
        boolean boolean87 = webSocketClient63.ssl;
        org.webbitserver.helpers.SslFactory sslFactory88 = webSocketClient63.sslFactory;
        webSocketClient27.sslFactory = sslFactory88;
        webSocketClient12.sslFactory = sslFactory88;
        webSocketClient0.sslFactory = sslFactory88;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "lzZKduCy4Is8AXi4pwWGIA==" + "'", str5.equals("lzZKduCy4Is8AXi4pwWGIA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str58 + "' != '" + "C7PdMqxQcwzmV6D+aYemHw==" + "'", str58.equals("C7PdMqxQcwzmV6D+aYemHw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory88);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        webSocketClient0.ssl = false;
        org.jboss.netty.channel.Channel channel23 = null;
        webSocketClient0.channel = channel23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "qdpJlpYUISwO2rAmvpfYmQ==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("kh6PyUatj9tg2JXvIznOFQ==", "PIK/YfZUGOZRmSxm7E9snw==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient12.reconnectEvery((long) (byte) -54);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient12.bootstrap = clientBootstrap22;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient12.reconnectEvery(0L);
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient12.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient12.createNettyHttpRequest("V0xVa3Ev8bRfSZpboCLmxg==", "SsJ3kNJZXS3hvwNb8Wzixg==");
        webSocketClient0.request = httpRequest29;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient0.bootstrap = clientBootstrap31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient11.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient11.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient11.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient11.webSocketHandler;
        org.jboss.netty.channel.Channel channel21 = webSocketClient11.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient22.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory26 = null;
        webSocketClient22.sslFactory = sslFactory26;
        java.lang.String str28 = webSocketClient22.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient22.webSocketHandler;
        java.lang.String str30 = webSocketClient22.base64Nonce;
        org.jboss.netty.channel.Channel channel31 = webSocketClient22.channel;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient22.sslFactory;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient22.channel = channel33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient35.bootstrap = clientBootstrap36;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap38 = webSocketClient35.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap40 = null;
        webSocketClient39.bootstrap = clientBootstrap40;
        java.net.InetSocketAddress inetSocketAddress42 = webSocketClient39.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient39.sslFactory = sslFactory43;
        java.lang.String str45 = webSocketClient39.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient46.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient46.remoteAddress = inetSocketAddress48;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        webSocketClient46.remoteAddress = inetSocketAddress50;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient52.request;
        java.io.InputStream inputStream54 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = webSocketClient52.setupSsl(inputStream54, "hi!");
        java.lang.String str57 = webSocketClient52.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory58 = webSocketClient52.sslFactory;
        webSocketClient46.sslFactory = sslFactory58;
        webSocketClient39.sslFactory = sslFactory58;
        java.util.concurrent.Executor executor61 = null;
        webSocketClient39.executor = executor61;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest65 = webSocketClient39.createNettyHttpRequest("", "");
        webSocketClient35.request = httpRequest65;
        webSocketClient22.request = httpRequest65;
        webSocketClient11.request = httpRequest65;
        webSocketClient0.request = httpRequest65;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -59 + "'", byte7 == (byte) -59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest65);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        webSocketClient0.ssl = false;
        boolean boolean8 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        boolean boolean6 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        webSocketClient16.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient16.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient30.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient30.remoteAddress = inetSocketAddress32;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient30.remoteAddress = inetSocketAddress34;
        boolean boolean36 = webSocketClient30.ssl;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient30.remoteAddress = inetSocketAddress37;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient39.request;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient39.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor43 = webSocketClient42.executor;
        org.webbitserver.WebSocketHandler webSocketHandler44 = webSocketClient42.webSocketHandler;
        webSocketClient30.webSocketHandler = webSocketHandler44;
        webSocketClient16.webSocketHandler = webSocketHandler44;
        org.webbitserver.helpers.SslFactory sslFactory47 = webSocketClient16.sslFactory;
        byte byte48 = webSocketClient16.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler49;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "XuTMlYKn/fqHXGQUuS6DBg==" + "'", str10.equals("XuTMlYKn/fqHXGQUuS6DBg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 102 + "'", byte23 == (byte) 102);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) 61 + "'", byte48 == (byte) 61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler49);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -86);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "R9urokU3Uz5a07SnHOVHqQ==" + "'", str8.equals("R9urokU3Uz5a07SnHOVHqQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "unFH0DAf3w/1wj3Abw+zqw==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient10.executor = executor12;
        java.lang.String str14 = webSocketClient10.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "ZBqpVWnlLJefOyPI5PSALA==" + "'", str14.equals("ZBqpVWnlLJefOyPI5PSALA=="));
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -49);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 43);
        java.lang.String str17 = webSocketClient16.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = null;
        webSocketClient16.request = httpRequest18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        webSocketClient0.ssl = true;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "S8J8XYHWy4KgV2Q08SgNgA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -8 + "'", byte8 == (byte) -8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel15 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "UH5Z34tVxWE8JUOAPJTuXQ==" + "'", str11.equals("UH5Z34tVxWE8JUOAPJTuXQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel15);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) ' ');
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 45 + "'", byte7 == (byte) 45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 67);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient20.sslFactory = sslFactory32;
        webSocketClient13.sslFactory = sslFactory32;
        java.util.concurrent.Executor executor35 = null;
        webSocketClient13.executor = executor35;
        boolean boolean37 = webSocketClient13.ssl;
        org.webbitserver.helpers.SslFactory sslFactory38 = webSocketClient13.sslFactory;
        webSocketClient12.sslFactory = sslFactory38;
        webSocketClient12.ssl = false;
        webSocketClient12.base64Nonce = "gnnIi6z0ETxffmvf0U4W3Q==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory38);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.net.InetSocketAddress inetSocketAddress6 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress6);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) '4');
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("c4NQk7UL8fFN+mgKc2RY8w==", "JuTkirO2XQy3cs/95AjdEw==");
        webSocketClient0.ssl = true;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 33 + "'", byte7 == (byte) 33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler45;
        java.util.concurrent.Executor executor47 = null;
        webSocketClient0.executor = executor47;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor3 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient4.exceptionHandler = uncaughtExceptionHandler7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient4.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient4.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient4.remoteAddress = inetSocketAddress13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.setupSsl(inputStream17, "hi!");
        java.lang.String str20 = webSocketClient15.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient15.sslFactory = sslFactory21;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient15.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient15.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient27.setupSsl(inputStream28, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel31 = null;
        webSocketClient27.channel = channel31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient33.ioExceptionHandler;
        byte byte40 = webSocketClient33.randomByte();
        webSocketClient33.base64Nonce = "kh6PyUatj9tg2JXvIznOFQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient33.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient33.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        java.io.InputStream inputStream50 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient48.setupSsl(inputStream50, "hi!");
        java.lang.String str53 = webSocketClient48.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory54 = webSocketClient48.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient48.createNettyHttpRequest("XMOqcL6RioVrh4n1e4jPvg==", "hZCkmx6u2kCk4AVksZXEFA==");
        webSocketClient33.request = httpRequest57;
        webSocketClient27.request = httpRequest57;
        webSocketClient4.request = httpRequest57;
        webSocketClient0.request = httpRequest57;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient62.request;
        java.io.InputStream inputStream64 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = webSocketClient62.setupSsl(inputStream64, "hi!");
        java.lang.String str67 = webSocketClient62.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory68 = null;
        webSocketClient62.sslFactory = sslFactory68;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest72 = webSocketClient62.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient74 = webSocketClient62.reconnectEvery((long) (byte) 0);
        java.io.InputStream inputStream75 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient77 = webSocketClient74.setupSsl(inputStream75, "");
        org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler79 = webSocketClient78.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        webSocketClient78.remoteAddress = inetSocketAddress80;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        webSocketClient78.remoteAddress = inetSocketAddress82;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest86 = webSocketClient78.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "m+JJhO8YQ6pjj45NUKnVhQ==");
        java.net.InetSocketAddress inetSocketAddress87 = webSocketClient78.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest90 = webSocketClient78.createNettyHttpRequest("jOBgZDdkRpw9zMPU3eGgEA==", "kh6PyUatj9tg2JXvIznOFQ==");
        webSocketClient77.request = httpRequest90;
        org.webbitserver.netty.WebSocketClient webSocketClient93 = webSocketClient77.reconnectEvery((long) (byte) 122);
        org.webbitserver.helpers.SslFactory sslFactory94 = webSocketClient93.sslFactory;
        webSocketClient0.sslFactory = sslFactory94;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte40 + "' != '" + (byte) 19 + "'", byte40 == (byte) 19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory94);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) '4');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient3.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("m+JJhO8YQ6pjj45NUKnVhQ==", "g22LpgGzwnJx0OqI6z+ujg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 0);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        webSocketClient0.ssl = false;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        org.webbitserver.helpers.SslFactory sslFactory3 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "m4+LHjbxtlRYuvXk2vtGtQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory3);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient10.channel = channel11;
        byte byte13 = webSocketClient10.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient10.webSocketHandler;
        java.lang.Class<?> wildcardClass15 = webSocketClient10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 17 + "'", byte13 == (byte) 17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.createNettyHttpRequest("1YdxRs3ecGx3WMaK8L3cpQ==", "1YdxRs3ecGx3WMaK8L3cpQ==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient8.sslFactory = sslFactory27;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient8.executor = executor30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient8.createNettyHttpRequest("", "");
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient8.setupSsl(inputStream35, "");
        java.net.InetSocketAddress inetSocketAddress38 = webSocketClient37.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient39.request;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient39.reconnectEvery((long) '4');
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient42.ioExceptionHandler = uncaughtExceptionHandler43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient42.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler46 = webSocketClient42.webSocketHandler;
        webSocketClient37.webSocketHandler = webSocketHandler46;
        webSocketClient0.webSocketHandler = webSocketHandler46;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap49 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap49);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient7.channel = channel8;
        java.lang.String str10 = webSocketClient7.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient5.sslFactory;
        org.jboss.netty.channel.Channel channel12 = webSocketClient5.channel;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient44.bootstrap = clientBootstrap45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient44.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap51 = null;
        webSocketClient0.bootstrap = clientBootstrap51;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = null;
        webSocketClient0.request = httpRequest53;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
    }
}
