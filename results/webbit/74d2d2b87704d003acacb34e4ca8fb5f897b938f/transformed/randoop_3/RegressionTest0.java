import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        org.webbitserver.netty.WebSocketClient.nextId = 0L;
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        java.security.MessageDigest messageDigest0 = null;
        org.webbitserver.netty.WebSocketClient.SHA_1 = messageDigest0;
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        java.lang.String str0 = org.webbitserver.netty.WebSocketClient.ACCEPT_GUID;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "258EAFA5-E914-47DA-95CA-C5AB0DC85B11" + "'", str0.equals("258EAFA5-E914-47DA-95CA-C5AB0DC85B11"));
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        long long0 = org.webbitserver.netty.WebSocketClient.nextId;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + long0 + "' != '" + 0L + "'", long0 == 0L);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        java.net.URI uRI0 = null;
        org.webbitserver.WebSocketHandler webSocketHandler1 = null;
        java.util.concurrent.Executor executor2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler1, executor2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        java.lang.Object obj0 = org.webbitserver.netty.WebSocketClient.nextId();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + obj0 + "' != '" + 0L + "'", obj0.equals(0L));
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.security.MessageDigest messageDigest0 = org.webbitserver.netty.WebSocketClient.SHA_1;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(messageDigest0);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        org.webbitserver.netty.WebSocketClient.nextId = (short) 10;
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket4 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "hi!";
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket4 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = httpRequest1.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "";
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -59 + "'", byte7 == (byte) -59);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.lang.String str4 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 100;
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        java.net.URI uRI0 = null;
        org.webbitserver.WebSocketHandler webSocketHandler1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient2 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        java.lang.Class<?> wildcardClass23 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 47 + "'", byte7 == (byte) 47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "U3FlvOLl6vpxMDI+CXsVpQ==";
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket6 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket6 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -53 + "'", byte7 == (byte) -53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.lang.Class<?> wildcardClass8 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient4.ioExceptionHandler = uncaughtExceptionHandler5;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient4.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        byte byte6 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 48 + "'", byte6 == (byte) 48);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient4.ioExceptionHandler = uncaughtExceptionHandler5;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient4.webSocketHandler;
        java.util.concurrent.Executor executor8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler7, executor8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        org.webbitserver.netty.WebSocketClient.nextId = '4';
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient4.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = null;
        webSocketClient0.channel = channel7;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -111;
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 10;
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        webSocketClient5.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -29 + "'", byte12 == (byte) -29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "CHGXx458GFa6jP+om1GnIg==";
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient9.sslFactory = sslFactory15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient9.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient0.request = httpRequest19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 44 + "'", byte7 == (byte) 44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.lang.String str12 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "F7Hu/CDEmIwz50ueyQZKeg==" + "'", str12.equals("F7Hu/CDEmIwz50ueyQZKeg=="));
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "87IaVZmYieQp9v9Lk92Z/A==";
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "7X9ZYv2xQt5NIwYdYOGhrQ==" + "'", str5.equals("7X9ZYv2xQt5NIwYdYOGhrQ=="));
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Class<?> wildcardClass16 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "Pt2mVcEDzUkUAzbe4kuIMQ==";
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient14.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient17.ioExceptionHandler = uncaughtExceptionHandler18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient17.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler20;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler20);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket7 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor5 = webSocketClient4.executor;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient4.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "AFoQF0t68UvsqzH/GQvIFg==" + "'", str6.equals("AFoQF0t68UvsqzH/GQvIFg=="));
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -51;
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        java.lang.Class<?> wildcardClass26 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Class<?> wildcardClass3 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "iyUtV+54p7P3j/zLv8nNOA==" + "'", str27.equals("iyUtV+54p7P3j/zLv8nNOA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient9.sslFactory = sslFactory15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient9.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient0.request = httpRequest19;
        java.util.concurrent.Executor executor21 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 74 + "'", byte7 == (byte) 74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor21);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.lang.Class<?> wildcardClass30 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient4.ioExceptionHandler = uncaughtExceptionHandler5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient4.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient4.webSocketHandler;
        java.util.concurrent.Executor executor9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler8, executor9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler8);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket6 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        byte byte12 = webSocketClient0.randomByte();
        java.lang.Class<?> wildcardClass13 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -61 + "'", byte12 == (byte) -61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        java.lang.Class<?> wildcardClass10 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 74;
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 44);
        java.lang.String str13 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.channel.Channel channel24 = null;
        webSocketClient0.channel = channel24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient26.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest34;
        byte byte36 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) 100 + "'", byte36 == (byte) 100);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "CHGXx458GFa6jP+om1GnIg==";
        java.lang.Class<?> wildcardClass9 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "MYdrGfWiSVMRsdDIDXezXQ==" + "'", str6.equals("MYdrGfWiSVMRsdDIDXezXQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -2 + "'", byte7 == (byte) -2);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        boolean boolean8 = webSocketClient3.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient6.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "06Oadg/fiDuuYOcR6gJJhA==";
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket5 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        boolean boolean9 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        webSocketClient1.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        boolean boolean21 = webSocketClient15.ssl;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient15.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient24.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient27.webSocketHandler;
        webSocketClient15.webSocketHandler = webSocketHandler29;
        webSocketClient1.webSocketHandler = webSocketHandler29;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -96 + "'", byte8 == (byte) -96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler29);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor5 = webSocketClient4.executor;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient4.webSocketHandler;
        java.util.concurrent.Executor executor7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler6, executor7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        org.webbitserver.netty.WebSocketClient.nextId = (short) 100;
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "PEljskQ4OmFgyYokGdvCkg==";
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "5wOStwe/UHG+2WijRk+VYg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.createNettyHttpRequest("CHGXx458GFa6jP+om1GnIg==", "Q9WOUJoP+6G2eao5Y01Nyg==");
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -67;
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 44);
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        java.lang.Class<?> wildcardClass30 = webSocketClient29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket41 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient3.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -1);
        boolean boolean8 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("06Oadg/fiDuuYOcR6gJJhA==", "5wOStwe/UHG+2WijRk+VYg==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket11 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "3GE0KmEQkiBrQTYA0XIaiw==" + "'", str5.equals("3GE0KmEQkiBrQTYA0XIaiw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress6 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress6);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient29.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient29.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -67 + "'", byte7 == (byte) -67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "QW91xng7nDM6sKp9digixA==";
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient0.bootstrap = clientBootstrap8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "Gpd9gbH+lBuiIvmrH5KqTw==" + "'", str7.equals("Gpd9gbH+lBuiIvmrH5KqTw=="));
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.String str3 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "XKA7ryM2vStKenTYC6ouLA==" + "'", str10.equals("XKA7ryM2vStKenTYC6ouLA=="));
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket23 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 3 + "'", byte7 == (byte) 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -24;
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "rSGlfouMwWmqikOsGX4unw==";
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        boolean boolean7 = webSocketClient1.ssl;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient1.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient13.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler15;
        java.util.concurrent.Executor executor17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler15, executor17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        boolean boolean7 = webSocketClient1.ssl;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient1.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient13.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler15;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "MYdrGfWiSVMRsdDIDXezXQ==";
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        java.lang.Class<?> wildcardClass10 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        byte byte17 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient0.remoteAddress = inetSocketAddress18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 73 + "'", byte17 == (byte) 73);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -1);
        java.lang.Class<?> wildcardClass8 = webSocketClient7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -1);
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.channel.Channel channel11 = webSocketClient10.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel11);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.setupSsl(inputStream17, "hi!");
        java.lang.String str20 = webSocketClient15.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient15.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient15.createNettyHttpRequest("F7Hu/CDEmIwz50ueyQZKeg==", "7X9ZYv2xQt5NIwYdYOGhrQ==");
        webSocketClient0.request = httpRequest24;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 41 + "'", byte7 == (byte) 41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "fsH5EsEgKVXcAjx2Gz4aEQ==" + "'", str14.equals("fsH5EsEgKVXcAjx2Gz4aEQ=="));
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "on9gPoxhmT3G+46Zi1GtBA==";
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient11.setupSsl(inputStream13, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        java.lang.String str21 = webSocketClient16.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory22 = null;
        webSocketClient16.sslFactory = sslFactory22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient16.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient15.request = httpRequest26;
        webSocketClient0.request = httpRequest26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -44 + "'", byte7 == (byte) -44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient12.createNettyHttpRequest("WwFRL4L2U2LpPEbZs+o+pQ==", "VvQOGfTUE/NsQ+Sz8zX2Tg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 11 + "'", byte6 == (byte) 11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "XcTSL5ohkIRqhg3MrCUQKw==" + "'", str7.equals("XcTSL5ohkIRqhg3MrCUQKw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        java.util.concurrent.Executor executor17 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        webSocketClient1.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        boolean boolean21 = webSocketClient15.ssl;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient15.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient24.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient27.webSocketHandler;
        webSocketClient15.webSocketHandler = webSocketHandler29;
        webSocketClient1.webSocketHandler = webSocketHandler29;
        java.util.concurrent.Executor executor32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler29, executor32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -71 + "'", byte8 == (byte) -71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler29);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket5 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.createNettyHttpRequest("fDZhezd3CtjFRudLyo0K/Q==", "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap12);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        webSocketClient1.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient11.exceptionHandler = uncaughtExceptionHandler13;
        java.util.concurrent.Executor executor15 = webSocketClient11.executor;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient11.remoteAddress = inetSocketAddress16;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient11.setupSsl(inputStream18, "CHGXx458GFa6jP+om1GnIg==");
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient21.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient24.ioExceptionHandler = uncaughtExceptionHandler25;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient24.webSocketHandler;
        webSocketClient20.webSocketHandler = webSocketHandler27;
        webSocketClient1.webSocketHandler = webSocketHandler27;
        java.util.concurrent.Executor executor30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler27, executor30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -55 + "'", byte8 == (byte) -55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler27);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        java.util.concurrent.Executor executor5 = webSocketClient1.executor;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient1.remoteAddress = inetSocketAddress6;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.setupSsl(inputStream8, "CHGXx458GFa6jP+om1GnIg==");
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient11.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient14.ioExceptionHandler = uncaughtExceptionHandler15;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient14.webSocketHandler;
        webSocketClient10.webSocketHandler = webSocketHandler17;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -77;
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -77);
        boolean boolean12 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "7UYds4d0fBJe/48PxwYOEw==" + "'", str6.equals("7UYds4d0fBJe/48PxwYOEw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = uncaughtExceptionHandler16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap12);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "U3FlvOLl6vpxMDI+CXsVpQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        byte byte28 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -57 + "'", byte28 == (byte) -57);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -78 + "'", byte8 == (byte) -78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient9.remoteAddress = inetSocketAddress11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient40.setupSsl(inputStream42, "hi!");
        java.lang.String str45 = webSocketClient40.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient40.sslFactory;
        webSocketClient16.sslFactory = sslFactory46;
        webSocketClient9.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 24 + "'", byte6 == (byte) 24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "zwJJQDECC5gGeHGkMjLjLg==" + "'", str7.equals("zwJJQDECC5gGeHGkMjLjLg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        java.lang.Class<?> wildcardClass5 = webSocketClient3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient1.bootstrap = clientBootstrap8;
        java.util.concurrent.Executor executor10 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient1.reconnectEvery((long) (byte) -77);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient13.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient13.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        boolean boolean33 = webSocketClient27.ssl;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient27.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor40 = webSocketClient39.executor;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient39.webSocketHandler;
        webSocketClient27.webSocketHandler = webSocketHandler41;
        webSocketClient13.webSocketHandler = webSocketHandler41;
        webSocketClient1.webSocketHandler = webSocketHandler41;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "HOOenWs4TktuM0PierD3/A==" + "'", str7.equals("HOOenWs4TktuM0PierD3/A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) -95 + "'", byte20 == (byte) -95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient13.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient10.request = httpRequest21;
        webSocketClient1.request = httpRequest21;
        boolean boolean24 = webSocketClient1.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        boolean boolean31 = webSocketClient25.ssl;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient25.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient34.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor38 = webSocketClient37.executor;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient37.webSocketHandler;
        webSocketClient25.webSocketHandler = webSocketHandler39;
        webSocketClient1.webSocketHandler = webSocketHandler39;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 81 + "'", byte8 == (byte) 81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.util.concurrent.Executor executor20 = webSocketClient9.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket21 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient15.exceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        boolean boolean10 = webSocketClient0.ssl;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.setupSsl(inputStream11, "p5ngL0THXbeRF1F0/wo1oQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient0.createNettyHttpRequest("AkJq7p71JrpiiVkrjMUCgg==", "87IaVZmYieQp9v9Lk92Z/A==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 62 + "'", byte7 == (byte) 62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = executor9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "TvX1CZr4oLNwsdapskJOwg==" + "'", str6.equals("TvX1CZr4oLNwsdapskJOwg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("CHGXx458GFa6jP+om1GnIg==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "7UYds4d0fBJe/48PxwYOEw==";
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient0.bootstrap = clientBootstrap17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -77);
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient12.webSocketHandler = webSocketHandler40;
        webSocketClient0.webSocketHandler = webSocketHandler40;
        java.lang.Class<?> wildcardClass44 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "HEaiNgutAILePO4icyQ1lw==" + "'", str6.equals("HEaiNgutAILePO4icyQ1lw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -59 + "'", byte19 == (byte) -59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket11 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient4.sslFactory = sslFactory8;
        java.lang.String str10 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient4.sslFactory = sslFactory23;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient4.executor = executor26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient4.createNettyHttpRequest("", "");
        webSocketClient0.request = httpRequest30;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient0.ioExceptionHandler;
        java.util.concurrent.Executor executor33 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket9 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 127 + "'", byte6 == (byte) 127);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "7OzC1+9COcLgEmxXBvWERg==" + "'", str7.equals("7OzC1+9COcLgEmxXBvWERg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -99;
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient4.request = httpRequest15;
        java.lang.String str17 = webSocketClient4.base64Nonce;
        java.lang.String str18 = webSocketClient4.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "F7Hu/CDEmIwz50ueyQZKeg==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient9.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -14 + "'", byte10 == (byte) -14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -50;
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        webSocketClient0.base64Nonce = "hi!";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        java.lang.Class<?> wildcardClass23 = sslFactory20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 109 + "'", byte7 == (byte) 109);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 35 + "'", byte7 == (byte) 35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.lang.String str9 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "UuEikyIxS7UmYt/4QzBJfw==" + "'", str9.equals("UuEikyIxS7UmYt/4QzBJfw=="));
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.channel.Channel channel26 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel26);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        webSocketClient0.base64Nonce = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = webSocketClient1.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient1.reconnectEvery((long) (short) -1);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient8.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient10.ioExceptionHandler;
        byte byte17 = webSocketClient10.randomByte();
        webSocketClient10.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient10.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        boolean boolean30 = webSocketClient24.ssl;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient24.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor37 = webSocketClient36.executor;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient36.webSocketHandler;
        webSocketClient24.webSocketHandler = webSocketHandler38;
        webSocketClient10.webSocketHandler = webSocketHandler38;
        webSocketClient8.webSocketHandler = webSocketHandler38;
        java.util.concurrent.Executor executor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler38, executor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -121 + "'", byte17 == (byte) -121);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -85;
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient0.bootstrap = clientBootstrap17;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        java.util.concurrent.Executor executor21 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor21);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient3.request;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient3.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient6.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient6.webSocketHandler;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient6.setupSsl(inputStream11, "QW91xng7nDM6sKp9digixA==");
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        webSocketClient13.sslFactory = sslFactory34;
        webSocketClient0.sslFactory = sslFactory34;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient9.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -1);
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor5 = webSocketClient4.executor;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient4.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient7.sslFactory = sslFactory13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient7.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient7.ioExceptionHandler = uncaughtExceptionHandler18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient7.webSocketHandler = webSocketHandler26;
        webSocketClient4.webSocketHandler = webSocketHandler26;
        java.util.concurrent.Executor executor29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler26, executor29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.util.concurrent.Executor executor20 = webSocketClient9.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient9.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass29 = executor28.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient13.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient10.request = httpRequest21;
        webSocketClient1.request = httpRequest21;
        boolean boolean24 = webSocketClient1.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        boolean boolean31 = webSocketClient25.ssl;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient25.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient34.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor38 = webSocketClient37.executor;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient37.webSocketHandler;
        webSocketClient25.webSocketHandler = webSocketHandler39;
        webSocketClient1.webSocketHandler = webSocketHandler39;
        java.util.concurrent.Executor executor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39, executor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -39 + "'", byte8 == (byte) -39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        webSocketClient0.base64Nonce = "iyUtV+54p7P3j/zLv8nNOA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        byte byte12 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient0.sslFactory;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 61 + "'", byte7 == (byte) 61);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 115 + "'", byte12 == (byte) 115);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory21);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -111);
        java.lang.String str11 = webSocketClient0.base64Nonce;
        boolean boolean12 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -73 + "'", byte7 == (byte) -73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient6.sslFactory = sslFactory18;
        webSocketClient0.sslFactory = sslFactory18;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient0.request;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler24;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "2ylrHx+p1kw6ZH5Z28ul8w==";
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "jzgd91Yk0qkQUbl24ywoFA==" + "'", str6.equals("jzgd91Yk0qkQUbl24ywoFA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "QW91xng7nDM6sKp9digixA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient10.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "VQslhM4EWPWRMBCxIjRCzw==");
        java.lang.Class<?> wildcardClass10 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -86;
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -43;
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 36;
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = null;
        webSocketClient54.ioExceptionHandler = uncaughtExceptionHandler58;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap60 = webSocketClient54.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient54.createNettyHttpRequest("CHGXx458GFa6jP+om1GnIg==", "hi!");
        webSocketClient29.request = httpRequest63;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest63);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        boolean boolean7 = webSocketClient1.ssl;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient1.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient13.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient1.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient1.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = null;
        webSocketClient20.sslFactory = sslFactory26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient20.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient20.ioExceptionHandler = uncaughtExceptionHandler31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler37;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient36.webSocketHandler;
        webSocketClient20.webSocketHandler = webSocketHandler39;
        webSocketClient1.webSocketHandler = webSocketHandler39;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "xy5q7MicLpzszrqIXrsP0w==" + "'", str5.equals("xy5q7MicLpzszrqIXrsP0w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.String str18 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap18);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient29.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler34 = webSocketClient29.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler34);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient30.webSocketHandler = webSocketHandler52;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor5 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress6 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress6);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 11 + "'", byte7 == (byte) 11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "H+RzUVKGSa4AKid5zakMvA==" + "'", str10.equals("H+RzUVKGSa4AKid5zakMvA=="));
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = null;
        webSocketClient0.channel = channel16;
        java.lang.Class<?> wildcardClass18 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -51 + "'", byte7 == (byte) -51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 56;
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.lang.Class<?> wildcardClass8 = webSocketHandler7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient6.sslFactory = sslFactory12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient22.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient22.webSocketHandler;
        webSocketClient6.webSocketHandler = webSocketHandler25;
        webSocketClient3.webSocketHandler = webSocketHandler25;
        byte byte28 = webSocketClient3.randomByte();
        boolean boolean29 = webSocketClient3.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 42 + "'", byte28 == (byte) 42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel16 = null;
        webSocketClient12.channel = channel16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient18.ioExceptionHandler;
        byte byte25 = webSocketClient18.randomByte();
        webSocketClient18.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient18.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient18.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = webSocketClient33.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient33.createNettyHttpRequest("F7Hu/CDEmIwz50ueyQZKeg==", "7X9ZYv2xQt5NIwYdYOGhrQ==");
        webSocketClient18.request = httpRequest42;
        webSocketClient12.request = httpRequest42;
        java.lang.String str45 = webSocketClient12.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte25 + "' != '" + (byte) -83 + "'", byte25 == (byte) -83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str45 + "' != '" + "FbxKyyYhdVAK+Qjn88DdMg==" + "'", str45.equals("FbxKyyYhdVAK+Qjn88DdMg=="));
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "LyKqfnBQPll49ZqnWOoSDQ==";
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "5wOStwe/UHG+2WijRk+VYg==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket14 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 14 + "'", byte14 == (byte) 14);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "m1e5/2bOYn9yJMcP/jLAzQ==";
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient4.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient1.request = httpRequest12;
        java.util.concurrent.Executor executor14 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient15.exceptionHandler = uncaughtExceptionHandler17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient15.exceptionHandler;
        org.jboss.netty.channel.Channel channel20 = webSocketClient15.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient15.exceptionHandler = uncaughtExceptionHandler21;
        byte byte23 = webSocketClient15.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        boolean boolean30 = webSocketClient24.ssl;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient24.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor37 = webSocketClient36.executor;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient36.webSocketHandler;
        webSocketClient24.webSocketHandler = webSocketHandler38;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient24.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient24.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient24.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient43.request;
        java.io.InputStream inputStream45 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient43.setupSsl(inputStream45, "hi!");
        java.lang.String str48 = webSocketClient43.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory49 = null;
        webSocketClient43.sslFactory = sslFactory49;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient43.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = null;
        webSocketClient43.ioExceptionHandler = uncaughtExceptionHandler54;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient56.request;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = webSocketClient56.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler60 = null;
        webSocketClient59.ioExceptionHandler = uncaughtExceptionHandler60;
        org.webbitserver.WebSocketHandler webSocketHandler62 = webSocketClient59.webSocketHandler;
        webSocketClient43.webSocketHandler = webSocketHandler62;
        webSocketClient24.webSocketHandler = webSocketHandler62;
        webSocketClient15.webSocketHandler = webSocketHandler62;
        webSocketClient1.webSocketHandler = webSocketHandler62;
        java.util.concurrent.Executor executor67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient68 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler62, executor67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -25 + "'", byte23 == (byte) -25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler62);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        byte byte10 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 73 + "'", byte7 == (byte) 73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 58 + "'", byte10 == (byte) 58);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("ZJueaMnBchLOS1COAviMIg==", "QW91xng7nDM6sKp9digixA==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient4.request = httpRequest15;
        java.lang.String str17 = webSocketClient4.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient4.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient30.webSocketHandler = webSocketHandler52;
        java.util.concurrent.Executor executor55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler52, executor55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        boolean boolean12 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        boolean boolean4 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient4.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient1.request = httpRequest12;
        java.util.concurrent.Executor executor14 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient15.exceptionHandler = uncaughtExceptionHandler17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient15.exceptionHandler;
        org.jboss.netty.channel.Channel channel20 = webSocketClient15.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient15.exceptionHandler = uncaughtExceptionHandler21;
        byte byte23 = webSocketClient15.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        boolean boolean30 = webSocketClient24.ssl;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient24.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor37 = webSocketClient36.executor;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient36.webSocketHandler;
        webSocketClient24.webSocketHandler = webSocketHandler38;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient24.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient24.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient24.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient43.request;
        java.io.InputStream inputStream45 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient43.setupSsl(inputStream45, "hi!");
        java.lang.String str48 = webSocketClient43.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory49 = null;
        webSocketClient43.sslFactory = sslFactory49;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient43.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = null;
        webSocketClient43.ioExceptionHandler = uncaughtExceptionHandler54;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient56.request;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = webSocketClient56.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler60 = null;
        webSocketClient59.ioExceptionHandler = uncaughtExceptionHandler60;
        org.webbitserver.WebSocketHandler webSocketHandler62 = webSocketClient59.webSocketHandler;
        webSocketClient43.webSocketHandler = webSocketHandler62;
        webSocketClient24.webSocketHandler = webSocketHandler62;
        webSocketClient15.webSocketHandler = webSocketHandler62;
        webSocketClient1.webSocketHandler = webSocketHandler62;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient67 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -83 + "'", byte23 == (byte) -83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler62);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "U3FlvOLl6vpxMDI+CXsVpQ==");
        boolean boolean9 = webSocketClient8.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient8.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "jBdm3sBp6XkB7xcRAuh0rw==" + "'", str5.equals("jBdm3sBp6XkB7xcRAuh0rw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 48);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -76 + "'", byte7 == (byte) -76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket45 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        webSocketClient5.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient23.request = httpRequest34;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient23.sslFactory;
        webSocketClient0.sslFactory = sslFactory36;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient0.reconnectEvery((long) (byte) 12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 55 + "'", byte12 == (byte) 55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient14.exceptionHandler;
        org.jboss.netty.channel.Channel channel19 = webSocketClient14.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler20;
        byte byte22 = webSocketClient14.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        boolean boolean29 = webSocketClient23.ssl;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient23.remoteAddress = inetSocketAddress30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor36 = webSocketClient35.executor;
        org.webbitserver.WebSocketHandler webSocketHandler37 = webSocketClient35.webSocketHandler;
        webSocketClient23.webSocketHandler = webSocketHandler37;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient23.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient23.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient42.request;
        java.io.InputStream inputStream44 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient42.setupSsl(inputStream44, "hi!");
        java.lang.String str47 = webSocketClient42.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory48 = null;
        webSocketClient42.sslFactory = sslFactory48;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient42.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient42.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient55.request;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = webSocketClient55.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler59 = null;
        webSocketClient58.ioExceptionHandler = uncaughtExceptionHandler59;
        org.webbitserver.WebSocketHandler webSocketHandler61 = webSocketClient58.webSocketHandler;
        webSocketClient42.webSocketHandler = webSocketHandler61;
        webSocketClient23.webSocketHandler = webSocketHandler61;
        webSocketClient14.webSocketHandler = webSocketHandler61;
        webSocketClient0.webSocketHandler = webSocketHandler61;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient66 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) -26 + "'", byte22 == (byte) -26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler61);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient30.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = null;
        webSocketClient35.ioExceptionHandler = uncaughtExceptionHandler36;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = webSocketClient35.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient35.webSocketHandler;
        webSocketClient30.webSocketHandler = webSocketHandler39;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "QW91xng7nDM6sKp9digixA==");
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "LyKqfnBQPll49ZqnWOoSDQ==");
        java.lang.Class<?> wildcardClass13 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        java.lang.String str6 = webSocketClient4.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "LBAwXY0UeGR57jcsUB/d7A==" + "'", str6.equals("LBAwXY0UeGR57jcsUB/d7A=="));
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel36 = null;
        webSocketClient0.channel = channel36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "PEM78OaSCjIHjM4YIhpgWQ==" + "'", str31.equals("PEM78OaSCjIHjM4YIhpgWQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        org.jboss.netty.channel.Channel channel13 = null;
        webSocketClient12.channel = channel13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.Class<?> wildcardClass27 = httpRequest26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler5;
        boolean boolean7 = webSocketClient1.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        java.lang.String str13 = webSocketClient8.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory14 = null;
        webSocketClient8.sslFactory = sslFactory14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient8.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.setupSsl(inputStream21, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean24 = webSocketClient20.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient20.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler25;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor3 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("z3HAgNnZOS/3ppW7w870kg==", "Aky7OucMHlxkfXDgBuRXFw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        byte byte5 = webSocketClient3.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -97 + "'", byte5 == (byte) -97);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient30.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = null;
        webSocketClient35.ioExceptionHandler = uncaughtExceptionHandler36;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = webSocketClient35.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient35.webSocketHandler;
        webSocketClient30.webSocketHandler = webSocketHandler39;
        java.util.concurrent.Executor executor41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39, executor41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 35);
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient7.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket9 = webSocketClient7.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "EHodKVmTelM0wxkLguw7zA==" + "'", str5.equals("EHodKVmTelM0wxkLguw7zA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        webSocketClient0.base64Nonce = "AV/6XRXpf0miGh0LhOXVSA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.ssl = true;
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hroAVbgUuimV5ptUTBDs/g==" + "'", str11.equals("hroAVbgUuimV5ptUTBDs/g=="));
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        byte byte12 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 50 + "'", byte12 == (byte) 50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        boolean boolean13 = webSocketClient12.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        java.util.concurrent.Executor executor5 = webSocketClient1.executor;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient1.remoteAddress = inetSocketAddress6;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.setupSsl(inputStream8, "CHGXx458GFa6jP+om1GnIg==");
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient11.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient14.ioExceptionHandler = uncaughtExceptionHandler15;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient14.webSocketHandler;
        webSocketClient10.webSocketHandler = webSocketHandler17;
        java.util.concurrent.Executor executor19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler17, executor19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "4SqAi9wMGAFF00xfKI2QcA==" + "'", str11.equals("4SqAi9wMGAFF00xfKI2QcA=="));
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "FbxKyyYhdVAK+Qjn88DdMg==";
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.ssl = true;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient12.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "yF6v2kGJIETwsJp8LMpufA==" + "'", str18.equals("yF6v2kGJIETwsJp8LMpufA=="));
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -101 + "'", byte7 == (byte) -101);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 35);
        webSocketClient7.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "5wOStwe/UHG+2WijRk+VYg==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient14.bootstrap = clientBootstrap15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient14.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory18 = null;
        webSocketClient14.sslFactory = sslFactory18;
        java.lang.String str20 = webSocketClient14.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        boolean boolean29 = webSocketClient23.ssl;
        byte byte30 = webSocketClient23.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient31.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient31.remoteAddress = inetSocketAddress33;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient31.remoteAddress = inetSocketAddress35;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient37.setupSsl(inputStream39, "hi!");
        java.lang.String str42 = webSocketClient37.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient37.sslFactory;
        webSocketClient31.sslFactory = sslFactory43;
        webSocketClient23.sslFactory = sslFactory43;
        webSocketClient14.sslFactory = sslFactory43;
        webSocketClient0.sslFactory = sslFactory43;
        java.util.concurrent.Executor executor48 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str20 + "' != '" + "v+iFPEdANNSJQ8q7G49CzQ==" + "'", str20.equals("v+iFPEdANNSJQ8q7G49CzQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) -7 + "'", byte30 == (byte) -7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor48);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient0.remoteAddress = inetSocketAddress3;
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient29.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket31 = webSocketClient29.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "lGy/x7LNgp0pvpsbEltggA==" + "'", str8.equals("lGy/x7LNgp0pvpsbEltggA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket14 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler14;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -63 + "'", byte7 == (byte) -63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "rUbAjgCR1ZPUVqFzTWGSvQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.reconnectEvery((long) (byte) -82);
        boolean boolean20 = webSocketClient15.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = null;
        webSocketClient0.request = httpRequest7;
        webSocketClient0.base64Nonce = "F7Hu/CDEmIwz50ueyQZKeg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 87;
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 35);
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -53);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -73;
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "U3FlvOLl6vpxMDI+CXsVpQ==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient8.ioExceptionHandler = uncaughtExceptionHandler11;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient8.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "I8x7RLRveE8jrpmIKWqoqg==" + "'", str5.equals("I8x7RLRveE8jrpmIKWqoqg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = webSocketClient1.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient1.reconnectEvery((long) (short) -1);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient8.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient10.ioExceptionHandler;
        byte byte17 = webSocketClient10.randomByte();
        webSocketClient10.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient10.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        boolean boolean30 = webSocketClient24.ssl;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient24.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor37 = webSocketClient36.executor;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient36.webSocketHandler;
        webSocketClient24.webSocketHandler = webSocketHandler38;
        webSocketClient10.webSocketHandler = webSocketHandler38;
        webSocketClient8.webSocketHandler = webSocketHandler38;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -92 + "'", byte17 == (byte) -92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient1.exceptionHandler;
        org.jboss.netty.channel.Channel channel6 = webSocketClient1.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler7;
        byte byte9 = webSocketClient1.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        boolean boolean16 = webSocketClient10.ssl;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient10.remoteAddress = inetSocketAddress17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor23 = webSocketClient22.executor;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient22.webSocketHandler;
        webSocketClient10.webSocketHandler = webSocketHandler24;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient10.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient10.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = null;
        webSocketClient29.sslFactory = sslFactory35;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient29.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = null;
        webSocketClient29.ioExceptionHandler = uncaughtExceptionHandler40;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient42.request;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = webSocketClient42.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = null;
        webSocketClient45.ioExceptionHandler = uncaughtExceptionHandler46;
        org.webbitserver.WebSocketHandler webSocketHandler48 = webSocketClient45.webSocketHandler;
        webSocketClient29.webSocketHandler = webSocketHandler48;
        webSocketClient10.webSocketHandler = webSocketHandler48;
        webSocketClient1.webSocketHandler = webSocketHandler48;
        java.util.concurrent.Executor executor52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler48, executor52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -82 + "'", byte9 == (byte) -82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler48);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "PRH2Sp6FpTWZOChNk/bFKw==";
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        boolean boolean13 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient30.webSocketHandler = webSocketHandler52;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient30.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "7X9ZYv2xQt5NIwYdYOGhrQ==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("KPc73elYF/SgQkxEopT2Wg==", "UuEikyIxS7UmYt/4QzBJfw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "sWWCE82zkajv3yBd4GBpsA==" + "'", str5.equals("sWWCE82zkajv3yBd4GBpsA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "AkJq7p71JrpiiVkrjMUCgg==";
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler12;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("F7Hu/CDEmIwz50ueyQZKeg==", "7X9ZYv2xQt5NIwYdYOGhrQ==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("on9gPoxhmT3G+46Zi1GtBA==", "6M000+f2UkV215OepH8f5Q==");
        boolean boolean35 = webSocketClient0.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket36 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 63 + "'", byte7 == (byte) 63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("rUbAjgCR1ZPUVqFzTWGSvQ==", "chOBDans79lVWPAf++Xdcw==");
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "PJwTFUOYZeKZzWWl7kXxOA==" + "'", str6.equals("PJwTFUOYZeKZzWWl7kXxOA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel7 = null;
        webSocketClient0.channel = channel7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient5.exceptionHandler = uncaughtExceptionHandler8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        java.lang.String str21 = webSocketClient16.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory22 = webSocketClient16.sslFactory;
        webSocketClient10.sslFactory = sslFactory22;
        webSocketClient5.sslFactory = sslFactory22;
        webSocketClient3.sslFactory = sslFactory22;
        java.lang.String str26 = webSocketClient3.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = null;
        webSocketClient3.bootstrap = clientBootstrap27;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str26 + "' != '" + "aaHzOBhOo7J6Sb7Vmec2Ug==" + "'", str26.equals("aaHzOBhOo7J6Sb7Vmec2Ug=="));
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("CHGXx458GFa6jP+om1GnIg==", "hi!");
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient0.sslFactory = sslFactory10;
        java.lang.String str12 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "5UyTY53a02OPHzTYSZzCaQ==" + "'", str12.equals("5UyTY53a02OPHzTYSZzCaQ=="));
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        webSocketClient0.base64Nonce = "VSi6Yt5LMGGmzHV8u02ugA==";
        org.jboss.netty.channel.Channel channel25 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -111 + "'", byte7 == (byte) -111);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel25);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        webSocketClient0.base64Nonce = "YhOO5AOnufcxfd7bZQW7Vw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        byte byte12 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler13;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -102 + "'", byte12 == (byte) -102);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient13.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = null;
        webSocketClient17.bootstrap = clientBootstrap18;
        java.net.InetSocketAddress inetSocketAddress20 = webSocketClient17.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient17.sslFactory = sslFactory21;
        java.lang.String str23 = webSocketClient17.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient24.sslFactory = sslFactory36;
        webSocketClient17.sslFactory = sslFactory36;
        java.util.concurrent.Executor executor39 = null;
        webSocketClient17.executor = executor39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient17.createNettyHttpRequest("", "");
        webSocketClient13.request = httpRequest43;
        webSocketClient0.request = httpRequest43;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient1.sslFactory = sslFactory9;
        org.webbitserver.WebSocketHandler webSocketHandler11 = null;
        webSocketClient1.webSocketHandler = webSocketHandler11;
        byte byte13 = webSocketClient1.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient14.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient17.ioExceptionHandler = uncaughtExceptionHandler18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient17.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler20;
        java.util.concurrent.Executor executor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler20, executor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 116 + "'", byte8 == (byte) 116);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -61 + "'", byte13 == (byte) -61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler20);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) '#');
        java.lang.String str8 = webSocketClient7.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient7.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "yDkafWnQsuW/hL3dDLL3pw==" + "'", str8.equals("yDkafWnQsuW/hL3dDLL3pw=="));
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "5wOStwe/UHG+2WijRk+VYg==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("F7Hu/CDEmIwz50ueyQZKeg==", "7X9ZYv2xQt5NIwYdYOGhrQ==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.lang.String str9 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -30 + "'", byte7 == (byte) -30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 44);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -72);
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient14.sslFactory;
        org.webbitserver.helpers.SslFactory sslFactory16 = webSocketClient14.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory16);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient3.request = httpRequest13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient3.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.exceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        java.util.concurrent.Executor executor9 = null;
        webSocketClient1.executor = executor9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient11.request;
        org.jboss.netty.channel.Channel channel18 = webSocketClient11.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient11.reconnectEvery((long) 0);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient21.ioExceptionHandler;
        byte byte28 = webSocketClient21.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient21.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient33.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient30.request = httpRequest41;
        webSocketClient21.request = httpRequest41;
        boolean boolean44 = webSocketClient21.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient45.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient45.remoteAddress = inetSocketAddress47;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        webSocketClient45.remoteAddress = inetSocketAddress49;
        boolean boolean51 = webSocketClient45.ssl;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        webSocketClient45.remoteAddress = inetSocketAddress52;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient54.request;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = webSocketClient54.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor58 = webSocketClient57.executor;
        org.webbitserver.WebSocketHandler webSocketHandler59 = webSocketClient57.webSocketHandler;
        webSocketClient45.webSocketHandler = webSocketHandler59;
        webSocketClient21.webSocketHandler = webSocketHandler59;
        webSocketClient20.webSocketHandler = webSocketHandler59;
        webSocketClient1.webSocketHandler = webSocketHandler59;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient64 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -16 + "'", byte8 == (byte) -16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 74 + "'", byte28 == (byte) 74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler59);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 47;
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        org.webbitserver.netty.WebSocketClient.nextId = (short) 0;
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.channel.Channel channel30 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel30);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "F7Hu/CDEmIwz50ueyQZKeg==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "rUbAjgCR1ZPUVqFzTWGSvQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.reconnectEvery((long) (byte) -82);
        org.jboss.netty.channel.Channel channel20 = null;
        webSocketClient19.channel = channel20;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        byte byte6 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 70 + "'", byte6 == (byte) 70);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket11 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 67 + "'", byte8 == (byte) 67);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("06Oadg/fiDuuYOcR6gJJhA==", "5wOStwe/UHG+2WijRk+VYg==");
        byte byte14 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -6 + "'", byte14 == (byte) -6);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.jboss.netty.channel.Channel channel13 = webSocketClient9.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "i37Nsk7qJw2yADPohWSc+g==" + "'", str8.equals("i37Nsk7qJw2yADPohWSc+g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient29.sslFactory;
        webSocketClient29.base64Nonce = "AV/6XRXpf0miGh0LhOXVSA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket9 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient1.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.setupSsl(inputStream14, "");
        webSocketClient16.base64Nonce = "rUbAjgCR1ZPUVqFzTWGSvQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.reconnectEvery((long) (byte) -82);
        org.jboss.netty.channel.Channel channel21 = null;
        webSocketClient20.channel = channel21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient23.bootstrap = clientBootstrap24;
        java.net.InetSocketAddress inetSocketAddress26 = webSocketClient23.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory27 = null;
        webSocketClient23.sslFactory = sslFactory27;
        java.lang.String str29 = webSocketClient23.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient30.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient30.remoteAddress = inetSocketAddress32;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient30.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient36.sslFactory;
        webSocketClient30.sslFactory = sslFactory42;
        webSocketClient23.sslFactory = sslFactory42;
        java.util.concurrent.Executor executor45 = null;
        webSocketClient23.executor = executor45;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient23.createNettyHttpRequest("", "");
        java.io.InputStream inputStream50 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient23.setupSsl(inputStream50, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap53 = null;
        webSocketClient52.bootstrap = clientBootstrap53;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient55.request;
        java.io.InputStream inputStream57 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = webSocketClient55.setupSsl(inputStream57, "hi!");
        java.lang.String str60 = webSocketClient55.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory61 = null;
        webSocketClient55.sslFactory = sslFactory61;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest65 = webSocketClient55.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler66 = null;
        webSocketClient55.ioExceptionHandler = uncaughtExceptionHandler66;
        org.webbitserver.netty.WebSocketClient webSocketClient68 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest69 = webSocketClient68.request;
        org.webbitserver.netty.WebSocketClient webSocketClient71 = webSocketClient68.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler72 = null;
        webSocketClient71.ioExceptionHandler = uncaughtExceptionHandler72;
        org.webbitserver.WebSocketHandler webSocketHandler74 = webSocketClient71.webSocketHandler;
        webSocketClient55.webSocketHandler = webSocketHandler74;
        webSocketClient52.webSocketHandler = webSocketHandler74;
        webSocketClient20.webSocketHandler = webSocketHandler74;
        java.util.concurrent.Executor executor78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient79 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler74, executor78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler74);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -86 + "'", byte7 == (byte) -86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient3.request = httpRequest13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient3.remoteAddress = inetSocketAddress15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        java.lang.String str10 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "T2wrnZB1xT4X8ro7EeVKyg==" + "'", str6.equals("T2wrnZB1xT4X8ro7EeVKyg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient6.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient6.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient6.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "5wOStwe/UHG+2WijRk+VYg==");
        webSocketClient0.request = httpRequest18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler20;
        java.lang.String str22 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str22 + "' != '" + "F/iR4vGiW9uKXZDVea3R+A==" + "'", str22.equals("F/iR4vGiW9uKXZDVea3R+A=="));
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -108);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.request;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory7);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 20 + "'", byte7 == (byte) 20);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        org.jboss.netty.channel.Channel channel21 = null;
        webSocketClient0.channel = channel21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest3 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest3);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient14.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient17.ioExceptionHandler = uncaughtExceptionHandler18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient17.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler20;
        java.util.concurrent.Executor executor22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler20, executor22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler20);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        boolean boolean10 = webSocketClient0.ssl;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.setupSsl(inputStream11, "p5ngL0THXbeRF1F0/wo1oQ==");
        java.lang.String str14 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = null;
        webSocketClient0.request = httpRequest15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -49 + "'", byte7 == (byte) -49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "f0OaotAaC8KyT19T2Xnn4A==" + "'", str14.equals("f0OaotAaC8KyT19T2Xnn4A=="));
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.util.concurrent.Executor executor7 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -94;
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient0.bootstrap = clientBootstrap17;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        webSocketClient0.base64Nonce = "orO2DuduDU/xWJqcqVw2nQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "PEljskQ4OmFgyYokGdvCkg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor5 = webSocketClient4.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient6.bootstrap = clientBootstrap7;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient6.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient6.sslFactory = sslFactory10;
        java.lang.String str12 = webSocketClient6.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient13.sslFactory = sslFactory25;
        webSocketClient6.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = null;
        webSocketClient6.executor = executor28;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient6.createNettyHttpRequest("", "");
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient6.setupSsl(inputStream33, "");
        java.net.InetSocketAddress inetSocketAddress36 = webSocketClient35.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient37.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = null;
        webSocketClient40.ioExceptionHandler = uncaughtExceptionHandler41;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient40.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler44 = webSocketClient40.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler44;
        webSocketClient4.webSocketHandler = webSocketHandler44;
        java.util.concurrent.Executor executor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler44, executor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler44);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -108);
        boolean boolean7 = webSocketClient6.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -77);
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "HQue09D4/2s0DxIlBxNPaw==" + "'", str6.equals("HQue09D4/2s0DxIlBxNPaw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient1.sslFactory;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient1.channel = channel8;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient1.setupSsl(inputStream10, "PRH2Sp6FpTWZOChNk/bFKw==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient13.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient13.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        boolean boolean33 = webSocketClient27.ssl;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient27.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor40 = webSocketClient39.executor;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient39.webSocketHandler;
        webSocketClient27.webSocketHandler = webSocketHandler41;
        webSocketClient13.webSocketHandler = webSocketHandler41;
        webSocketClient1.webSocketHandler = webSocketHandler41;
        java.util.concurrent.Executor executor45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler41, executor45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 48 + "'", byte20 == (byte) 48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("rUbAjgCR1ZPUVqFzTWGSvQ==", "chOBDans79lVWPAf++Xdcw==");
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "iH4FjXxTHtqSkZaB1OMeNg==" + "'", str6.equals("iH4FjXxTHtqSkZaB1OMeNg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient1.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient1.reconnectEvery((long) (byte) -111);
        java.lang.String str12 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient23.exceptionHandler = uncaughtExceptionHandler25;
        java.util.concurrent.Executor executor27 = webSocketClient23.executor;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient23.remoteAddress = inetSocketAddress28;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient23.setupSsl(inputStream30, "CHGXx458GFa6jP+om1GnIg==");
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler37;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient36.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler39;
        webSocketClient13.webSocketHandler = webSocketHandler39;
        webSocketClient1.webSocketHandler = webSocketHandler39;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -51 + "'", byte8 == (byte) -51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 9 + "'", byte20 == (byte) 9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (short) -1);
        boolean boolean8 = webSocketClient7.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 20;
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.channel.Channel channel27 = null;
        webSocketClient0.channel = channel27;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient11.exceptionHandler = uncaughtExceptionHandler13;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient11.exceptionHandler;
        org.jboss.netty.channel.Channel channel16 = webSocketClient11.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient11.exceptionHandler = uncaughtExceptionHandler17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient11.createNettyHttpRequest("on9gPoxhmT3G+46Zi1GtBA==", "d/WTRA7OnVaYJB1cRWT1ew==");
        webSocketClient0.request = httpRequest21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -82 + "'", byte8 == (byte) -82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.lang.String str13 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "JQJUBdLga0RnVmzvYd+UhA==" + "'", str13.equals("JQJUBdLga0RnVmzvYd+UhA=="));
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.channel.Channel channel30 = null;
        webSocketClient29.channel = channel30;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient29.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "F7Hu/CDEmIwz50ueyQZKeg==");
        byte byte10 = webSocketClient9.randomByte();
        java.util.concurrent.Executor executor11 = webSocketClient9.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient9.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 123 + "'", byte10 == (byte) 123);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        byte byte4 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient5.sslFactory = sslFactory13;
        org.webbitserver.WebSocketHandler webSocketHandler15 = null;
        webSocketClient5.webSocketHandler = webSocketHandler15;
        byte byte17 = webSocketClient5.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient5.sslFactory = sslFactory24;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory26;
        java.lang.Class<?> wildcardClass28 = sslFactory26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 20 + "'", byte4 == (byte) 20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 31 + "'", byte12 == (byte) 31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 42 + "'", byte17 == (byte) 42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient5.exceptionHandler = uncaughtExceptionHandler8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        java.lang.String str21 = webSocketClient16.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory22 = webSocketClient16.sslFactory;
        webSocketClient10.sslFactory = sslFactory22;
        webSocketClient5.sslFactory = sslFactory22;
        webSocketClient3.sslFactory = sslFactory22;
        java.lang.String str26 = webSocketClient3.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str26 + "' != '" + "lkHDBWLDrsAhAInl0YBXbA==" + "'", str26.equals("lkHDBWLDrsAhAInl0YBXbA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "rUbAjgCR1ZPUVqFzTWGSvQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.reconnectEvery((long) (byte) -82);
        org.jboss.netty.channel.Channel channel20 = null;
        webSocketClient19.channel = channel20;
        org.jboss.netty.channel.Channel channel22 = null;
        webSocketClient19.channel = channel22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient4.sslFactory = sslFactory8;
        java.lang.String str10 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient4.sslFactory = sslFactory23;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient4.executor = executor26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient4.createNettyHttpRequest("", "");
        webSocketClient0.request = httpRequest30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = null;
        webSocketClient0.bootstrap = clientBootstrap32;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket34 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "H+RzUVKGSa4AKid5zakMvA==";
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient5.sslFactory;
        org.jboss.netty.channel.Channel channel12 = webSocketClient5.channel;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient44.bootstrap = clientBootstrap45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient44.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        java.lang.String str50 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str50 + "' != '" + "JuK2XlcRXwF0AkfFSZkyyA==" + "'", str50.equals("JuK2XlcRXwF0AkfFSZkyyA=="));
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient0.setupSsl(inputStream35, "sI1tyB/o7q+Ajy6HI4Y5ng==");
        org.jboss.netty.channel.Channel channel38 = null;
        webSocketClient0.channel = channel38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "62epmH5f5jmMUz2fNRXeoQ==" + "'", str31.equals("62epmH5f5jmMUz2fNRXeoQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "f0OaotAaC8KyT19T2Xnn4A==";
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "CHGXx458GFa6jP+om1GnIg==");
        org.jboss.netty.channel.Channel channel10 = webSocketClient9.channel;
        java.lang.String str11 = webSocketClient9.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient9.bootstrap = clientBootstrap12;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient9.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        java.lang.String str10 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "+gUqKgi2n9s2WqiqUaYioQ==" + "'", str10.equals("+gUqKgi2n9s2WqiqUaYioQ=="));
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.ssl = true;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient12.exceptionHandler;
        java.util.concurrent.Executor executor20 = webSocketClient12.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "guAto8ybLUOzjaOOo2DgFw==" + "'", str18.equals("guAto8ybLUOzjaOOo2DgFw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        byte byte15 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = null;
        webSocketClient21.sslFactory = sslFactory27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient21.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient20.request = httpRequest31;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient20.sslFactory;
        webSocketClient0.sslFactory = sslFactory33;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 120 + "'", byte14 == (byte) 120);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 29 + "'", byte15 == (byte) 29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -77);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "c6PCrFKQm6tfDSG1JwxRjg==" + "'", str6.equals("c6PCrFKQm6tfDSG1JwxRjg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -111);
        java.util.concurrent.Executor executor11 = null;
        webSocketClient10.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 32 + "'", byte7 == (byte) 32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "orO2DuduDU/xWJqcqVw2nQ==";
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor31 = webSocketClient0.executor;
        java.lang.String str32 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str32 + "' != '" + "LqMUjGnQlH4kQ7AMpBoFZA==" + "'", str32.equals("LqMUjGnQlH4kQ7AMpBoFZA=="));
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient3.remoteAddress = inetSocketAddress6;
        webSocketClient3.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 48);
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket18 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -13 + "'", byte7 == (byte) -13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "5wOStwe/UHG+2WijRk+VYg==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient14.bootstrap = clientBootstrap15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient14.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory18 = null;
        webSocketClient14.sslFactory = sslFactory18;
        java.lang.String str20 = webSocketClient14.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient14.sslFactory = sslFactory33;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient14.executor = executor36;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient14.createNettyHttpRequest("", "");
        java.io.InputStream inputStream41 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient14.setupSsl(inputStream41, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap46 = null;
        webSocketClient43.bootstrap = clientBootstrap46;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient43.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        java.lang.Class<?> wildcardClass50 = sslFactory48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient1.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient1.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "PEljskQ4OmFgyYokGdvCkg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient1.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient9.exceptionHandler;
        org.jboss.netty.channel.Channel channel14 = webSocketClient9.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler15;
        byte byte17 = webSocketClient9.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        boolean boolean24 = webSocketClient18.ssl;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient18.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient27.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor31 = webSocketClient30.executor;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient30.webSocketHandler;
        webSocketClient18.webSocketHandler = webSocketHandler32;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient18.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient18.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient18.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient37.setupSsl(inputStream39, "hi!");
        java.lang.String str42 = webSocketClient37.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient37.sslFactory = sslFactory43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient37.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = null;
        webSocketClient37.ioExceptionHandler = uncaughtExceptionHandler48;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient50.request;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient50.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = null;
        webSocketClient53.ioExceptionHandler = uncaughtExceptionHandler54;
        org.webbitserver.WebSocketHandler webSocketHandler56 = webSocketClient53.webSocketHandler;
        webSocketClient37.webSocketHandler = webSocketHandler56;
        webSocketClient18.webSocketHandler = webSocketHandler56;
        webSocketClient9.webSocketHandler = webSocketHandler56;
        webSocketClient1.webSocketHandler = webSocketHandler56;
        java.util.concurrent.Executor executor61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient62 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler56, executor61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 9 + "'", byte17 == (byte) 9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler56);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient8.sslFactory = sslFactory27;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient8.executor = executor30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient8.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient8.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        webSocketClient0.request = httpRequest37;
        java.lang.Class<?> wildcardClass39 = httpRequest37.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "FhCBe24heN0vJFmDBtxmnw==" + "'", str7.equals("FhCBe24heN0vJFmDBtxmnw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient0.remoteAddress;
        byte byte19 = webSocketClient0.randomByte();
        java.lang.Class<?> wildcardClass20 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -97 + "'", byte19 == (byte) -97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient4.sslFactory = sslFactory8;
        java.lang.String str10 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient4.sslFactory = sslFactory23;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient4.executor = executor26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient4.createNettyHttpRequest("", "");
        webSocketClient0.request = httpRequest30;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient0.ioExceptionHandler;
        java.lang.Class<?> wildcardClass33 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "U3FlvOLl6vpxMDI+CXsVpQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap29);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        byte byte12 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 72 + "'", byte7 == (byte) 72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -124 + "'", byte12 == (byte) -124);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("zwJJQDECC5gGeHGkMjLjLg==", "LyKqfnBQPll49ZqnWOoSDQ==");
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor31 = webSocketClient0.executor;
        java.lang.Class<?> wildcardClass32 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "InE3vZRWvJB+vjWgHyWOKw==";
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "XiNIB/4AZgf2Y4pw9eQuQQ==");
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.channel.Channel channel19 = webSocketClient10.channel;
        webSocketClient10.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient25.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient22.request = httpRequest33;
        webSocketClient10.request = httpRequest33;
        webSocketClient0.request = httpRequest33;
        boolean boolean37 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 25 + "'", byte7 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient7.sslFactory = sslFactory13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient7.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient7.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.setupSsl(inputStream20, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean23 = webSocketClient19.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient19.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler24;
        java.lang.String str26 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor27 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str26 + "' != '" + "rVWwiXgh/w+hY5Cz/Rf9aA==" + "'", str26.equals("rVWwiXgh/w+hY5Cz/Rf9aA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 49;
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        boolean boolean6 = webSocketClient0.ssl;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "orO2DuduDU/xWJqcqVw2nQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "xX6LXFt5mSr792oO2l3HAw==" + "'", str6.equals("xX6LXFt5mSr792oO2l3HAw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient1.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean17 = webSocketClient13.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient13.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -106 + "'", byte6 == (byte) -106);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "0sARTeZQj7gVQz72xXBqHg==" + "'", str7.equals("0sARTeZQj7gVQz72xXBqHg=="));
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient0.remoteAddress;
        byte byte19 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient0.remoteAddress = inetSocketAddress22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 119 + "'", byte19 == (byte) 119);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.lang.Class<?> wildcardClass12 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 90 + "'", byte8 == (byte) 90);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "dxIqK0SOXx7gXPmlsK0NEA==" + "'", str11.equals("dxIqK0SOXx7gXPmlsK0NEA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "JDiugy/aob21nQWbWHnkxA==";
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 63 + "'", byte7 == (byte) 63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = uncaughtExceptionHandler9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = null;
        webSocketClient29.ioExceptionHandler = uncaughtExceptionHandler32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        byte byte12 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.reconnectEvery((long) (byte) -56);
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -37 + "'", byte7 == (byte) -37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 108 + "'", byte12 == (byte) 108);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.ssl = true;
        java.lang.Class<?> wildcardClass15 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.channel.Channel channel27 = null;
        webSocketClient0.channel = channel27;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient0.webSocketHandler;
        java.util.concurrent.Executor executor30 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        boolean boolean10 = webSocketClient0.ssl;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.setupSsl(inputStream11, "p5ngL0THXbeRF1F0/wo1oQ==");
        java.lang.String str14 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient15.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient15.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = webSocketClient32.sslFactory;
        webSocketClient26.sslFactory = sslFactory38;
        webSocketClient15.sslFactory = sslFactory38;
        webSocketClient0.sslFactory = sslFactory38;
        byte byte42 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 43 + "'", byte7 == (byte) 43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "UqtKn+zEfXaPcWTf0P19JA==" + "'", str14.equals("UqtKn+zEfXaPcWTf0P19JA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte42 + "' != '" + (byte) -12 + "'", byte42 == (byte) -12);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "6JUF98kMn7O4YRupQpgUEA==" + "'", str11.equals("6JUF98kMn7O4YRupQpgUEA=="));
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        boolean boolean9 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient10.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory14 = null;
        webSocketClient10.sslFactory = sslFactory14;
        java.lang.String str16 = webSocketClient10.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        webSocketClient17.sslFactory = sslFactory29;
        webSocketClient10.sslFactory = sslFactory29;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient10.executor = executor32;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient10.createNettyHttpRequest("", "");
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient10.setupSsl(inputStream37, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap40 = null;
        webSocketClient39.bootstrap = clientBootstrap40;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient39.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient39.sslFactory;
        webSocketClient0.sslFactory = sslFactory43;
        java.net.InetSocketAddress inetSocketAddress45 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress45);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient3.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "l1aAHLe5zvfrvVNw/tiyMQ==" + "'", str6.equals("l1aAHLe5zvfrvVNw/tiyMQ=="));
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "41tQ3nxNz9clUK+XubUbWA==";
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient3.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient3.reconnectEvery((long) (byte) -26);
        java.util.concurrent.Executor executor12 = null;
        webSocketClient3.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket11 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -102 + "'", byte7 == (byte) -102);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = null;
        webSocketClient0.channel = channel7;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "PRH2Sp6FpTWZOChNk/bFKw==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.base64Nonce = "1PLp1hTkQebAzOrytUXM5Q==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor5 = webSocketClient4.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient6.bootstrap = clientBootstrap7;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient6.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient6.sslFactory = sslFactory10;
        java.lang.String str12 = webSocketClient6.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient13.sslFactory = sslFactory25;
        webSocketClient6.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = null;
        webSocketClient6.executor = executor28;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient6.createNettyHttpRequest("", "");
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient6.setupSsl(inputStream33, "");
        java.net.InetSocketAddress inetSocketAddress36 = webSocketClient35.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient37.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = null;
        webSocketClient40.ioExceptionHandler = uncaughtExceptionHandler41;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient40.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler44 = webSocketClient40.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler44;
        webSocketClient4.webSocketHandler = webSocketHandler44;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler44);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient6.sslFactory = sslFactory12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient22.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient22.webSocketHandler;
        webSocketClient6.webSocketHandler = webSocketHandler25;
        webSocketClient3.webSocketHandler = webSocketHandler25;
        byte byte28 = webSocketClient3.randomByte();
        java.net.InetSocketAddress inetSocketAddress29 = webSocketClient3.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 78 + "'", byte28 == (byte) 78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress29);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        org.webbitserver.netty.WebSocketClient.nextId = 100;
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "0FPZtaw7a+f6MHEuwHMrsA==" + "'", str10.equals("0FPZtaw7a+f6MHEuwHMrsA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        java.lang.String str12 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("VQslhM4EWPWRMBCxIjRCzw==", "PEljskQ4OmFgyYokGdvCkg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.exceptionHandler;
        org.jboss.netty.channel.Channel channel13 = webSocketClient8.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler14;
        byte byte16 = webSocketClient8.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        boolean boolean23 = webSocketClient17.ssl;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient17.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient26.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor30 = webSocketClient29.executor;
        org.webbitserver.WebSocketHandler webSocketHandler31 = webSocketClient29.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler31;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient17.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient17.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient17.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = null;
        webSocketClient36.sslFactory = sslFactory42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient36.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient52.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient52.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler55;
        webSocketClient17.webSocketHandler = webSocketHandler55;
        webSocketClient8.webSocketHandler = webSocketHandler55;
        webSocketClient0.webSocketHandler = webSocketHandler55;
        java.lang.Class<?> wildcardClass60 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) -84 + "'", byte16 == (byte) -84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient1.sslFactory = sslFactory9;
        org.webbitserver.WebSocketHandler webSocketHandler11 = null;
        webSocketClient1.webSocketHandler = webSocketHandler11;
        byte byte13 = webSocketClient1.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient14.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient17.ioExceptionHandler = uncaughtExceptionHandler18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient17.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler20;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 32 + "'", byte8 == (byte) 32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -45 + "'", byte13 == (byte) -45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler20);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient3.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient9.setupSsl(inputStream36, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = null;
        webSocketClient38.bootstrap = clientBootstrap39;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient38.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient38.sslFactory;
        webSocketClient0.sslFactory = sslFactory42;
        java.lang.String str44 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient1.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel17 = null;
        webSocketClient13.channel = channel17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient19.ioExceptionHandler;
        byte byte26 = webSocketClient19.randomByte();
        webSocketClient19.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient19.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient19.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient34.createNettyHttpRequest("F7Hu/CDEmIwz50ueyQZKeg==", "7X9ZYv2xQt5NIwYdYOGhrQ==");
        webSocketClient19.request = httpRequest43;
        webSocketClient13.request = httpRequest43;
        org.webbitserver.WebSocketHandler webSocketHandler46 = webSocketClient13.webSocketHandler;
        java.util.concurrent.Executor executor47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler46, executor47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) 41 + "'", byte26 == (byte) 41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler46);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 116 + "'", byte7 == (byte) 116);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "QW91xng7nDM6sKp9digixA==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient10.bootstrap = clientBootstrap14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient10.sslFactory = sslFactory28;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -43 + "'", byte11 == (byte) -43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient0.remoteAddress = inetSocketAddress15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "PJwTFUOYZeKZzWWl7kXxOA==";
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) 123);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        webSocketClient0.ssl = true;
        byte byte12 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 14 + "'", byte12 == (byte) 14);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient29.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.ssl = true;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = null;
        webSocketClient12.ioExceptionHandler = uncaughtExceptionHandler19;
        org.jboss.netty.channel.Channel channel21 = null;
        webSocketClient12.channel = channel21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "0Ip7AyzVMmkVKTvHkGtFsw==" + "'", str18.equals("0Ip7AyzVMmkVKTvHkGtFsw=="));
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "kBbs+RTB1eQe/HLDhIgrEQ==";
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.reconnectEvery(0L);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient13.ioExceptionHandler = uncaughtExceptionHandler14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient3.setupSsl(inputStream7, "on9gPoxhmT3G+46Zi1GtBA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient1.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient1.bootstrap;
        org.jboss.netty.channel.Channel channel10 = webSocketClient1.channel;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient1.reconnectEvery((long) (byte) 44);
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient1.reconnectEvery((long) (byte) -72);
        webSocketClient15.base64Nonce = "ti8LpozsIOlOZG3+VERpRg==";
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient15.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        webSocketClient5.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient5.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 78 + "'", byte12 == (byte) 78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -77);
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient12.webSocketHandler = webSocketHandler40;
        webSocketClient0.webSocketHandler = webSocketHandler40;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient44.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient44.remoteAddress = inetSocketAddress46;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient44.remoteAddress = inetSocketAddress48;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient44.reconnectEvery((long) (byte) -1);
        java.io.InputStream inputStream52 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = webSocketClient44.setupSsl(inputStream52, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient44.createNettyHttpRequest("49yo6GgzeLSMAaUiJ0J+gw==", "rUbAjgCR1ZPUVqFzTWGSvQ==");
        webSocketClient0.request = httpRequest57;
        java.lang.Class<?> wildcardClass59 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "J3kISgGfb2l35aTfYosq/Q==" + "'", str6.equals("J3kISgGfb2l35aTfYosq/Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -114 + "'", byte19 == (byte) -114);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (short) 0);
        boolean boolean10 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        webSocketClient0.ssl = false;
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket15 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 47 + "'", byte7 == (byte) 47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -101);
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient14.sslFactory;
        org.jboss.netty.channel.Channel channel16 = null;
        webSocketClient14.channel = channel16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) 0);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient9.createNettyHttpRequest("aHYnwJp0T1RWhvhveY/nUA==", "d6/BZEoi/YJ46xnmQ7JbmQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient9.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient5.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient5.sslFactory = sslFactory9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient12.sslFactory = sslFactory24;
        webSocketClient5.sslFactory = sslFactory24;
        java.util.concurrent.Executor executor27 = null;
        webSocketClient5.executor = executor27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient5.createNettyHttpRequest("", "");
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient5.setupSsl(inputStream32, "");
        java.net.InetSocketAddress inetSocketAddress35 = webSocketClient34.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = null;
        webSocketClient39.ioExceptionHandler = uncaughtExceptionHandler40;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient39.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler43 = webSocketClient39.webSocketHandler;
        webSocketClient34.webSocketHandler = webSocketHandler43;
        webSocketClient3.webSocketHandler = webSocketHandler43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient3.createNettyHttpRequest("49yo6GgzeLSMAaUiJ0J+gw==", "J3kISgGfb2l35aTfYosq/Q==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest48);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "QW91xng7nDM6sKp9digixA==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient4.request;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient7.createNettyHttpRequest("", "");
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient7.setupSsl(inputStream34, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient36.bootstrap = clientBootstrap37;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = null;
        webSocketClient36.bootstrap = clientBootstrap39;
        org.webbitserver.helpers.SslFactory sslFactory41 = webSocketClient36.sslFactory;
        webSocketClient4.sslFactory = sslFactory41;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory41);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "U3FlvOLl6vpxMDI+CXsVpQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        byte byte30 = webSocketClient0.randomByte();
        java.lang.Class<?> wildcardClass31 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) -96 + "'", byte30 == (byte) -96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 44);
        java.util.concurrent.Executor executor13 = null;
        webSocketClient12.executor = executor13;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient12.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient15.ioExceptionHandler;
        byte byte22 = webSocketClient15.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory23 = null;
        webSocketClient15.sslFactory = sslFactory23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = null;
        webSocketClient15.webSocketHandler = webSocketHandler25;
        byte byte27 = webSocketClient15.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient15.sslFactory = sslFactory34;
        webSocketClient0.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient0.executor = executor37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 45 + "'", byte7 == (byte) 45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 38 + "'", byte22 == (byte) 38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) -110 + "'", byte27 == (byte) -110);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor16 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient0.bootstrap = clientBootstrap17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -22 + "'", byte14 == (byte) -22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor16);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("F7Hu/CDEmIwz50ueyQZKeg==", "7X9ZYv2xQt5NIwYdYOGhrQ==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient0.bootstrap = clientBootstrap12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient29.remoteAddress;
        org.jboss.netty.channel.Channel channel31 = webSocketClient29.channel;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient29.executor = executor32;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap34 = webSocketClient29.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap34);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "U3FlvOLl6vpxMDI+CXsVpQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "1PLp1hTkQebAzOrytUXM5Q==");
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient0.createNettyHttpRequest("2Gs5l3F/Yv+R9B//wCTIxw==", "05VuH0HkVrMDSyKqkU9OlA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest36);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 68 + "'", byte7 == (byte) 68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 35);
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient7.setupSsl(inputStream8, "VQslhM4EWPWRMBCxIjRCzw==");
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient7.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler11);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 23;
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient4.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient1.request = httpRequest12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient14.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient14.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient14.webSocketHandler = webSocketHandler52;
        webSocketClient1.webSocketHandler = webSocketHandler52;
        java.util.concurrent.Executor executor56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler52, executor56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        java.lang.String str10 = webSocketClient9.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "vhCn0DukxCdRWZXRgyJO4Q==" + "'", str10.equals("vhCn0DukxCdRWZXRgyJO4Q=="));
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor27 = null;
        webSocketClient0.executor = executor27;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient1.reconnectEvery((long) (byte) 76);
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.setupSsl(inputStream14, "");
        webSocketClient16.base64Nonce = "rUbAjgCR1ZPUVqFzTWGSvQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.reconnectEvery((long) (byte) -82);
        org.jboss.netty.channel.Channel channel21 = null;
        webSocketClient20.channel = channel21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient23.bootstrap = clientBootstrap24;
        java.net.InetSocketAddress inetSocketAddress26 = webSocketClient23.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory27 = null;
        webSocketClient23.sslFactory = sslFactory27;
        java.lang.String str29 = webSocketClient23.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient30.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient30.remoteAddress = inetSocketAddress32;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient30.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient36.sslFactory;
        webSocketClient30.sslFactory = sslFactory42;
        webSocketClient23.sslFactory = sslFactory42;
        java.util.concurrent.Executor executor45 = null;
        webSocketClient23.executor = executor45;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient23.createNettyHttpRequest("", "");
        java.io.InputStream inputStream50 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient23.setupSsl(inputStream50, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap53 = null;
        webSocketClient52.bootstrap = clientBootstrap53;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient55.request;
        java.io.InputStream inputStream57 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = webSocketClient55.setupSsl(inputStream57, "hi!");
        java.lang.String str60 = webSocketClient55.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory61 = null;
        webSocketClient55.sslFactory = sslFactory61;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest65 = webSocketClient55.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler66 = null;
        webSocketClient55.ioExceptionHandler = uncaughtExceptionHandler66;
        org.webbitserver.netty.WebSocketClient webSocketClient68 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest69 = webSocketClient68.request;
        org.webbitserver.netty.WebSocketClient webSocketClient71 = webSocketClient68.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler72 = null;
        webSocketClient71.ioExceptionHandler = uncaughtExceptionHandler72;
        org.webbitserver.WebSocketHandler webSocketHandler74 = webSocketClient71.webSocketHandler;
        webSocketClient55.webSocketHandler = webSocketHandler74;
        webSocketClient52.webSocketHandler = webSocketHandler74;
        webSocketClient20.webSocketHandler = webSocketHandler74;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler74);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str1 + "' != '" + "WiKOYwwv8afvNcJwl9MBAQ==" + "'", str1.equals("WiKOYwwv8afvNcJwl9MBAQ=="));
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("CHGXx458GFa6jP+om1GnIg==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient0.bootstrap = clientBootstrap37;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -7;
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel17 = null;
        webSocketClient0.channel = channel17;
        java.lang.String str19 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient9.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "hi!");
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 110 + "'", byte9 == (byte) 110);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        org.jboss.netty.channel.Channel channel19 = webSocketClient10.channel;
        webSocketClient10.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient25.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient22.request = httpRequest33;
        webSocketClient10.request = httpRequest33;
        webSocketClient0.request = httpRequest33;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient0.remoteAddress = inetSocketAddress37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 2 + "'", byte7 == (byte) 2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -62;
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 35);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient7.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient5.sslFactory;
        org.jboss.netty.channel.Channel channel12 = webSocketClient5.channel;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient44.bootstrap = clientBootstrap45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient44.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        java.lang.String str50 = webSocketClient0.base64Nonce;
        java.lang.Class<?> wildcardClass51 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) ' ');
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient12.reconnectEvery((long) (byte) -112);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient11.createNettyHttpRequest("5wOStwe/UHG+2WijRk+VYg==", "hi!");
        java.net.InetSocketAddress inetSocketAddress41 = webSocketClient11.remoteAddress;
        java.lang.String str42 = webSocketClient11.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress43 = webSocketClient11.remoteAddress;
        org.jboss.netty.channel.Channel channel44 = null;
        webSocketClient11.channel = channel44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient11.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap48 = null;
        webSocketClient47.bootstrap = clientBootstrap48;
        java.net.InetSocketAddress inetSocketAddress50 = webSocketClient47.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory51 = null;
        webSocketClient47.sslFactory = sslFactory51;
        java.lang.String str53 = webSocketClient47.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient60.sslFactory;
        webSocketClient54.sslFactory = sslFactory66;
        webSocketClient47.sslFactory = sslFactory66;
        java.util.concurrent.Executor executor69 = null;
        webSocketClient47.executor = executor69;
        boolean boolean71 = webSocketClient47.ssl;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient47.sslFactory;
        webSocketClient11.sslFactory = sslFactory72;
        webSocketClient0.sslFactory = sslFactory72;
        java.lang.String str75 = webSocketClient0.base64Nonce();
        org.webbitserver.WebSocketHandler webSocketHandler76 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest77 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "1l1eSFCtNZKMklk6Toj21Q==" + "'", str6.equals("1l1eSFCtNZKMklk6Toj21Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "mJUbXEVLRRsuchJPiyBNOg==" + "'", str42.equals("mJUbXEVLRRsuchJPiyBNOg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str75 + "' != '" + "oD6GRNAJB5S+/BnL2M41Xw==" + "'", str75.equals("oD6GRNAJB5S+/BnL2M41Xw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest77);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        byte byte11 = webSocketClient9.randomByte();
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient9.channel = channel12;
        java.lang.String str14 = webSocketClient9.base64Nonce();
        org.jboss.netty.channel.Channel channel15 = webSocketClient9.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -78 + "'", byte11 == (byte) -78);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "7HOgoMpjPfcNYTe/YM60qQ==" + "'", str14.equals("7HOgoMpjPfcNYTe/YM60qQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel15);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -3;
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "U3FlvOLl6vpxMDI+CXsVpQ==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        boolean boolean11 = webSocketClient8.ssl;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient8.channel = channel12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient8.reconnectEvery((long) (byte) -80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "zCKqxLGtslC2XSU1bCB8+Q==" + "'", str5.equals("zCKqxLGtslC2XSU1bCB8+Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient4.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient4.bootstrap;
        org.jboss.netty.channel.Channel channel7 = webSocketClient4.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        boolean boolean30 = webSocketClient24.ssl;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient24.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor37 = webSocketClient36.executor;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient36.webSocketHandler;
        webSocketClient24.webSocketHandler = webSocketHandler38;
        webSocketClient0.webSocketHandler = webSocketHandler38;
        org.jboss.netty.channel.Channel channel41 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 39 + "'", byte7 == (byte) 39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel41);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient4.bootstrap = clientBootstrap6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient4.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        boolean boolean9 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient10.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory14 = null;
        webSocketClient10.sslFactory = sslFactory14;
        java.lang.String str16 = webSocketClient10.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        webSocketClient17.sslFactory = sslFactory29;
        webSocketClient10.sslFactory = sslFactory29;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient10.executor = executor32;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient10.createNettyHttpRequest("", "");
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient10.setupSsl(inputStream37, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap40 = null;
        webSocketClient39.bootstrap = clientBootstrap40;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient39.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient39.sslFactory;
        webSocketClient0.sslFactory = sslFactory43;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient0.remoteAddress = inetSocketAddress45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory43);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient7.sslFactory;
        webSocketClient6.sslFactory = sslFactory13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient6.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -48;
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient4.ioExceptionHandler;
        byte byte11 = webSocketClient4.randomByte();
        webSocketClient4.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient4.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest16;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "yzeQ3rFnnJs2jOj8g0wnNg==");
        boolean boolean21 = webSocketClient20.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 15 + "'", byte11 == (byte) 15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -12);
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient10.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.exceptionHandler = uncaughtExceptionHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient12.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient12.reconnectEvery((long) (short) -1);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap20 = webSocketClient19.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient21.ioExceptionHandler;
        byte byte28 = webSocketClient21.randomByte();
        webSocketClient21.base64Nonce = "5wOStwe/UHG+2WijRk+VYg==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient21.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler34 = webSocketClient21.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        boolean boolean41 = webSocketClient35.ssl;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient35.remoteAddress = inetSocketAddress42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient44.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor48 = webSocketClient47.executor;
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient47.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler49;
        webSocketClient21.webSocketHandler = webSocketHandler49;
        webSocketClient19.webSocketHandler = webSocketHandler49;
        webSocketClient10.webSocketHandler = webSocketHandler49;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 2 + "'", byte5 == (byte) 2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 5 + "'", byte28 == (byte) 5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler49);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress28 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket29 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress28);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient0.bootstrap = clientBootstrap8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory7);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "U3FlvOLl6vpxMDI+CXsVpQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.lang.Class<?> wildcardClass28 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "QW91xng7nDM6sKp9digixA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient10.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "7X9ZYv2xQt5NIwYdYOGhrQ==";
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "T0wC4sD+blmOUBBq9v+MoQ==" + "'", str5.equals("T0wC4sD+blmOUBBq9v+MoQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("CHGXx458GFa6jP+om1GnIg==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "Pt2mVcEDzUkUAzbe4kuIMQ==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient0.bootstrap = clientBootstrap37;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = webSocketClient0.bootstrap;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap39);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient7.exceptionHandler = uncaughtExceptionHandler9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient7.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient18.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "QW91xng7nDM6sKp9digixA==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket14 = webSocketClient10.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 18 + "'", byte11 == (byte) 18);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 11;
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "CHGXx458GFa6jP+om1GnIg==");
        java.lang.String str10 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient20.exceptionHandler = uncaughtExceptionHandler22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        byte byte26 = webSocketClient20.randomByte();
        java.lang.String str27 = webSocketClient20.base64Nonce();
        java.util.concurrent.Executor executor28 = webSocketClient20.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = null;
        webSocketClient34.sslFactory = sslFactory40;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient34.createNettyHttpRequest("Pt2mVcEDzUkUAzbe4kuIMQ==", "U3FlvOLl6vpxMDI+CXsVpQ==");
        webSocketClient33.request = httpRequest44;
        webSocketClient20.request = httpRequest44;
        webSocketClient13.request = httpRequest44;
        webSocketClient0.request = httpRequest44;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = webSocketClient0.reconnectEvery((long) (byte) 117);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) 37 + "'", byte26 == (byte) 37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "SP6+pZqD3E1ReP+ZShoucw==" + "'", str27.equals("SP6+pZqD3E1ReP+ZShoucw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient50);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.util.concurrent.Executor executor6 = null;
        webSocketClient0.executor = executor6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) 0);
        java.lang.String str10 = webSocketClient9.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "bHI7YA/siKR3Oce91R04vg==" + "'", str10.equals("bHI7YA/siKR3Oce91R04vg=="));
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 44);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient0.setupSsl(inputStream49, "5UyTY53a02OPHzTYSZzCaQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient52 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = webSocketClient52.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        webSocketClient52.remoteAddress = inetSocketAddress54;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient52.remoteAddress = inetSocketAddress56;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient52.ioExceptionHandler;
        byte byte59 = webSocketClient52.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler60 = webSocketClient52.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = webSocketClient52.reconnectEvery((long) (byte) -111);
        org.webbitserver.WebSocketHandler webSocketHandler63 = webSocketClient52.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler63;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte59 + "' != '" + (byte) 6 + "'", byte59 == (byte) 6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler63);
    }
}
