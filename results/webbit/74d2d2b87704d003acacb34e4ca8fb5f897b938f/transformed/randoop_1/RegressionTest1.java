import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "/wQ35RpJNU+OEPB0aQv9fA==" + "'", str8.equals("/wQ35RpJNU+OEPB0aQv9fA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient0.setupSsl(inputStream42, "13aKYIJGy2v+UAEI9+/V9g==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient44.createNettyHttpRequest("JJ046SKCrDHWq4nW+y2kpA==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.WebSocketHandler webSocketHandler48 = webSocketClient44.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler48);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        byte byte10 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 99 + "'", byte9 == (byte) 99);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 25 + "'", byte10 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -122;
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "QRO20B+gGA9fgKAbYdsxKg==";
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler11 = null;
        webSocketClient0.webSocketHandler = webSocketHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "UV67rgAHDvkhWIAKaLprbA==" + "'", str8.equals("UV67rgAHDvkhWIAKaLprbA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient0.executor = executor14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 31;
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "");
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient15.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient12.request = httpRequest23;
        webSocketClient0.request = httpRequest23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient27.ioExceptionHandler;
        byte byte34 = webSocketClient27.randomByte();
        webSocketClient27.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = webSocketClient37.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient37.remoteAddress = inetSocketAddress39;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient37.remoteAddress = inetSocketAddress41;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient37.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.channel.Channel channel46 = webSocketClient37.channel;
        webSocketClient37.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap50 = null;
        webSocketClient49.bootstrap = clientBootstrap50;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = webSocketClient52.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        webSocketClient52.remoteAddress = inetSocketAddress54;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient52.remoteAddress = inetSocketAddress56;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient52.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient49.request = httpRequest60;
        webSocketClient37.request = httpRequest60;
        webSocketClient27.request = httpRequest60;
        webSocketClient0.request = httpRequest60;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte34 + "' != '" + (byte) 54 + "'", byte34 == (byte) 54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest60);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "aTdBcxWfMRHNfR3Fi29qOQ==";
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.request;
        boolean boolean12 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.net.InetSocketAddress inetSocketAddress22 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient0.remoteAddress = inetSocketAddress23;
        org.jboss.netty.channel.Channel channel25 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel25);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("", "alODXB9ILViLUR13udkAtA==");
        webSocketClient0.ssl = true;
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.reconnectEvery((long) 'a');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        webSocketClient0.base64Nonce = "D0idbTvLNjLtFNN1K3L1Vw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient0.setupSsl(inputStream31, "");
        org.jboss.netty.channel.Channel channel34 = null;
        webSocketClient33.channel = channel34;
        org.webbitserver.WebSocketHandler webSocketHandler36 = null;
        webSocketClient33.webSocketHandler = webSocketHandler36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 68 + "'", byte7 == (byte) 68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient3.bootstrap = clientBootstrap8;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient3.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.String str9 = webSocketClient8.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "qYQU4pZI+NywTC8s9Z9QIg==" + "'", str5.equals("qYQU4pZI+NywTC8s9Z9QIg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        boolean boolean7 = webSocketClient0.ssl;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "udoCA7ZwcQs8mBcTDaLGjw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.ioExceptionHandler;
        java.util.concurrent.Executor executor12 = webSocketClient10.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient3.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient7.sslFactory = sslFactory13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient7.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient7.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.setupSsl(inputStream20, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean23 = webSocketClient19.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient19.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler24;
        java.lang.String str26 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("00F1w8unUKMlOBETKvUclw==", "OvKg7ATbFa7xOsH3juxhtw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str26 + "' != '" + "yeMS8ORx5pBSs9jptD3SxA==" + "'", str26.equals("yeMS8ORx5pBSs9jptD3SxA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient13.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = null;
        webSocketClient17.bootstrap = clientBootstrap18;
        java.net.InetSocketAddress inetSocketAddress20 = webSocketClient17.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient17.sslFactory = sslFactory21;
        java.lang.String str23 = webSocketClient17.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient24.sslFactory = sslFactory36;
        webSocketClient17.sslFactory = sslFactory36;
        java.util.concurrent.Executor executor39 = null;
        webSocketClient17.executor = executor39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient17.createNettyHttpRequest("", "");
        webSocketClient13.request = httpRequest43;
        webSocketClient0.request = httpRequest43;
        java.util.concurrent.Executor executor46 = null;
        webSocketClient0.executor = executor46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean16 = webSocketClient12.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient12.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient12.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        byte byte11 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.exceptionHandler = uncaughtExceptionHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient12.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient12.ioExceptionHandler = uncaughtExceptionHandler18;
        java.util.concurrent.Executor executor20 = null;
        webSocketClient12.executor = executor20;
        java.lang.String str22 = webSocketClient12.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient23.bootstrap = clientBootstrap24;
        java.net.InetSocketAddress inetSocketAddress26 = webSocketClient23.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory27 = null;
        webSocketClient23.sslFactory = sslFactory27;
        java.lang.String str29 = webSocketClient23.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient30.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient30.remoteAddress = inetSocketAddress32;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient30.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient36.sslFactory;
        webSocketClient30.sslFactory = sslFactory42;
        webSocketClient23.sslFactory = sslFactory42;
        java.util.concurrent.Executor executor45 = null;
        webSocketClient23.executor = executor45;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient23.createNettyHttpRequest("", "");
        java.lang.String str50 = webSocketClient23.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient23.createNettyHttpRequest("ChgXpFpKl1L7KepL4qseEA==", "ChgXpFpKl1L7KepL4qseEA==");
        webSocketClient12.request = httpRequest53;
        webSocketClient0.request = httpRequest53;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 49 + "'", byte11 == (byte) 49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str22 + "' != '" + "Gh5CI4qBScNbcngopb2+Hw==" + "'", str22.equals("Gh5CI4qBScNbcngopb2+Hw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str50 + "' != '" + "IPn+KlVMnIkMxh27Y3H99A==" + "'", str50.equals("IPn+KlVMnIkMxh27Y3H99A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient0.createNettyHttpRequest("pxWKnTl87W9TWcAu5HKp/w==", "W0h28/0vBUYde2g2ygDhIg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest51);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler12;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient10.remoteAddress = inetSocketAddress15;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler26;
        webSocketClient0.webSocketHandler = webSocketHandler26;
        webSocketClient0.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient0.bootstrap = clientBootstrap31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -122 + "'", byte7 == (byte) -122);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient11.bootstrap;
        org.jboss.netty.channel.Channel channel20 = webSocketClient11.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = webSocketClient11.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient11.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient0.request = httpRequest24;
        boolean boolean26 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient7.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient10.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient10.webSocketHandler;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient10.setupSsl(inputStream15, "qcyB1VUvw6+2NxfeqFhJEA==");
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient10.sslFactory;
        webSocketClient0.sslFactory = sslFactory18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = webSocketClient20.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient20.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = null;
        webSocketClient27.bootstrap = clientBootstrap28;
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient27.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory31 = null;
        webSocketClient27.sslFactory = sslFactory31;
        java.lang.String str33 = webSocketClient27.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient40.setupSsl(inputStream42, "hi!");
        java.lang.String str45 = webSocketClient40.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient40.sslFactory;
        webSocketClient34.sslFactory = sslFactory46;
        webSocketClient27.sslFactory = sslFactory46;
        java.util.concurrent.Executor executor49 = null;
        webSocketClient27.executor = executor49;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient51.request;
        java.io.InputStream inputStream53 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = webSocketClient51.setupSsl(inputStream53, "hi!");
        java.lang.String str56 = webSocketClient51.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory57 = webSocketClient51.sslFactory;
        webSocketClient27.sslFactory = sslFactory57;
        webSocketClient20.sslFactory = sslFactory57;
        org.webbitserver.helpers.SslFactory sslFactory60 = webSocketClient20.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler61 = webSocketClient20.exceptionHandler;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient20.setupSsl(inputStream62, "13aKYIJGy2v+UAEI9+/V9g==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest67 = webSocketClient64.createNettyHttpRequest("JJ046SKCrDHWq4nW+y2kpA==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient0.request = httpRequest67;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -45 + "'", byte5 == (byte) -45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest67);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.lang.String str11 = webSocketClient9.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient9.remoteAddress = inetSocketAddress12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "tm+z5TLrmbJuim97vBa4Sw==" + "'", str11.equals("tm+z5TLrmbJuim97vBa4Sw=="));
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap33 = null;
        webSocketClient30.bootstrap = clientBootstrap33;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient30.sslFactory;
        byte byte36 = webSocketClient30.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient37.setupSsl(inputStream39, "hi!");
        java.lang.String str42 = webSocketClient37.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient37.sslFactory = sslFactory43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient37.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = null;
        webSocketClient37.ioExceptionHandler = uncaughtExceptionHandler48;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient50.request;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient50.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = null;
        webSocketClient53.ioExceptionHandler = uncaughtExceptionHandler54;
        org.webbitserver.WebSocketHandler webSocketHandler56 = webSocketClient53.webSocketHandler;
        webSocketClient37.webSocketHandler = webSocketHandler56;
        webSocketClient30.webSocketHandler = webSocketHandler56;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte36 + "' != '" + (byte) 100 + "'", byte36 == (byte) 100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler56);
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 34);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -81 + "'", byte5 == (byte) -81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient6.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient6.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient6.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient0.request = httpRequest18;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap20 = null;
        webSocketClient0.bootstrap = clientBootstrap20;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient0.bootstrap = clientBootstrap22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -15);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) 74);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("xObPeY7blHrn4terN5S4rA==", "lzdA4kstGATFnp/NbmDBIQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient1.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient1.reconnectEvery((long) (byte) 100);
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient1.webSocketHandler;
        java.util.concurrent.Executor executor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler12, executor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 105 + "'", byte8 == (byte) 105);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler12);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) 99);
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient12.webSocketHandler = webSocketHandler40;
        webSocketClient0.webSocketHandler = webSocketHandler40;
        org.jboss.netty.channel.Channel channel44 = null;
        webSocketClient0.channel = channel44;
        java.net.InetSocketAddress inetSocketAddress46 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "gjyjy35XKqLOR6z3deQx1A==" + "'", str6.equals("gjyjy35XKqLOR6z3deQx1A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -38 + "'", byte19 == (byte) -38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress46);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient9.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 58 + "'", byte10 == (byte) 58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        byte byte11 = webSocketClient9.randomByte();
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient9.channel = channel12;
        java.lang.String str14 = webSocketClient9.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.setupSsl(inputStream17, "hi!");
        java.lang.String str20 = webSocketClient15.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient15.sslFactory = sslFactory21;
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient15.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = webSocketClient15.bootstrap;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient15.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = null;
        webSocketClient26.bootstrap = clientBootstrap27;
        java.net.InetSocketAddress inetSocketAddress29 = webSocketClient26.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient26.sslFactory = sslFactory30;
        java.lang.String str32 = webSocketClient26.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient26.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap34 = webSocketClient26.bootstrap;
        org.jboss.netty.channel.Channel channel35 = webSocketClient26.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = webSocketClient26.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient26.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient15.request = httpRequest39;
        webSocketClient9.request = httpRequest39;
        webSocketClient9.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -26 + "'", byte11 == (byte) -26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "smo9M0TbcLt8BHYnnSkSyw==" + "'", str14.equals("smo9M0TbcLt8BHYnnSkSyw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest39);
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) 111);
        boolean boolean12 = webSocketClient11.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient11.bootstrap;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient11.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "3KMd30paRDseX/ycbtH/sw==" + "'", str6.equals("3KMd30paRDseX/ycbtH/sw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory14);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        webSocketClient10.base64Nonce = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -7;
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = true;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "hi!");
        org.jboss.netty.channel.Channel channel12 = webSocketClient11.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler19;
        webSocketClient0.ssl = true;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "jS9sHFimUlZ7e+DzYGZhBQ==" + "'", str10.equals("jS9sHFimUlZ7e+DzYGZhBQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "+cXmjPF3gqFZMGm2bK6sBQ==" + "'", str11.equals("+cXmjPF3gqFZMGm2bK6sBQ=="));
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler19;
        java.net.InetSocketAddress inetSocketAddress21 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress21);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient14.bootstrap = clientBootstrap15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient14.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory18 = null;
        webSocketClient14.sslFactory = sslFactory18;
        java.lang.String str20 = webSocketClient14.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient14.sslFactory = sslFactory33;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient14.executor = executor36;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient14.createNettyHttpRequest("", "");
        java.io.InputStream inputStream41 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient14.setupSsl(inputStream41, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap46 = null;
        webSocketClient43.bootstrap = clientBootstrap46;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient43.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        java.lang.String str50 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str50 + "' != '" + "SWSLLtx5Vv7DXNlwcDv1eg==" + "'", str50.equals("SWSLLtx5Vv7DXNlwcDv1eg=="));
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        byte byte7 = webSocketClient0.randomByte();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "NTfoJOOP/hYcTqay4lXg/w==" + "'", str6.equals("NTfoJOOP/hYcTqay4lXg/w=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -56 + "'", byte7 == (byte) -56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient13.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.WebSocketHandler webSocketHandler16 = webSocketClient13.webSocketHandler;
        webSocketClient9.webSocketHandler = webSocketHandler16;
        java.lang.String str18 = webSocketClient9.base64Nonce;
        java.lang.String str19 = webSocketClient9.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient1.bootstrap = clientBootstrap5;
        org.jboss.netty.channel.Channel channel7 = webSocketClient1.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient8.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient8.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient18.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient18.exceptionHandler = uncaughtExceptionHandler22;
        boolean boolean24 = webSocketClient18.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = null;
        webSocketClient25.sslFactory = sslFactory31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient25.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient25.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient37.setupSsl(inputStream38, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean41 = webSocketClient37.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient37.webSocketHandler;
        webSocketClient18.webSocketHandler = webSocketHandler42;
        webSocketClient8.webSocketHandler = webSocketHandler42;
        webSocketClient1.webSocketHandler = webSocketHandler42;
        java.util.concurrent.Executor executor46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler42, executor46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler42);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("uq+ogkA4uylV3lEeJ3joKw==", "zUkyA+zzqTKCvBgEk+t+dw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "CM9+FVULfI5X0kpVHtOesA==" + "'", str6.equals("CM9+FVULfI5X0kpVHtOesA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor35 = webSocketClient10.executor;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient10.executor = executor36;
        java.lang.String str38 = webSocketClient10.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress40 = webSocketClient10.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient10.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler3 = webSocketClient1.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient1.createNettyHttpRequest("alODXB9ILViLUR13udkAtA==", "alODXB9ILViLUR13udkAtA==");
        webSocketClient1.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient9.setupSsl(inputStream36, "");
        java.net.InetSocketAddress inetSocketAddress39 = webSocketClient38.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient40.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient43.ioExceptionHandler = uncaughtExceptionHandler44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient43.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient43.webSocketHandler;
        webSocketClient38.webSocketHandler = webSocketHandler47;
        webSocketClient1.webSocketHandler = webSocketHandler47;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler47);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) 42);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        boolean boolean4 = webSocketClient3.ssl;
        byte byte5 = webSocketClient3.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -72 + "'", byte5 == (byte) -72);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 7);
        webSocketClient0.ssl = false;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient29.remoteAddress;
        webSocketClient29.base64Nonce = "KlwK3Yz2YKfgxVvOuSmOwg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 58;
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        webSocketClient0.ssl = false;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery(0L);
        java.lang.String str8 = webSocketClient7.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        webSocketClient7.request = httpRequest35;
        java.util.concurrent.Executor executor37 = webSocketClient7.executor;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient7.executor = executor38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "dvL0RbtmgqJn839iF1Nc3w==" + "'", str8.equals("dvL0RbtmgqJn839iF1Nc3w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient9.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -9;
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        byte byte45 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient0.remoteAddress = inetSocketAddress46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) -32 + "'", byte45 == (byte) -32);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient4.sslFactory = sslFactory8;
        java.lang.String str10 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient4.sslFactory = sslFactory23;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient4.executor = executor26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient4.createNettyHttpRequest("", "");
        webSocketClient0.request = httpRequest30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = null;
        webSocketClient0.bootstrap = clientBootstrap32;
        byte byte34 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte34 + "' != '" + (byte) -26 + "'", byte34 == (byte) -26);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.createNettyHttpRequest("alODXB9ILViLUR13udkAtA==", "alODXB9ILViLUR13udkAtA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest5);
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        boolean boolean14 = webSocketClient0.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket15 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "2Va/+xk803oqP2jMqmSGCw==";
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        boolean boolean9 = webSocketClient0.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "R7RC4jbHZAMf/fFLt+vCkg==";
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.lang.String str17 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient16.reconnectEvery((long) (byte) -15);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler20;
        java.util.concurrent.Executor executor22 = webSocketClient16.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 55 + "'", byte7 == (byte) 55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor22);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient20.sslFactory = sslFactory32;
        webSocketClient13.sslFactory = sslFactory32;
        java.util.concurrent.Executor executor35 = null;
        webSocketClient13.executor = executor35;
        boolean boolean37 = webSocketClient13.ssl;
        org.webbitserver.helpers.SslFactory sslFactory38 = webSocketClient13.sslFactory;
        webSocketClient12.sslFactory = sslFactory38;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap40 = null;
        webSocketClient12.bootstrap = clientBootstrap40;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient12.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest42);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient11.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress41 = webSocketClient11.remoteAddress;
        java.lang.String str42 = webSocketClient11.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress43 = webSocketClient11.remoteAddress;
        org.jboss.netty.channel.Channel channel44 = null;
        webSocketClient11.channel = channel44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient11.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap48 = null;
        webSocketClient47.bootstrap = clientBootstrap48;
        java.net.InetSocketAddress inetSocketAddress50 = webSocketClient47.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory51 = null;
        webSocketClient47.sslFactory = sslFactory51;
        java.lang.String str53 = webSocketClient47.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient60.sslFactory;
        webSocketClient54.sslFactory = sslFactory66;
        webSocketClient47.sslFactory = sslFactory66;
        java.util.concurrent.Executor executor69 = null;
        webSocketClient47.executor = executor69;
        boolean boolean71 = webSocketClient47.ssl;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient47.sslFactory;
        webSocketClient11.sslFactory = sslFactory72;
        webSocketClient0.sslFactory = sslFactory72;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler75 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler75;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "VX7cpyLhQLGlG39ygQa1QA==" + "'", str6.equals("VX7cpyLhQLGlG39ygQa1QA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "swRRpKu2yepe5Z6y9VC49w==" + "'", str42.equals("swRRpKu2yepe5Z6y9VC49w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        boolean boolean7 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        java.lang.String str13 = webSocketClient8.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient8.sslFactory;
        webSocketClient0.sslFactory = sslFactory14;
        byte byte16 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) -18 + "'", byte16 == (byte) -18);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "A3D4w/mFV63lbKgoGsPzFA==" + "'", str8.equals("A3D4w/mFV63lbKgoGsPzFA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) '4');
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient9.createNettyHttpRequest("u0YF/I16IYDqtEpSo3Txdg==", "D0idbTvLNjLtFNN1K3L1Vw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient11.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.jboss.netty.channel.Channel channel15 = null;
        webSocketClient14.channel = channel15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "J3PTGqRlXW7do1YLt9BHaA==" + "'", str8.equals("J3PTGqRlXW7do1YLt9BHaA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient0.setupSsl(inputStream42, "13aKYIJGy2v+UAEI9+/V9g==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient44.createNettyHttpRequest("JJ046SKCrDHWq4nW+y2kpA==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient44.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        webSocketClient0.ssl = true;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient0.setupSsl(inputStream15, "mbi9zmXf1uPl16MQloDzbg==");
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient18.reconnectEvery((-1L));
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient18.setupSsl(inputStream26, "hi!");
        byte byte29 = webSocketClient18.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient18.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler30;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket32 = webSocketClient17.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) 34 + "'", byte29 == (byte) 34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler30);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient0.sslFactory = sslFactory30;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        webSocketClient6.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel19 = webSocketClient0.channel;
        java.lang.Class<?> wildcardClass20 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        org.jboss.netty.channel.Channel channel20 = null;
        webSocketClient13.channel = channel20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient25.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient22.request = httpRequest33;
        java.util.concurrent.Executor executor35 = webSocketClient22.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient22.request;
        webSocketClient13.request = httpRequest36;
        webSocketClient7.request = httpRequest36;
        webSocketClient0.request = httpRequest36;
        org.jboss.netty.channel.Channel channel40 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient41.request;
        java.io.InputStream inputStream43 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = webSocketClient41.setupSsl(inputStream43, "hi!");
        java.lang.String str46 = webSocketClient41.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory47 = null;
        webSocketClient41.sslFactory = sslFactory47;
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient41.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap50 = webSocketClient41.bootstrap;
        java.net.InetSocketAddress inetSocketAddress51 = webSocketClient41.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = null;
        webSocketClient41.exceptionHandler = uncaughtExceptionHandler52;
        java.util.concurrent.Executor executor54 = null;
        webSocketClient41.executor = executor54;
        org.webbitserver.helpers.SslFactory sslFactory56 = webSocketClient41.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest59 = webSocketClient41.createNettyHttpRequest("mDNiHnSq15ff4wc7aJZvFg==", "aIytBmjn5IC6ITF93PeW7Q==");
        webSocketClient0.request = httpRequest59;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest59);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient36.bootstrap = clientBootstrap37;
        java.net.InetSocketAddress inetSocketAddress39 = webSocketClient36.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory40 = null;
        webSocketClient36.sslFactory = sslFactory40;
        java.lang.String str42 = webSocketClient36.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient43.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient43.remoteAddress = inetSocketAddress45;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient43.remoteAddress = inetSocketAddress47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        java.io.InputStream inputStream51 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient49.setupSsl(inputStream51, "hi!");
        java.lang.String str54 = webSocketClient49.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory55 = webSocketClient49.sslFactory;
        webSocketClient43.sslFactory = sslFactory55;
        webSocketClient36.sslFactory = sslFactory55;
        java.util.concurrent.Executor executor58 = null;
        webSocketClient36.executor = executor58;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest62 = webSocketClient36.createNettyHttpRequest("", "");
        java.io.InputStream inputStream63 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient65 = webSocketClient36.setupSsl(inputStream63, "");
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient65.sslFactory;
        webSocketClient0.sslFactory = sslFactory66;
        java.net.InetSocketAddress inetSocketAddress68 = null;
        webSocketClient0.remoteAddress = inetSocketAddress68;
        webSocketClient0.base64Nonce = "IlobnN/iHc5JjNScG34Nlw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "hFKAVHfE7QoMj6XLJNxKxw==" + "'", str31.equals("hFKAVHfE7QoMj6XLJNxKxw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.lang.String str17 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient16.reconnectEvery((long) (byte) -15);
        java.net.InetSocketAddress inetSocketAddress20 = webSocketClient16.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -93 + "'", byte7 == (byte) -93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str17 + "' != '" + "hi!" + "'", str17.equals("hi!"));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress20);
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient1.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient1.reconnectEvery((long) (byte) 100);
        java.lang.String str12 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient23.exceptionHandler = uncaughtExceptionHandler25;
        java.util.concurrent.Executor executor27 = webSocketClient23.executor;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient23.remoteAddress = inetSocketAddress28;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient23.setupSsl(inputStream30, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler37;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient36.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler39;
        webSocketClient13.webSocketHandler = webSocketHandler39;
        webSocketClient1.webSocketHandler = webSocketHandler39;
        java.util.concurrent.Executor executor43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39, executor43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 39 + "'", byte8 == (byte) 39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 103 + "'", byte20 == (byte) 103);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        boolean boolean7 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        byte byte11 = webSocketClient9.randomByte();
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient9.channel = channel12;
        java.lang.String str14 = webSocketClient9.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.setupSsl(inputStream17, "hi!");
        java.lang.String str20 = webSocketClient15.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient15.sslFactory = sslFactory21;
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient15.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = webSocketClient15.bootstrap;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient15.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = null;
        webSocketClient26.bootstrap = clientBootstrap27;
        java.net.InetSocketAddress inetSocketAddress29 = webSocketClient26.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient26.sslFactory = sslFactory30;
        java.lang.String str32 = webSocketClient26.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient26.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap34 = webSocketClient26.bootstrap;
        org.jboss.netty.channel.Channel channel35 = webSocketClient26.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = webSocketClient26.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient26.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient15.request = httpRequest39;
        webSocketClient9.request = httpRequest39;
        byte byte42 = webSocketClient9.randomByte();
        java.util.concurrent.Executor executor43 = webSocketClient9.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -93 + "'", byte11 == (byte) -93);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "WIhtinn+OjsIS0PaRKr1vw==" + "'", str14.equals("WIhtinn+OjsIS0PaRKr1vw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte42 + "' != '" + (byte) -30 + "'", byte42 == (byte) -30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor43);
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient3.ioExceptionHandler;
        java.util.concurrent.Executor executor6 = null;
        webSocketClient3.executor = executor6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor6 = null;
        webSocketClient3.executor = executor6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient4.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient4.bootstrap = clientBootstrap7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient9.sslFactory = sslFactory15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient9.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient9.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient21.setupSsl(inputStream22, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean25 = webSocketClient21.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient21.webSocketHandler;
        webSocketClient4.webSocketHandler = webSocketHandler26;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient0.bootstrap = clientBootstrap17;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        java.lang.Class<?> wildcardClass21 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient0.createNettyHttpRequest("gO4Pa27vZGrHm3PovkCmEQ==", "0P/hOXDpaVTFT0/RTrs9Ng==");
        org.jboss.netty.channel.Channel channel31 = null;
        webSocketClient0.channel = channel31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "g1YhHUwldS1Ym0PWj4sn1A==" + "'", str27.equals("g1YhHUwldS1Ym0PWj4sn1A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient10.setupSsl(inputStream12, "hi!");
        java.lang.String str15 = webSocketClient10.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient10.sslFactory = sslFactory16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient10.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient10.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient22.setupSsl(inputStream23, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean26 = webSocketClient22.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient22.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler27;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler27);
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -104 + "'", byte7 == (byte) -104);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress28 = webSocketClient0.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap29);
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -68);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) -19);
        java.util.concurrent.Executor executor17 = webSocketClient16.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "lIRdl7NYWN58Aud8N6U3Ew==";
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        webSocketClient0.base64Nonce = "ZXFuSAGTWS0VsPE7+uis2w==";
        webSocketClient0.ssl = false;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket11 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "uq+ogkA4uylV3lEeJ3joKw==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient15.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient12.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.helpers.SslFactory sslFactory16 = webSocketClient12.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient12.createNettyHttpRequest("C0uN57EkOmURJfzBAAIg3A==", "dvL0RbtmgqJn839iF1Nc3w==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.lang.Class<?> wildcardClass10 = httpRequest9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler19;
        webSocketClient0.ssl = true;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = null;
        webSocketClient29.request = httpRequest54;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient5.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient5.sslFactory = sslFactory9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient12.sslFactory = sslFactory24;
        webSocketClient5.sslFactory = sslFactory24;
        java.util.concurrent.Executor executor27 = null;
        webSocketClient5.executor = executor27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient5.createNettyHttpRequest("", "");
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient5.setupSsl(inputStream32, "");
        java.net.InetSocketAddress inetSocketAddress35 = webSocketClient34.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = null;
        webSocketClient39.ioExceptionHandler = uncaughtExceptionHandler40;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient39.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler43 = webSocketClient39.webSocketHandler;
        webSocketClient34.webSocketHandler = webSocketHandler43;
        webSocketClient3.webSocketHandler = webSocketHandler43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = null;
        webSocketClient3.exceptionHandler = uncaughtExceptionHandler46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler43);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient10.setupSsl(inputStream12, "hi!");
        java.lang.String str15 = webSocketClient10.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient10.sslFactory = sslFactory16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient10.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient10.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient22.setupSsl(inputStream23, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean26 = webSocketClient22.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient22.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler27;
        boolean boolean29 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler18;
        boolean boolean20 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -126 + "'", byte7 == (byte) -126);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient0.bootstrap = clientBootstrap8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "D0idbTvLNjLtFNN1K3L1Vw==");
        org.jboss.netty.channel.Channel channel33 = webSocketClient32.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel33);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass14 = channel13.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient4.ioExceptionHandler;
        byte byte11 = webSocketClient4.randomByte();
        webSocketClient4.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient4.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest16;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 113 + "'", byte11 == (byte) 113);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap18);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient7.sslFactory;
        webSocketClient6.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient15.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.channel.Channel channel24 = webSocketClient15.channel;
        webSocketClient15.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = null;
        webSocketClient27.bootstrap = clientBootstrap28;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient30.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient30.remoteAddress = inetSocketAddress32;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient30.remoteAddress = inetSocketAddress34;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient30.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient27.request = httpRequest38;
        webSocketClient15.request = httpRequest38;
        webSocketClient6.request = httpRequest38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest38);
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "wwjktNAMwM29TzNl4vjWvQ==";
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient28.ioExceptionHandler;
        byte byte35 = webSocketClient28.randomByte();
        webSocketClient28.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient28.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient28.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient42.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient42.remoteAddress = inetSocketAddress44;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient42.remoteAddress = inetSocketAddress46;
        boolean boolean48 = webSocketClient42.ssl;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        webSocketClient42.remoteAddress = inetSocketAddress49;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient51.request;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = webSocketClient51.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor55 = webSocketClient54.executor;
        org.webbitserver.WebSocketHandler webSocketHandler56 = webSocketClient54.webSocketHandler;
        webSocketClient42.webSocketHandler = webSocketHandler56;
        webSocketClient28.webSocketHandler = webSocketHandler56;
        org.webbitserver.helpers.SslFactory sslFactory59 = webSocketClient28.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest62 = webSocketClient28.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient0.request = httpRequest62;
        org.webbitserver.helpers.SslFactory sslFactory64 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel65 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte35 + "' != '" + (byte) -47 + "'", byte35 == (byte) -47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel65);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -21);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient9.createNettyHttpRequest("0Mesbsmo/qz2wNCX85XS0A==", "W+VuRUNlLvV2pRfpqHZw+A==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient9.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient0.webSocketHandler;
        java.lang.String str25 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor26 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str25 + "' != '" + "O2UPOp8sNDpU6C6FnfTFEg==" + "'", str25.equals("O2UPOp8sNDpU6C6FnfTFEg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor26);
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery(0L);
        java.lang.String str8 = webSocketClient7.base64Nonce();
        boolean boolean9 = webSocketClient7.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "0HoFVUhh+R71O3jmlHlymw==" + "'", str8.equals("0HoFVUhh+R71O3jmlHlymw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket8 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient20.sslFactory = sslFactory32;
        webSocketClient13.sslFactory = sslFactory32;
        java.util.concurrent.Executor executor35 = null;
        webSocketClient13.executor = executor35;
        boolean boolean37 = webSocketClient13.ssl;
        org.webbitserver.helpers.SslFactory sslFactory38 = webSocketClient13.sslFactory;
        webSocketClient12.sslFactory = sslFactory38;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient12.remoteAddress = inetSocketAddress41;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "ucl4Uap6AuvBuvdY4dCRTQ==" + "'", str6.equals("ucl4Uap6AuvBuvdY4dCRTQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "/7Gq82DnwLNxZM9CoLg89A==" + "'", str11.equals("/7Gq82DnwLNxZM9CoLg89A=="));
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "sQ0t/64crhPsh4wPG/mE7A==");
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        java.lang.Class<?> wildcardClass13 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("OmE9sCjdiQ3BYeDTodQtaw==", "0Lu9yDsSVgveiUlYHu+l7Q==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient30.remoteAddress;
        byte byte32 = webSocketClient30.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient33.remoteAddress = inetSocketAddress39;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient33.reconnectEvery(10L);
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        java.net.InetSocketAddress inetSocketAddress46 = webSocketClient43.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory47 = null;
        webSocketClient43.sslFactory = sslFactory47;
        java.lang.String str49 = webSocketClient43.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler50 = webSocketClient43.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap51 = webSocketClient43.bootstrap;
        org.jboss.netty.channel.Channel channel52 = webSocketClient43.channel;
        org.webbitserver.WebSocketHandler webSocketHandler53 = webSocketClient43.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = webSocketClient43.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient57 = webSocketClient43.reconnectEvery((long) (byte) -34);
        webSocketClient57.base64Nonce = "fpiUMs7WpK0bMjjr8BcyOw==";
        org.webbitserver.WebSocketHandler webSocketHandler60 = webSocketClient57.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler61 = webSocketClient57.webSocketHandler;
        webSocketClient42.webSocketHandler = webSocketHandler61;
        webSocketClient30.webSocketHandler = webSocketHandler61;
        java.util.concurrent.Executor executor64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient65 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler61, executor64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte32 + "' != '" + (byte) 124 + "'", byte32 == (byte) 124);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler61);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        webSocketClient0.base64Nonce = "";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.ioExceptionHandler;
        webSocketClient0.base64Nonce = "WYuLDd6mAx7lZbj9Qgs1kQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient10.request;
        org.jboss.netty.channel.Channel channel17 = webSocketClient10.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient20.ioExceptionHandler;
        byte byte27 = webSocketClient20.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient20.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient32.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient32.remoteAddress = inetSocketAddress34;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient32.remoteAddress = inetSocketAddress36;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient32.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient29.request = httpRequest40;
        webSocketClient20.request = httpRequest40;
        boolean boolean43 = webSocketClient20.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient44.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient44.remoteAddress = inetSocketAddress46;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient44.remoteAddress = inetSocketAddress48;
        boolean boolean50 = webSocketClient44.ssl;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        webSocketClient44.remoteAddress = inetSocketAddress51;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient53.request;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = webSocketClient53.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor57 = webSocketClient56.executor;
        org.webbitserver.WebSocketHandler webSocketHandler58 = webSocketClient56.webSocketHandler;
        webSocketClient44.webSocketHandler = webSocketHandler58;
        webSocketClient20.webSocketHandler = webSocketHandler58;
        webSocketClient19.webSocketHandler = webSocketHandler58;
        webSocketClient0.webSocketHandler = webSocketHandler58;
        java.lang.Class<?> wildcardClass63 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -95 + "'", byte7 == (byte) -95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) -120 + "'", byte27 == (byte) -120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        org.jboss.netty.channel.Channel channel13 = null;
        webSocketClient0.channel = channel13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        org.jboss.netty.channel.Channel channel21 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel21);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient4.ioExceptionHandler;
        byte byte11 = webSocketClient4.randomByte();
        webSocketClient4.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient4.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest16;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "N0+tm6/4AmtTRMEVl1vyWg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient20.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 106 + "'", byte11 == (byte) 106);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient41.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient41.remoteAddress = inetSocketAddress43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = null;
        webSocketClient41.ioExceptionHandler = uncaughtExceptionHandler45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient41.exceptionHandler;
        byte byte48 = webSocketClient41.randomByte();
        java.util.concurrent.Executor executor49 = null;
        webSocketClient41.executor = executor49;
        java.lang.String str51 = webSocketClient41.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = webSocketClient52.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler54 = null;
        webSocketClient52.webSocketHandler = webSocketHandler54;
        java.util.concurrent.Executor executor56 = webSocketClient52.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient57.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        webSocketClient57.remoteAddress = inetSocketAddress59;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler61 = null;
        webSocketClient57.ioExceptionHandler = uncaughtExceptionHandler61;
        java.lang.String str63 = webSocketClient57.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap65 = null;
        webSocketClient64.bootstrap = clientBootstrap65;
        java.net.InetSocketAddress inetSocketAddress67 = webSocketClient64.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory68 = null;
        webSocketClient64.sslFactory = sslFactory68;
        java.lang.String str70 = webSocketClient64.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient71 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler72 = webSocketClient71.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress73 = null;
        webSocketClient71.remoteAddress = inetSocketAddress73;
        java.net.InetSocketAddress inetSocketAddress75 = null;
        webSocketClient71.remoteAddress = inetSocketAddress75;
        org.webbitserver.netty.WebSocketClient webSocketClient77 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest78 = webSocketClient77.request;
        java.io.InputStream inputStream79 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient81 = webSocketClient77.setupSsl(inputStream79, "hi!");
        java.lang.String str82 = webSocketClient77.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory83 = webSocketClient77.sslFactory;
        webSocketClient71.sslFactory = sslFactory83;
        webSocketClient64.sslFactory = sslFactory83;
        java.util.concurrent.Executor executor86 = null;
        webSocketClient64.executor = executor86;
        org.webbitserver.netty.WebSocketClient webSocketClient88 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest89 = webSocketClient88.request;
        java.io.InputStream inputStream90 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient92 = webSocketClient88.setupSsl(inputStream90, "hi!");
        java.lang.String str93 = webSocketClient88.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory94 = webSocketClient88.sslFactory;
        webSocketClient64.sslFactory = sslFactory94;
        webSocketClient57.sslFactory = sslFactory94;
        webSocketClient52.sslFactory = sslFactory94;
        webSocketClient41.sslFactory = sslFactory94;
        webSocketClient0.sslFactory = sslFactory94;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) -128 + "'", byte48 == (byte) -128);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory94);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        byte byte14 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -28 + "'", byte14 == (byte) -28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -108 + "'", byte14 == (byte) -108);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.helpers.SslFactory sslFactory4 = webSocketClient3.sslFactory;
        org.jboss.netty.channel.Channel channel5 = webSocketClient3.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 43;
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.String str9 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient10.request = httpRequest28;
        webSocketClient0.request = httpRequest28;
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient0.remoteAddress = inetSocketAddress32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -12 + "'", byte8 == (byte) -12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "5CLJecHO+lbRjGYm/s2WRQ==" + "'", str9.equals("5CLJecHO+lbRjGYm/s2WRQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        java.lang.String str12 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient29.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient29.request;
        java.lang.Class<?> wildcardClass56 = webSocketClient29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 93;
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.reconnectEvery((long) (byte) -121);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        java.util.concurrent.Executor executor23 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 85 + "'", byte7 == (byte) 85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor23);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.channel.Channel channel27 = null;
        webSocketClient0.channel = channel27;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "D0idbTvLNjLtFNN1K3L1Vw==");
        org.jboss.netty.channel.Channel channel33 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel33);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient0.setupSsl(inputStream49, "33kC5iWENnLS5T6zbOSLQA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler52;
        java.io.InputStream inputStream54 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = webSocketClient0.setupSsl(inputStream54, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient56);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient3.remoteAddress = inetSocketAddress9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        webSocketClient3.sslFactory = sslFactory30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        byte byte28 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "BqMeMyhBqFW1emI4uIPsoQ==" + "'", str27.equals("BqMeMyhBqFW1emI4uIPsoQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -75 + "'", byte28 == (byte) -75);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "I8xOb7cDoxzQcJBZJ3aexg==" + "'", str6.equals("I8xOb7cDoxzQcJBZJ3aexg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        boolean boolean7 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient6.sslFactory = sslFactory18;
        webSocketClient0.sslFactory = sslFactory18;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient0.request;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket24 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "zUkyA+zzqTKCvBgEk+t+dw==";
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.lang.String str28 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler29;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = null;
        webSocketClient0.request = httpRequest31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "0x1TsuPZ4DwqvcGw+EtaiA==" + "'", str28.equals("0x1TsuPZ4DwqvcGw+EtaiA=="));
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) 99);
        java.lang.String str12 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient19.ioExceptionHandler;
        byte byte26 = webSocketClient19.randomByte();
        webSocketClient19.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient19.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient14.request = httpRequest31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient38.request;
        java.io.InputStream inputStream40 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient38.setupSsl(inputStream40, "hi!");
        java.lang.String str43 = webSocketClient38.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory44 = null;
        webSocketClient38.sslFactory = sslFactory44;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient38.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient37.request = httpRequest48;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient37.sslFactory;
        webSocketClient14.sslFactory = sslFactory50;
        webSocketClient0.sslFactory = sslFactory50;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "+RkLjgmMIBs+DEb9JKg97w==" + "'", str6.equals("+RkLjgmMIBs+DEb9JKg97w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "WsuRSsnflhBzWGwGOjWW2w==" + "'", str12.equals("WsuRSsnflhBzWGwGOjWW2w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) 33 + "'", byte26 == (byte) 33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        byte byte9 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 59 + "'", byte7 == (byte) 59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -46 + "'", byte9 == (byte) -46);
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.String str41 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient0.remoteAddress = inetSocketAddress43;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "q7cyJbHFPeeoSh9Dk8nFTw==" + "'", str41.equals("q7cyJbHFPeeoSh9Dk8nFTw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest42);
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient29.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient29.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient14.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient14.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient14.webSocketHandler = webSocketHandler52;
        webSocketClient1.webSocketHandler = webSocketHandler52;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -78;
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "";
        boolean boolean11 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.reconnectEvery((long) (byte) 67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.reconnectEvery((long) (byte) -70);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket9 = webSocketClient8.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -7 + "'", byte5 == (byte) -7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient1.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient1.bootstrap;
        org.jboss.netty.channel.Channel channel10 = webSocketClient1.channel;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient1.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient1.reconnectEvery((long) (byte) -34);
        webSocketClient15.base64Nonce = "fpiUMs7WpK0bMjjr8BcyOw==";
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient15.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient15.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "ozpC3m0NVGJBWWMWAiN/9Q==" + "'", str6.equals("ozpC3m0NVGJBWWMWAiN/9Q=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 62 + "'", byte9 == (byte) 62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient11.ioExceptionHandler;
        byte byte18 = webSocketClient11.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient11.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor21 = webSocketClient11.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient11.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "IlobnN/iHc5JjNScG34Nlw==");
        webSocketClient0.request = httpRequest24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("KFtc38XHjucgEUCG6mdM/g==", "OmE9sCjdiQ3BYeDTodQtaw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 80 + "'", byte18 == (byte) 80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient27.createNettyHttpRequest("L8xDOL/cKLN3Ax/7Xa1ZWg==", "XKCd3fxfREUNH3Zloflx4w==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        java.lang.String str9 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        webSocketClient0.base64Nonce = "ixTE+iS59araL0Jcqk1vLg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "UDC47J4D52n6Fz8oCyC3gA==" + "'", str9.equals("UDC47J4D52n6Fz8oCyC3gA=="));
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "1W2P+P2JqNqhrZ94GfpzoQ==";
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient9.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "CM9+FVULfI5X0kpVHtOesA==";
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient0.setupSsl(inputStream3, "RUc8AjMVLp0HU/v+jf4FQQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -30 + "'", byte7 == (byte) -30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient10.exceptionHandler;
        webSocketClient10.ssl = false;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 73 + "'", byte11 == (byte) 73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient29.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = null;
        webSocketClient29.exceptionHandler = uncaughtExceptionHandler55;
        org.jboss.netty.channel.Channel channel57 = webSocketClient29.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel57);
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient4.ioExceptionHandler;
        byte byte11 = webSocketClient4.randomByte();
        webSocketClient4.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient4.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest16;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "N0+tm6/4AmtTRMEVl1vyWg==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -7 + "'", byte11 == (byte) -7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 12);
        java.util.concurrent.Executor executor15 = webSocketClient14.executor;
        org.jboss.netty.channel.Channel channel16 = webSocketClient14.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient7.sslFactory;
        webSocketClient7.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        boolean boolean35 = webSocketClient11.ssl;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient11.setupSsl(inputStream36, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient39.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient39.remoteAddress = inetSocketAddress41;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient39.remoteAddress = inetSocketAddress43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient39.ioExceptionHandler;
        byte byte46 = webSocketClient39.randomByte();
        webSocketClient39.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient39.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient39.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = webSocketClient53.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        webSocketClient53.remoteAddress = inetSocketAddress55;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient53.remoteAddress = inetSocketAddress57;
        boolean boolean59 = webSocketClient53.ssl;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        webSocketClient53.remoteAddress = inetSocketAddress60;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient62.request;
        org.webbitserver.netty.WebSocketClient webSocketClient65 = webSocketClient62.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor66 = webSocketClient65.executor;
        org.webbitserver.WebSocketHandler webSocketHandler67 = webSocketClient65.webSocketHandler;
        webSocketClient53.webSocketHandler = webSocketHandler67;
        webSocketClient39.webSocketHandler = webSocketHandler67;
        org.webbitserver.helpers.SslFactory sslFactory70 = webSocketClient39.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient39.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient11.request = httpRequest73;
        webSocketClient7.request = httpRequest73;
        java.lang.String str76 = webSocketClient7.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte46 + "' != '" + (byte) 64 + "'", byte46 == (byte) 64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient1.bootstrap;
        java.io.InputStream inputStream5 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient1.setupSsl(inputStream5, "");
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient8.ioExceptionHandler;
        byte byte15 = webSocketClient8.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient8.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient8.reconnectEvery((long) (byte) 100);
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient8.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler19;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -116 + "'", byte15 == (byte) -116);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient27.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient27.bootstrap = clientBootstrap30;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = null;
        webSocketClient27.ioExceptionHandler = uncaughtExceptionHandler32;
        org.jboss.netty.channel.Channel channel34 = null;
        webSocketClient27.channel = channel34;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient27.reconnectEvery((long) (byte) 61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        webSocketClient0.base64Nonce = "iLv88YjAq8udADXrVIZZ4g==";
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 125 + "'", byte7 == (byte) 125);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.util.concurrent.Executor executor17 = null;
        webSocketClient0.executor = executor17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 124 + "'", byte7 == (byte) 124);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient1.sslFactory;
        org.jboss.netty.channel.Channel channel8 = webSocketClient1.channel;
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient1.setupSsl(inputStream10, "hi!");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient12.exceptionHandler = uncaughtExceptionHandler13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient15.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor19 = webSocketClient18.executor;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient18.webSocketHandler;
        webSocketClient12.webSocketHandler = webSocketHandler20;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler20);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        java.util.concurrent.Executor executor40 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor40);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = null;
        webSocketClient0.channel = channel7;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "o94DzX8+pWNsDDArBjspXg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient13.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = null;
        webSocketClient17.bootstrap = clientBootstrap18;
        java.net.InetSocketAddress inetSocketAddress20 = webSocketClient17.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient17.sslFactory = sslFactory21;
        java.lang.String str23 = webSocketClient17.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient24.sslFactory = sslFactory36;
        webSocketClient17.sslFactory = sslFactory36;
        java.util.concurrent.Executor executor39 = null;
        webSocketClient17.executor = executor39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient17.createNettyHttpRequest("", "");
        webSocketClient13.request = httpRequest43;
        webSocketClient0.request = httpRequest43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient0.createNettyHttpRequest("UDC47J4D52n6Fz8oCyC3gA==", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest48);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        boolean boolean2 = webSocketClient0.ssl;
        org.webbitserver.helpers.SslFactory sslFactory3 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory3);
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.createNettyHttpRequest("54PRmm8EnGcV2VOcjHfgog==", "hi!");
        java.lang.String str12 = webSocketClient0.base64Nonce;
        webSocketClient0.base64Nonce = "e/hVChE+jEGPbxoZ3KGB4Q==";
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "Gh10WdSAxqzXOMY9repDmQ==" + "'", str12.equals("Gh10WdSAxqzXOMY9repDmQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = webSocketClient0.bootstrap;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket29 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "J+mBhW8Q4vHgvbHPSdxfdQ==" + "'", str27.equals("J+mBhW8Q4vHgvbHPSdxfdQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap28);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.util.concurrent.Executor executor11 = webSocketClient9.executor;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient9.setupSsl(inputStream12, "9snF0dVSVrNM7iGACOhnyg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -13 + "'", byte10 == (byte) -13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.util.concurrent.Executor executor11 = webSocketClient9.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient0.bootstrap = clientBootstrap15;
        webSocketClient0.base64Nonce = "YpDcpUdiXLzE59fRYFj14g==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 34);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -60 + "'", byte5 == (byte) -60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = null;
        webSocketClient1.sslFactory = sslFactory7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient1.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient14.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient14.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient14.webSocketHandler = webSocketHandler52;
        webSocketClient1.webSocketHandler = webSocketHandler52;
        java.util.concurrent.Executor executor56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler52, executor56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -74);
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery(0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -74);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        webSocketClient9.base64Nonce = "D0idbTvLNjLtFNN1K3L1Vw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "amJQRgY7DJXeL8NCBkiFwA==";
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        byte byte9 = webSocketClient0.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 31 + "'", byte9 == (byte) 31);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler9 = null;
        webSocketClient0.webSocketHandler = webSocketHandler9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("88VjQnrbgh15uht2NBB6yw==", "+WY+8v/zsk8BoBHp09YxVQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "RHxtSTRj1By1VEcCO+q1Ww==";
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.exceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        java.util.concurrent.Executor executor9 = null;
        webSocketClient1.executor = executor9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient11.request;
        org.jboss.netty.channel.Channel channel18 = webSocketClient11.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient11.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient21.ioExceptionHandler;
        byte byte28 = webSocketClient21.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient21.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient30.request = httpRequest41;
        webSocketClient21.request = httpRequest41;
        boolean boolean44 = webSocketClient21.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient45.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient45.remoteAddress = inetSocketAddress47;
        java.net.InetSocketAddress inetSocketAddress49 = null;
        webSocketClient45.remoteAddress = inetSocketAddress49;
        boolean boolean51 = webSocketClient45.ssl;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        webSocketClient45.remoteAddress = inetSocketAddress52;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient54.request;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = webSocketClient54.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor58 = webSocketClient57.executor;
        org.webbitserver.WebSocketHandler webSocketHandler59 = webSocketClient57.webSocketHandler;
        webSocketClient45.webSocketHandler = webSocketHandler59;
        webSocketClient21.webSocketHandler = webSocketHandler59;
        webSocketClient20.webSocketHandler = webSocketHandler59;
        webSocketClient1.webSocketHandler = webSocketHandler59;
        java.util.concurrent.Executor executor64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient65 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler59, executor64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 74 + "'", byte8 == (byte) 74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -100 + "'", byte28 == (byte) -100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler59);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient1.sslFactory;
        org.jboss.netty.channel.Channel channel8 = webSocketClient1.channel;
        java.lang.String str9 = webSocketClient1.base64Nonce();
        java.lang.String str10 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient1.sslFactory;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient1.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient1.webSocketHandler = webSocketHandler28;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "1GPcmzZf7RehIJNFLwitzw==" + "'", str9.equals("1GPcmzZf7RehIJNFLwitzw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient6.reconnectEvery((-1L));
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient6.setupSsl(inputStream14, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient6.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "uq+ogkA4uylV3lEeJ3joKw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient6.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler23 = null;
        webSocketClient21.webSocketHandler = webSocketHandler23;
        java.util.concurrent.Executor executor25 = webSocketClient21.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient21.sslFactory = sslFactory32;
        webSocketClient6.sslFactory = sslFactory32;
        webSocketClient0.sslFactory = sslFactory32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "1383p9Wa7+rO9Hc1Gr0kqw==";
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient7.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient7.exceptionHandler;
        byte byte11 = webSocketClient7.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient12.sslFactory = sslFactory20;
        org.webbitserver.WebSocketHandler webSocketHandler22 = null;
        webSocketClient12.webSocketHandler = webSocketHandler22;
        byte byte24 = webSocketClient12.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient12.sslFactory = sslFactory31;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient12.sslFactory;
        webSocketClient7.sslFactory = sslFactory33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient7.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient7.createNettyHttpRequest("Lfz5aGVxSRQB5nM+gfObNA==", "9RlOXAVFlr/LkfeNMcTVwQ==");
        webSocketClient0.request = httpRequest38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -49 + "'", byte11 == (byte) -49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 7 + "'", byte19 == (byte) 7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte24 + "' != '" + (byte) 78 + "'", byte24 == (byte) 78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest38);
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery(0L);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("QRO20B+gGA9fgKAbYdsxKg==", "UDC47J4D52n6Fz8oCyC3gA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        boolean boolean6 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -102 + "'", byte9 == (byte) -102);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "6FZFzV4FmBCIdFn7jCvoLw==" + "'", str10.equals("6FZFzV4FmBCIdFn7jCvoLw=="));
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        java.util.concurrent.Executor executor15 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor15);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient5.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor9 = webSocketClient8.executor;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient8.webSocketHandler;
        webSocketClient4.webSocketHandler = webSocketHandler10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient4.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler12;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient10.remoteAddress = inetSocketAddress15;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler26;
        webSocketClient0.webSocketHandler = webSocketHandler26;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient29.bootstrap = clientBootstrap31;
        java.util.concurrent.Executor executor33 = webSocketClient29.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = null;
        webSocketClient29.ioExceptionHandler = uncaughtExceptionHandler34;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient29.setupSsl(inputStream36, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient29.setupSsl(inputStream39, "9IGsDRkMzTKrFAbPxWWAHg==");
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient41.sslFactory;
        webSocketClient0.sslFactory = sslFactory42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -110 + "'", byte7 == (byte) -110);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = null;
        webSocketClient29.ioExceptionHandler = uncaughtExceptionHandler30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "");
        org.jboss.netty.channel.Channel channel10 = webSocketClient9.channel;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery(0L);
        java.lang.String str8 = webSocketClient7.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        webSocketClient7.request = httpRequest35;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket37 = webSocketClient7.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "P2dTGStOMJ4AR5Pdjy1ZCw==" + "'", str8.equals("P2dTGStOMJ4AR5Pdjy1ZCw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery(0L);
        java.lang.String str8 = webSocketClient7.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        webSocketClient7.request = httpRequest35;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient7.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "HLEwOXywypY6Z9Irlij1PA==" + "'", str8.equals("HLEwOXywypY6Z9Irlij1PA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory37);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        byte byte11 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient0.remoteAddress = inetSocketAddress12;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Cgmwu+MuqXGB0wDbi5QXCA==" + "'", str5.equals("Cgmwu+MuqXGB0wDbi5QXCA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -99 + "'", byte11 == (byte) -99);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 34);
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient10.sslFactory;
        webSocketClient10.base64Nonce = "dr+nuACzVMJ0+eVv+QyU4A==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 1 + "'", byte5 == (byte) 1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -56;
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient9.bootstrap = clientBootstrap12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient9.reconnectEvery((long) (byte) 74);
        java.lang.Class<?> wildcardClass16 = webSocketClient9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 26 + "'", byte10 == (byte) 26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        boolean boolean30 = webSocketClient24.ssl;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient24.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor37 = webSocketClient36.executor;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient36.webSocketHandler;
        webSocketClient24.webSocketHandler = webSocketHandler38;
        webSocketClient0.webSocketHandler = webSocketHandler38;
        boolean boolean41 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress42 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -9 + "'", byte7 == (byte) -9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress42);
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.helpers.SslFactory sslFactory4 = webSocketClient3.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient3.exceptionHandler;
        byte byte6 = webSocketClient3.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -37 + "'", byte6 == (byte) -37);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        java.lang.Class<?> wildcardClass10 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -70 + "'", byte7 == (byte) -70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "N9BnkW8qktOwud22btd0rw==";
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "sMJgDqYDbz42yAjZcZbfig==" + "'", str10.equals("sMJgDqYDbz42yAjZcZbfig=="));
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient9.webSocketHandler;
        boolean boolean21 = webSocketClient9.ssl;
        java.lang.Class<?> wildcardClass22 = webSocketClient9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient0.bootstrap = clientBootstrap12;
        java.util.concurrent.Executor executor14 = webSocketClient0.executor;
        byte byte15 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 94 + "'", byte15 == (byte) 94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler12;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient9.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        byte byte11 = webSocketClient0.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 80 + "'", byte11 == (byte) 80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler12);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient10.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient13.exceptionHandler = uncaughtExceptionHandler16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient13.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient13.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient13.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient24.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.setupSsl(inputStream37, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel40 = null;
        webSocketClient36.channel = channel40;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient42.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient42.remoteAddress = inetSocketAddress44;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient42.remoteAddress = inetSocketAddress46;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = webSocketClient42.ioExceptionHandler;
        byte byte49 = webSocketClient42.randomByte();
        webSocketClient42.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient42.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient42.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest58 = webSocketClient57.request;
        java.io.InputStream inputStream59 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = webSocketClient57.setupSsl(inputStream59, "hi!");
        java.lang.String str62 = webSocketClient57.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory63 = webSocketClient57.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest66 = webSocketClient57.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        webSocketClient42.request = httpRequest66;
        webSocketClient36.request = httpRequest66;
        webSocketClient13.request = httpRequest66;
        webSocketClient10.request = httpRequest66;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler71 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler71;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -105 + "'", byte11 == (byte) -105);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) 94 + "'", byte49 == (byte) 94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest66);
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        boolean boolean8 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        boolean boolean9 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "gB/8l/ipog1NJjurflCxhQ==" + "'", str8.equals("gB/8l/ipog1NJjurflCxhQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "qcyB1VUvw6+2NxfeqFhJEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -9);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "uq+ogkA4uylV3lEeJ3joKw==";
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.reconnectEvery((long) (byte) 88);
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.setupSsl(inputStream20, "bz9M4yZDuhr5wdRP6Myh2Q==");
        org.jboss.netty.channel.Channel channel23 = null;
        webSocketClient22.channel = channel23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "uq+ogkA4uylV3lEeJ3joKw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler17 = null;
        webSocketClient15.webSocketHandler = webSocketHandler17;
        java.util.concurrent.Executor executor19 = webSocketClient15.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient15.sslFactory = sslFactory26;
        webSocketClient0.sslFactory = sslFactory26;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = null;
        webSocketClient1.bootstrap = clientBootstrap3;
        java.util.concurrent.Executor executor5 = webSocketClient1.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient1.remoteAddress;
        byte byte9 = webSocketClient1.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient12.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient21.request = httpRequest32;
        webSocketClient12.request = httpRequest32;
        boolean boolean35 = webSocketClient12.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient36.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient36.remoteAddress = inetSocketAddress38;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        webSocketClient36.remoteAddress = inetSocketAddress40;
        boolean boolean42 = webSocketClient36.ssl;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient36.remoteAddress = inetSocketAddress43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor49 = webSocketClient48.executor;
        org.webbitserver.WebSocketHandler webSocketHandler50 = webSocketClient48.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler50;
        webSocketClient12.webSocketHandler = webSocketHandler50;
        webSocketClient1.webSocketHandler = webSocketHandler50;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -52 + "'", byte9 == (byte) -52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -87 + "'", byte19 == (byte) -87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler50);
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        java.lang.String str15 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient15.request = httpRequest28;
        byte byte30 = webSocketClient15.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket31 = webSocketClient15.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) 17 + "'", byte30 == (byte) 17);
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -68);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) -19);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -68);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) -19);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        boolean boolean7 = webSocketClient0.ssl;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "udoCA7ZwcQs8mBcTDaLGjw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = webSocketClient10.bootstrap;
        webSocketClient10.base64Nonce = "Gh10WdSAxqzXOMY9repDmQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap12);
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "83LMpk5xugKUYrzKR6e1gw==";
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient11.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress41 = webSocketClient11.remoteAddress;
        java.lang.String str42 = webSocketClient11.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress43 = webSocketClient11.remoteAddress;
        org.jboss.netty.channel.Channel channel44 = null;
        webSocketClient11.channel = channel44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient11.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap48 = null;
        webSocketClient47.bootstrap = clientBootstrap48;
        java.net.InetSocketAddress inetSocketAddress50 = webSocketClient47.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory51 = null;
        webSocketClient47.sslFactory = sslFactory51;
        java.lang.String str53 = webSocketClient47.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient60.sslFactory;
        webSocketClient54.sslFactory = sslFactory66;
        webSocketClient47.sslFactory = sslFactory66;
        java.util.concurrent.Executor executor69 = null;
        webSocketClient47.executor = executor69;
        boolean boolean71 = webSocketClient47.ssl;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient47.sslFactory;
        webSocketClient11.sslFactory = sslFactory72;
        webSocketClient0.sslFactory = sslFactory72;
        java.lang.String str75 = webSocketClient0.base64Nonce();
        org.webbitserver.WebSocketHandler webSocketHandler76 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel77 = webSocketClient0.channel;
        boolean boolean78 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "43ccAhhPft49d/U9Pr5hjw==" + "'", str6.equals("43ccAhhPft49d/U9Pr5hjw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "IEIu5sUw9SpC7uG1ESL+Mg==" + "'", str42.equals("IEIu5sUw9SpC7uG1ESL+Mg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str75 + "' != '" + "t603uKaMO8wxu9Sw90kyQQ==" + "'", str75.equals("t603uKaMO8wxu9Sw90kyQQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient12.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient12.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = null;
        webSocketClient0.channel = channel16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress20 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress20);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        byte byte12 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient0.sslFactory;
        boolean boolean22 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -88 + "'", byte7 == (byte) -88);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -102 + "'", byte12 == (byte) -102);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient0.reconnectEvery((long) (byte) -72);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap46 = null;
        webSocketClient43.bootstrap = clientBootstrap46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        webSocketClient0.ssl = false;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "u0YF/I16IYDqtEpSo3Txdg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "1s8tSjpxrYGYqghv2Ky2hw==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient11.reconnectEvery((long) (byte) 5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        byte byte10 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 85 + "'", byte10 == (byte) 85);
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor31 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient33.exceptionHandler;
        org.jboss.netty.channel.Channel channel38 = webSocketClient33.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler39;
        java.util.concurrent.Executor executor41 = webSocketClient33.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient33.createNettyHttpRequest("N0+tm6/4AmtTRMEVl1vyWg==", "bz9M4yZDuhr5wdRP6Myh2Q==");
        org.webbitserver.WebSocketHandler webSocketHandler45 = webSocketClient33.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap47 = null;
        webSocketClient46.bootstrap = clientBootstrap47;
        java.net.InetSocketAddress inetSocketAddress49 = webSocketClient46.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory50 = null;
        webSocketClient46.sslFactory = sslFactory50;
        java.lang.String str52 = webSocketClient46.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = webSocketClient53.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        webSocketClient53.remoteAddress = inetSocketAddress55;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient53.remoteAddress = inetSocketAddress57;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        java.io.InputStream inputStream61 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient59.setupSsl(inputStream61, "hi!");
        java.lang.String str64 = webSocketClient59.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory65 = webSocketClient59.sslFactory;
        webSocketClient53.sslFactory = sslFactory65;
        webSocketClient46.sslFactory = sslFactory65;
        java.util.concurrent.Executor executor68 = null;
        webSocketClient46.executor = executor68;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest72 = webSocketClient46.createNettyHttpRequest("", "");
        java.lang.String str73 = webSocketClient46.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest76 = webSocketClient46.createNettyHttpRequest("ChgXpFpKl1L7KepL4qseEA==", "ChgXpFpKl1L7KepL4qseEA==");
        webSocketClient33.request = httpRequest76;
        webSocketClient0.request = httpRequest76;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str73 + "' != '" + "EOe2g9abkwYJmGrRFL6/8Q==" + "'", str73.equals("EOe2g9abkwYJmGrRFL6/8Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest76);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient5.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient5.sslFactory = sslFactory9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient5.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient5.bootstrap;
        org.jboss.netty.channel.Channel channel14 = webSocketClient5.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient5.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient16.sslFactory = sslFactory24;
        java.util.concurrent.Executor executor26 = webSocketClient16.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient16.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "IlobnN/iHc5JjNScG34Nlw==");
        webSocketClient5.request = httpRequest29;
        webSocketClient0.request = httpRequest29;
        java.lang.String str32 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -122 + "'", byte23 == (byte) -122);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        java.lang.String str10 = webSocketClient9.base64Nonce();
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "wwjktNAMwM29TzNl4vjWvQ==");
        java.lang.String str14 = webSocketClient13.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "G61D4ZEfRwMHzoYJnWfZVQ==" + "'", str10.equals("G61D4ZEfRwMHzoYJnWfZVQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -121 + "'", byte7 == (byte) -121);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory7);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient13.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient9.request = httpRequest25;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient9.setupSsl(inputStream27, "N0+tm6/4AmtTRMEVl1vyWg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient29.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = null;
        webSocketClient31.bootstrap = clientBootstrap32;
        java.net.InetSocketAddress inetSocketAddress34 = webSocketClient31.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory35 = null;
        webSocketClient31.sslFactory = sslFactory35;
        java.lang.String str37 = webSocketClient31.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient38.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        webSocketClient38.remoteAddress = inetSocketAddress40;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient38.remoteAddress = inetSocketAddress42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        java.io.InputStream inputStream46 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient44.setupSsl(inputStream46, "hi!");
        java.lang.String str49 = webSocketClient44.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient44.sslFactory;
        webSocketClient38.sslFactory = sslFactory50;
        webSocketClient31.sslFactory = sslFactory50;
        java.util.concurrent.Executor executor53 = null;
        webSocketClient31.executor = executor53;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient31.createNettyHttpRequest("", "");
        java.lang.String str58 = webSocketClient31.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient31.createNettyHttpRequest("gO4Pa27vZGrHm3PovkCmEQ==", "0P/hOXDpaVTFT0/RTrs9Ng==");
        webSocketClient29.request = httpRequest61;
        webSocketClient0.request = httpRequest61;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) -30 + "'", byte20 == (byte) -30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str58 + "' != '" + "6A+rN91olMlq9EAnxj5Vng==" + "'", str58.equals("6A+rN91olMlq9EAnxj5Vng=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest61);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient12.sslFactory = sslFactory30;
        webSocketClient10.sslFactory = sslFactory30;
        byte byte34 = webSocketClient10.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -80 + "'", byte11 == (byte) -80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte34 + "' != '" + (byte) 89 + "'", byte34 == (byte) 89);
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "CGqGuSvtBGsYL/KGe3kBhA==";
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        webSocketClient0.base64Nonce = "UV67rgAHDvkhWIAKaLprbA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "alODXB9ILViLUR13udkAtA==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient27.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -34);
        java.util.concurrent.Executor executor15 = null;
        webSocketClient0.executor = executor15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel10 = null;
        webSocketClient0.channel = channel10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        webSocketClient0.ssl = false;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.createNettyHttpRequest("nvTYxdexz/cP8RLKn3SDng==", "XKCd3fxfREUNH3Zloflx4w==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 8 + "'", byte7 == (byte) 8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "mQAP3cHAvb9wHCxGbXANmQ==" + "'", str10.equals("mQAP3cHAvb9wHCxGbXANmQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        byte byte13 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -61 + "'", byte13 == (byte) -61);
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.lang.String str11 = webSocketClient9.base64Nonce();
        byte byte12 = webSocketClient9.randomByte();
        java.lang.Class<?> wildcardClass13 = webSocketClient9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "pX2Vt05GsMno5fZg9I0vlQ==" + "'", str11.equals("pX2Vt05GsMno5fZg9I0vlQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -92 + "'", byte12 == (byte) -92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "3uU6Db4r7NuQVyPU+TDEaw==";
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress28 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler30);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        webSocketClient8.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "Wuw9DwpcfZ8RhVzFju5sig==" + "'", str5.equals("Wuw9DwpcfZ8RhVzFju5sig=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -73 + "'", byte8 == (byte) -73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "CinYmgYmZnao4SbZGdlRXw==";
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = null;
        webSocketClient0.bootstrap = clientBootstrap26;
        org.jboss.netty.channel.Channel channel28 = null;
        webSocketClient0.channel = channel28;
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler30);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.ssl = true;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = null;
        webSocketClient12.ioExceptionHandler = uncaughtExceptionHandler19;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient12.setupSsl(inputStream21, "085v8bpfTuqmMi+NJNaitw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "rfzrf9WLLlPEZAtJTov+Nw==" + "'", str18.equals("rfzrf9WLLlPEZAtJTov+Nw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient1.sslFactory;
        org.jboss.netty.channel.Channel channel8 = webSocketClient1.channel;
        java.lang.String str9 = webSocketClient1.base64Nonce();
        java.lang.String str10 = webSocketClient1.base64Nonce;
        boolean boolean11 = webSocketClient1.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient1.reconnectEvery((long) (byte) -49);
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient16.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient16.reconnectEvery((long) (byte) 100);
        java.lang.String str27 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient28.ioExceptionHandler;
        byte byte35 = webSocketClient28.randomByte();
        webSocketClient28.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient38.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = null;
        webSocketClient38.exceptionHandler = uncaughtExceptionHandler40;
        java.util.concurrent.Executor executor42 = webSocketClient38.executor;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient38.remoteAddress = inetSocketAddress43;
        java.io.InputStream inputStream45 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient38.setupSsl(inputStream45, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient48.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = null;
        webSocketClient51.ioExceptionHandler = uncaughtExceptionHandler52;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient51.webSocketHandler;
        webSocketClient47.webSocketHandler = webSocketHandler54;
        webSocketClient28.webSocketHandler = webSocketHandler54;
        webSocketClient16.webSocketHandler = webSocketHandler54;
        webSocketClient15.webSocketHandler = webSocketHandler54;
        java.util.concurrent.Executor executor59 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler54, executor59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "c3ycCDxndM0l9USxe3fmRw==" + "'", str9.equals("c3ycCDxndM0l9USxe3fmRw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -121 + "'", byte23 == (byte) -121);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte35 + "' != '" + (byte) 76 + "'", byte35 == (byte) 76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.util.concurrent.Executor executor20 = webSocketClient9.executor;
        byte byte21 = webSocketClient9.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient9.ioExceptionHandler;
        java.lang.String str23 = webSocketClient9.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 97 + "'", byte21 == (byte) 97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient5.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient5.sslFactory = sslFactory9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient12.sslFactory = sslFactory24;
        webSocketClient5.sslFactory = sslFactory24;
        java.util.concurrent.Executor executor27 = null;
        webSocketClient5.executor = executor27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient5.createNettyHttpRequest("", "");
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient5.setupSsl(inputStream32, "");
        java.net.InetSocketAddress inetSocketAddress35 = webSocketClient34.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = null;
        webSocketClient39.ioExceptionHandler = uncaughtExceptionHandler40;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient39.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler43 = webSocketClient39.webSocketHandler;
        webSocketClient34.webSocketHandler = webSocketHandler43;
        webSocketClient3.webSocketHandler = webSocketHandler43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler43);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "hi!");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient11.exceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient14.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor18 = webSocketClient17.executor;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient17.webSocketHandler;
        webSocketClient11.webSocketHandler = webSocketHandler19;
        java.lang.String str21 = webSocketClient11.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("+Sk1xnDm+VQXd7Wyv5++gQ==", "ny1+cgF2IPSTkpuXDy6KEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler16;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket18 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient4.sslFactory = sslFactory8;
        java.lang.String str10 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient4.sslFactory = sslFactory23;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient4.executor = executor26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient4.createNettyHttpRequest("", "");
        webSocketClient0.request = httpRequest30;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient0.ioExceptionHandler;
        java.lang.String str33 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str33 + "' != '" + "3cGUypfJLqapWJrw3mfBmA==" + "'", str33.equals("3cGUypfJLqapWJrw3mfBmA=="));
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient0.createNettyHttpRequest("mDNiHnSq15ff4wc7aJZvFg==", "aIytBmjn5IC6ITF93PeW7Q==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient0.createNettyHttpRequest("", "gO4Pa27vZGrHm3PovkCmEQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) 59);
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        webSocketClient0.ssl = true;
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -91 + "'", byte7 == (byte) -91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        boolean boolean14 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "uMPK6wygZeLpqmlWTkpW0Q==" + "'", str10.equals("uMPK6wygZeLpqmlWTkpW0Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler20;
        java.lang.Class<?> wildcardClass22 = webSocketClient9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 24;
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "qcyB1VUvw6+2NxfeqFhJEA==");
        boolean boolean10 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.String str9 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient10.request = httpRequest28;
        webSocketClient0.request = httpRequest28;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -118 + "'", byte8 == (byte) -118);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "vJRspapVve03I+B6aG3PLw==" + "'", str9.equals("vJRspapVve03I+B6aG3PLw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean16 = webSocketClient12.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient12.webSocketHandler;
        webSocketClient12.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.Class<?> wildcardClass14 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient6.sslFactory = sslFactory12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient22.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient22.webSocketHandler;
        webSocketClient6.webSocketHandler = webSocketHandler25;
        webSocketClient3.webSocketHandler = webSocketHandler25;
        byte byte28 = webSocketClient3.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient3.reconnectEvery((long) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = null;
        webSocketClient31.sslFactory = sslFactory37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient31.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient31.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream44 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient43.setupSsl(inputStream44, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean47 = webSocketClient43.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler48 = webSocketClient43.webSocketHandler;
        webSocketClient3.webSocketHandler = webSocketHandler48;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 63 + "'", byte28 == (byte) 63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler48);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.jboss.netty.channel.Channel channel32 = webSocketClient29.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel32);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "xxKzJ7ZBL2OV4/6bI3zD/Q==";
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel15 = webSocketClient0.channel;
        java.util.concurrent.Executor executor16 = null;
        webSocketClient0.executor = executor16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel15);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.lang.String str11 = webSocketClient9.base64Nonce();
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient9.setupSsl(inputStream12, "CM9+FVULfI5X0kpVHtOesA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "QmiF2TD92gTdub2MOK8Puw==" + "'", str11.equals("QmiF2TD92gTdub2MOK8Puw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient9.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient9.remoteAddress = inetSocketAddress13;
        boolean boolean15 = webSocketClient9.ssl;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient9.remoteAddress = inetSocketAddress16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient18.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor22 = webSocketClient21.executor;
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient21.webSocketHandler;
        webSocketClient9.webSocketHandler = webSocketHandler23;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient9.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient9.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient9.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = null;
        webSocketClient28.sslFactory = sslFactory34;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient28.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = null;
        webSocketClient28.ioExceptionHandler = uncaughtExceptionHandler39;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient41.request;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient41.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = null;
        webSocketClient44.ioExceptionHandler = uncaughtExceptionHandler45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        webSocketClient28.webSocketHandler = webSocketHandler47;
        webSocketClient9.webSocketHandler = webSocketHandler47;
        webSocketClient0.webSocketHandler = webSocketHandler47;
        webSocketClient0.base64Nonce = "amJQRgY7DJXeL8NCBkiFwA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 125 + "'", byte8 == (byte) 125);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler47);
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient1.request;
        org.jboss.netty.channel.Channel channel8 = webSocketClient1.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient11.ioExceptionHandler;
        byte byte18 = webSocketClient11.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient11.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient23.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient20.request = httpRequest31;
        webSocketClient11.request = httpRequest31;
        boolean boolean34 = webSocketClient11.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        boolean boolean41 = webSocketClient35.ssl;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient35.remoteAddress = inetSocketAddress42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient44.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor48 = webSocketClient47.executor;
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient47.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler49;
        webSocketClient11.webSocketHandler = webSocketHandler49;
        webSocketClient10.webSocketHandler = webSocketHandler49;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 63 + "'", byte18 == (byte) 63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler49);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.jboss.netty.channel.Channel channel13 = null;
        webSocketClient0.channel = channel13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient3.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient10.ioExceptionHandler;
        byte byte17 = webSocketClient10.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient10.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap20 = null;
        webSocketClient19.bootstrap = clientBootstrap20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient22.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient19.request = httpRequest30;
        webSocketClient10.request = httpRequest30;
        boolean boolean33 = webSocketClient10.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        boolean boolean40 = webSocketClient34.ssl;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient34.remoteAddress = inetSocketAddress41;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient43.request;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient43.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor47 = webSocketClient46.executor;
        org.webbitserver.WebSocketHandler webSocketHandler48 = webSocketClient46.webSocketHandler;
        webSocketClient34.webSocketHandler = webSocketHandler48;
        webSocketClient10.webSocketHandler = webSocketHandler48;
        webSocketClient9.webSocketHandler = webSocketHandler48;
        java.lang.Class<?> wildcardClass52 = webSocketClient9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -42 + "'", byte17 == (byte) -42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "D0idbTvLNjLtFNN1K3L1Vw==";
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "");
        org.jboss.netty.channel.Channel channel10 = webSocketClient9.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient9.bootstrap = clientBootstrap11;
        webSocketClient9.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient0.bootstrap = clientBootstrap8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "N3KabY75o+ld6Oy+K32Dpw==" + "'", str10.equals("N3KabY75o+ld6Oy+K32Dpw=="));
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "fw5nu7vgXJICwwwvGDkj1Q==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient15.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient12.sslFactory;
        java.lang.String str14 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.reconnectEvery((long) (byte) -61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) 99);
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient12.webSocketHandler = webSocketHandler40;
        webSocketClient0.webSocketHandler = webSocketHandler40;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "L2iDLaigJUouiYAkzvfSGg==" + "'", str6.equals("L2iDLaigJUouiYAkzvfSGg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 50 + "'", byte19 == (byte) 50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "54PRmm8EnGcV2VOcjHfgog==");
        byte byte16 = webSocketClient9.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) -18 + "'", byte16 == (byte) -18);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.lang.String str32 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler33;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap35 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "cmQckmITiaEH71VBi0oJ8g==" + "'", str31.equals("cmQckmITiaEH71VBi0oJ8g=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str32 + "' != '" + "cmQckmITiaEH71VBi0oJ8g==" + "'", str32.equals("cmQckmITiaEH71VBi0oJ8g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap35);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient12.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient12.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel15 = null;
        webSocketClient12.channel = channel15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient1.setupSsl(inputStream28, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient30.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient30.webSocketHandler = webSocketHandler52;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient30.webSocketHandler;
        java.util.concurrent.Executor executor56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler55, executor56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient0.bootstrap = clientBootstrap24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "c91MzizhrGzYhhzUwaQnWQ==");
        java.lang.Class<?> wildcardClass29 = httpRequest28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 118 + "'", byte7 == (byte) 118);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        byte byte45 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 94 + "'", byte45 == (byte) 94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        webSocketClient0.base64Nonce = "ZXFuSAGTWS0VsPE7+uis2w==";
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        java.lang.Class<?> wildcardClass9 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ar3KnU5rWAu4cSS80Zjk9w==");
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient9.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "sdmXqGkUzPuzi47FYKcvOA==";
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory14);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient1.sslFactory;
        org.jboss.netty.channel.Channel channel8 = webSocketClient1.channel;
        java.lang.String str9 = webSocketClient1.base64Nonce();
        java.lang.String str10 = webSocketClient1.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient1.sslFactory;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient1.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient1.webSocketHandler = webSocketHandler28;
        java.util.concurrent.Executor executor31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler28, executor31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "960L8/9SbrtN9ts+21KHHg==" + "'", str9.equals("960L8/9SbrtN9ts+21KHHg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        java.lang.String str16 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.exceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket18 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 64;
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        webSocketClient0.ssl = false;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "Y7fYKSDhJTaZISoV5wUmew==" + "'", str8.equals("Y7fYKSDhJTaZISoV5wUmew=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel12 = webSocketClient0.channel;
        java.lang.String str13 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "vxKIq61VP669D6vxqw1H1g==" + "'", str13.equals("vxKIq61VP669D6vxqw1H1g=="));
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "8p7LCKm162aB5HDTC2UhZw==" + "'", str10.equals("8p7LCKm162aB5HDTC2UhZw=="));
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient12.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.ioExceptionHandler = uncaughtExceptionHandler14;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient12.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 68;
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient4.sslFactory = sslFactory8;
        java.lang.String str10 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient4.sslFactory = sslFactory23;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient4.executor = executor26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient4.createNettyHttpRequest("", "");
        webSocketClient0.request = httpRequest30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient0.remoteAddress = inetSocketAddress32;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap34 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap35 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap35);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.String str41 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "UDGnytccD6V3MzZ/QFvOWA==" + "'", str41.equals("UDGnytccD6V3MzZ/QFvOWA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler40);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient3.exceptionHandler = uncaughtExceptionHandler8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient3.exceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        boolean boolean7 = webSocketClient1.ssl;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient1.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient13.webSocketHandler;
        webSocketClient1.webSocketHandler = webSocketHandler15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient1.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient1.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient1.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = null;
        webSocketClient20.sslFactory = sslFactory26;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient20.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient20.ioExceptionHandler = uncaughtExceptionHandler31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient33.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler37;
        org.webbitserver.WebSocketHandler webSocketHandler39 = webSocketClient36.webSocketHandler;
        webSocketClient20.webSocketHandler = webSocketHandler39;
        webSocketClient1.webSocketHandler = webSocketHandler39;
        java.util.concurrent.Executor executor42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler39, executor42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler39);
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        boolean boolean10 = webSocketClient0.ssl;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.setupSsl(inputStream11, "1s8tSjpxrYGYqghv2Ky2hw==");
        java.lang.String str14 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = null;
        webSocketClient0.request = httpRequest15;
        webSocketClient0.base64Nonce = "smo9M0TbcLt8BHYnnSkSyw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 112 + "'", byte7 == (byte) 112);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "VzXaCQ5Dk/ShzwplMQJsSA==" + "'", str14.equals("VzXaCQ5Dk/ShzwplMQJsSA=="));
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.lang.String str32 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap33 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "lLjzOBMulbbZQSIFWhDqxQ==" + "'", str31.equals("lLjzOBMulbbZQSIFWhDqxQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str32 + "' != '" + "lLjzOBMulbbZQSIFWhDqxQ==" + "'", str32.equals("lLjzOBMulbbZQSIFWhDqxQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap33);
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.setupSsl(inputStream11, "");
        java.util.concurrent.Executor executor14 = null;
        webSocketClient13.executor = executor14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        webSocketClient5.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient23.request = httpRequest34;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient23.sslFactory;
        webSocketClient0.sslFactory = sslFactory36;
        java.lang.String str38 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -87 + "'", byte12 == (byte) -87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str38 + "' != '" + "BocY1ljtfkUNGy8Eg3b5lg==" + "'", str38.equals("BocY1ljtfkUNGy8Eg3b5lg=="));
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -39 + "'", byte7 == (byte) -39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "fw5nu7vgXJICwwwvGDkj1Q==");
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient0.setupSsl(inputStream49, "33kC5iWENnLS5T6zbOSLQA==");
        byte byte52 = webSocketClient51.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte52 + "' != '" + (byte) 23 + "'", byte52 == (byte) 23);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "qcyB1VUvw6+2NxfeqFhJEA==");
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient0.reconnectEvery((long) (byte) 7);
        org.jboss.netty.channel.Channel channel31 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "U+t5L8Tz9D8MbIOyOTFZCg==" + "'", str27.equals("U+t5L8Tz9D8MbIOyOTFZCg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient6.sslFactory = sslFactory12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient22.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient22.webSocketHandler;
        webSocketClient6.webSocketHandler = webSocketHandler25;
        webSocketClient3.webSocketHandler = webSocketHandler25;
        byte byte28 = webSocketClient3.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient3.reconnectEvery((long) 10);
        byte byte31 = webSocketClient30.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -84 + "'", byte28 == (byte) -84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte31 + "' != '" + (byte) -54 + "'", byte31 == (byte) -54);
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "5xRsUQhMymlOFt/OkLooeQ==";
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -74);
        boolean boolean10 = webSocketClient9.ssl;
        java.util.concurrent.Executor executor11 = webSocketClient9.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient9.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient9.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -71 + "'", byte7 == (byte) -71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler12;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient10.remoteAddress = inetSocketAddress15;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler26;
        webSocketClient0.webSocketHandler = webSocketHandler26;
        java.lang.String str29 = webSocketClient0.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket30 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 76 + "'", byte7 == (byte) 76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "krxX+0SALsrGlVKGrvtJOQ==" + "'", str29.equals("krxX+0SALsrGlVKGrvtJOQ=="));
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient10.executor = executor12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient10.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        byte byte4 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 45 + "'", byte4 == (byte) 45);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        boolean boolean9 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient10.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory14 = null;
        webSocketClient10.sslFactory = sslFactory14;
        java.lang.String str16 = webSocketClient10.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        webSocketClient17.sslFactory = sslFactory29;
        webSocketClient10.sslFactory = sslFactory29;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient10.executor = executor32;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient10.createNettyHttpRequest("", "");
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient10.setupSsl(inputStream37, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap40 = null;
        webSocketClient39.bootstrap = clientBootstrap40;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient39.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient39.sslFactory;
        webSocketClient0.sslFactory = sslFactory43;
        java.net.InetSocketAddress inetSocketAddress45 = webSocketClient0.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap46 = null;
        webSocketClient0.bootstrap = clientBootstrap46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress45);
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        byte byte13 = webSocketClient12.randomByte();
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient12.remoteAddress;
        java.lang.Class<?> wildcardClass15 = webSocketClient12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 31 + "'", byte13 == (byte) 31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "/yLbCKXcuNbDeGEkNi6Lgw==" + "'", str6.equals("/yLbCKXcuNbDeGEkNi6Lgw=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 108 + "'", byte9 == (byte) 108);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler3 = webSocketClient1.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient1.createNettyHttpRequest("alODXB9ILViLUR13udkAtA==", "alODXB9ILViLUR13udkAtA==");
        webSocketClient1.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient9.setupSsl(inputStream36, "");
        java.net.InetSocketAddress inetSocketAddress39 = webSocketClient38.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient40.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient43.ioExceptionHandler = uncaughtExceptionHandler44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient43.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient43.webSocketHandler;
        webSocketClient38.webSocketHandler = webSocketHandler47;
        webSocketClient1.webSocketHandler = webSocketHandler47;
        java.util.concurrent.Executor executor50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient51 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler47, executor50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler47);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.exceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 121 + "'", byte7 == (byte) 121);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "l/lBgLN4mJHS1YIheVbdfQ==" + "'", str11.equals("l/lBgLN4mJHS1YIheVbdfQ=="));
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("24d2+2MU1eL56fhTUzMipw==", "F+qW/sCpTme4kuE075cerw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 47 + "'", byte7 == (byte) 47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = null;
        webSocketClient0.request = httpRequest8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient0.setupSsl(inputStream49, "33kC5iWENnLS5T6zbOSLQA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler52;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap54 = null;
        webSocketClient0.bootstrap = clientBootstrap54;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient29.sslFactory;
        java.lang.String str31 = webSocketClient29.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "ywwj5uiP+uhyIb2Y828Pdw==" + "'", str31.equals("ywwj5uiP+uhyIb2Y828Pdw=="));
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.reconnectEvery(0L);
        java.lang.String str14 = webSocketClient13.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = null;
        webSocketClient0.bootstrap = clientBootstrap26;
        org.jboss.netty.channel.Channel channel28 = null;
        webSocketClient0.channel = channel28;
        java.lang.String str30 = webSocketClient0.base64Nonce;
        byte byte31 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str30 + "' != '" + "Kn2C085WObiMpJSmcbXgaA==" + "'", str30.equals("Kn2C085WObiMpJSmcbXgaA=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte31 + "' != '" + (byte) 33 + "'", byte31 == (byte) 33);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 12);
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient14.reconnectEvery((long) (byte) -89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ar3KnU5rWAu4cSS80Zjk9w==");
        webSocketClient0.ssl = true;
        boolean boolean12 = webSocketClient0.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "uq+ogkA4uylV3lEeJ3joKw==";
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.reconnectEvery((long) (byte) 88);
        java.util.concurrent.Executor executor20 = null;
        webSocketClient15.executor = executor20;
        webSocketClient15.base64Nonce = "SGIJvgi6dv8vHy8qg/Y6XQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        boolean boolean10 = webSocketClient9.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient9.bootstrap = clientBootstrap11;
        java.lang.String str13 = webSocketClient9.base64Nonce();
        java.lang.Class<?> wildcardClass14 = webSocketClient9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "Sa0Oa7IPRJ3YLxF2svcpiw==" + "'", str13.equals("Sa0Oa7IPRJ3YLxF2svcpiw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor6 = null;
        webSocketClient3.executor = executor6;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient3.channel = channel8;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient3.request;
        byte byte11 = webSocketClient3.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -2 + "'", byte11 == (byte) -2);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "+eRW6QwAFWt317cFV0Co/Q==" + "'", str11.equals("+eRW6QwAFWt317cFV0Co/Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        webSocketClient5.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient23.request = httpRequest34;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient23.sslFactory;
        webSocketClient0.sslFactory = sslFactory36;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = webSocketClient0.ioExceptionHandler;
        webSocketClient0.ssl = true;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -118 + "'", byte12 == (byte) -118);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler38);
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = null;
        webSocketClient1.bootstrap = clientBootstrap3;
        java.util.concurrent.Executor executor5 = webSocketClient1.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient1.remoteAddress;
        byte byte9 = webSocketClient1.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient12.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient21.request = httpRequest32;
        webSocketClient12.request = httpRequest32;
        boolean boolean35 = webSocketClient12.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient36.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient36.remoteAddress = inetSocketAddress38;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        webSocketClient36.remoteAddress = inetSocketAddress40;
        boolean boolean42 = webSocketClient36.ssl;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient36.remoteAddress = inetSocketAddress43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor49 = webSocketClient48.executor;
        org.webbitserver.WebSocketHandler webSocketHandler50 = webSocketClient48.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler50;
        webSocketClient12.webSocketHandler = webSocketHandler50;
        webSocketClient1.webSocketHandler = webSocketHandler50;
        java.util.concurrent.Executor executor54 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler50, executor54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 26 + "'", byte9 == (byte) 26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 85 + "'", byte19 == (byte) 85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler50);
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.jboss.netty.channel.Channel channel13 = null;
        webSocketClient0.channel = channel13;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = null;
        webSocketClient16.bootstrap = clientBootstrap18;
        java.util.concurrent.Executor executor20 = webSocketClient16.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler21;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient16.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler24;
        org.jboss.netty.channel.Channel channel26 = webSocketClient16.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = webSocketClient29.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient29.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient36.bootstrap = clientBootstrap37;
        java.net.InetSocketAddress inetSocketAddress39 = webSocketClient36.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory40 = null;
        webSocketClient36.sslFactory = sslFactory40;
        java.lang.String str42 = webSocketClient36.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient43.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient43.remoteAddress = inetSocketAddress45;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient43.remoteAddress = inetSocketAddress47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        java.io.InputStream inputStream51 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient49.setupSsl(inputStream51, "hi!");
        java.lang.String str54 = webSocketClient49.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory55 = webSocketClient49.sslFactory;
        webSocketClient43.sslFactory = sslFactory55;
        webSocketClient36.sslFactory = sslFactory55;
        java.util.concurrent.Executor executor58 = null;
        webSocketClient36.executor = executor58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient60.sslFactory;
        webSocketClient36.sslFactory = sslFactory66;
        webSocketClient29.sslFactory = sslFactory66;
        org.webbitserver.helpers.SslFactory sslFactory69 = webSocketClient29.sslFactory;
        webSocketClient16.sslFactory = sslFactory69;
        webSocketClient0.sslFactory = sslFactory69;
        java.lang.Class<?> wildcardClass72 = sslFactory69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.lang.String str13 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient15.ioExceptionHandler;
        byte byte22 = webSocketClient15.randomByte();
        webSocketClient15.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient15.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest27;
        webSocketClient0.ssl = true;
        java.lang.Class<?> wildcardClass31 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "UeHf15FnOThcrgPv9qoWkw==" + "'", str13.equals("UeHf15FnOThcrgPv9qoWkw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) -60 + "'", byte22 == (byte) -60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "sCQxpxt6SlIl1p9Qh4uRVw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.base64Nonce = "xObPeY7blHrn4terN5S4rA==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 39;
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("xIdknz+y8UhUqmh/bOfLAQ==", "xe96fFoyYqeV/lCAj7S/AQ==");
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "D0sS+Vl+RI+PpkfHEZ0ruQ==" + "'", str7.equals("D0sS+Vl+RI+PpkfHEZ0ruQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler18;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap20 = webSocketClient0.bootstrap;
        boolean boolean21 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 12 + "'", byte7 == (byte) 12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        webSocketClient0.base64Nonce = "k8f9EvvC8IJ1WzuBGYszbw==";
        byte byte14 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -109 + "'", byte14 == (byte) -109);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery(10L);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient9.createNettyHttpRequest("Uw6Avo1gP96qcEE49N8kvw==", "zUkyA+zzqTKCvBgEk+t+dw==");
        java.util.concurrent.Executor executor13 = null;
        webSocketClient9.executor = executor13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient4.ioExceptionHandler;
        byte byte11 = webSocketClient4.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient4.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient4.reconnectEvery((long) (byte) 100);
        java.lang.String str15 = webSocketClient4.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        webSocketClient16.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = null;
        webSocketClient26.exceptionHandler = uncaughtExceptionHandler28;
        java.util.concurrent.Executor executor30 = webSocketClient26.executor;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient26.remoteAddress = inetSocketAddress31;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient26.setupSsl(inputStream33, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = null;
        webSocketClient39.ioExceptionHandler = uncaughtExceptionHandler40;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient39.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler42;
        webSocketClient16.webSocketHandler = webSocketHandler42;
        webSocketClient4.webSocketHandler = webSocketHandler42;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient46.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = null;
        webSocketClient46.exceptionHandler = uncaughtExceptionHandler48;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient51.request;
        java.io.InputStream inputStream53 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = webSocketClient51.setupSsl(inputStream53, "hi!");
        java.lang.String str56 = webSocketClient51.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory57 = webSocketClient51.sslFactory;
        org.jboss.netty.channel.Channel channel58 = webSocketClient51.channel;
        org.webbitserver.helpers.SslFactory sslFactory59 = webSocketClient51.sslFactory;
        webSocketClient46.sslFactory = sslFactory59;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap62 = null;
        webSocketClient61.bootstrap = clientBootstrap62;
        java.net.InetSocketAddress inetSocketAddress64 = webSocketClient61.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory65 = null;
        webSocketClient61.sslFactory = sslFactory65;
        java.lang.String str67 = webSocketClient61.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient68 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler69 = webSocketClient68.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        webSocketClient68.remoteAddress = inetSocketAddress70;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        webSocketClient68.remoteAddress = inetSocketAddress72;
        org.webbitserver.netty.WebSocketClient webSocketClient74 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest75 = webSocketClient74.request;
        java.io.InputStream inputStream76 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient78 = webSocketClient74.setupSsl(inputStream76, "hi!");
        java.lang.String str79 = webSocketClient74.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory80 = webSocketClient74.sslFactory;
        webSocketClient68.sslFactory = sslFactory80;
        webSocketClient61.sslFactory = sslFactory80;
        java.util.concurrent.Executor executor83 = null;
        webSocketClient61.executor = executor83;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest87 = webSocketClient61.createNettyHttpRequest("", "");
        java.io.InputStream inputStream88 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient90 = webSocketClient61.setupSsl(inputStream88, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap91 = null;
        webSocketClient90.bootstrap = clientBootstrap91;
        org.webbitserver.WebSocketHandler webSocketHandler93 = webSocketClient90.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory94 = webSocketClient90.sslFactory;
        webSocketClient46.sslFactory = sslFactory94;
        org.webbitserver.helpers.SslFactory sslFactory96 = webSocketClient46.sslFactory;
        webSocketClient4.sslFactory = sslFactory96;
        webSocketClient0.sslFactory = sslFactory96;
        java.lang.Class<?> wildcardClass99 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -42 + "'", byte11 == (byte) -42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 19 + "'", byte23 == (byte) 19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.setupSsl(inputStream11, "");
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient10.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 110 + "'", byte7 == (byte) 110);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.exceptionHandler;
        org.jboss.netty.channel.Channel channel13 = webSocketClient8.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler14;
        byte byte16 = webSocketClient8.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        boolean boolean23 = webSocketClient17.ssl;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient17.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient26.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor30 = webSocketClient29.executor;
        org.webbitserver.WebSocketHandler webSocketHandler31 = webSocketClient29.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler31;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient17.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient17.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient17.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = null;
        webSocketClient36.sslFactory = sslFactory42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient36.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient52.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient52.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler55;
        webSocketClient17.webSocketHandler = webSocketHandler55;
        webSocketClient8.webSocketHandler = webSocketHandler55;
        webSocketClient0.webSocketHandler = webSocketHandler55;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        webSocketClient0.remoteAddress = inetSocketAddress60;
        org.webbitserver.helpers.SslFactory sslFactory62 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler63 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) -1 + "'", byte16 == (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest64);
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient10.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory14 = null;
        webSocketClient10.sslFactory = sslFactory14;
        java.lang.String str16 = webSocketClient10.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        webSocketClient17.sslFactory = sslFactory29;
        webSocketClient10.sslFactory = sslFactory29;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient10.executor = executor32;
        boolean boolean34 = webSocketClient10.ssl;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient10.sslFactory;
        webSocketClient9.sslFactory = sslFactory35;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient9.bootstrap = clientBootstrap37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        java.lang.String str6 = webSocketClient1.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient1.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.reconnectEvery(10L);
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient11.bootstrap;
        org.jboss.netty.channel.Channel channel20 = webSocketClient11.channel;
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient11.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient11.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient11.reconnectEvery((long) (byte) -34);
        webSocketClient25.base64Nonce = "fpiUMs7WpK0bMjjr8BcyOw==";
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient25.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient25.webSocketHandler;
        webSocketClient10.webSocketHandler = webSocketHandler29;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler29);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient15.ioExceptionHandler;
        byte byte22 = webSocketClient15.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory23 = null;
        webSocketClient15.sslFactory = sslFactory23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = null;
        webSocketClient15.webSocketHandler = webSocketHandler25;
        byte byte27 = webSocketClient15.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient15.sslFactory = sslFactory34;
        webSocketClient0.sslFactory = sslFactory34;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 49 + "'", byte7 == (byte) 49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 119 + "'", byte22 == (byte) 119);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) -125 + "'", byte27 == (byte) -125);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap37);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient1.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient1.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient11.ioExceptionHandler;
        byte byte18 = webSocketClient11.randomByte();
        webSocketClient11.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient21.exceptionHandler = uncaughtExceptionHandler23;
        java.util.concurrent.Executor executor25 = webSocketClient21.executor;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient21.remoteAddress = inetSocketAddress26;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient21.setupSsl(inputStream28, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient31.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler35;
        org.webbitserver.WebSocketHandler webSocketHandler37 = webSocketClient34.webSocketHandler;
        webSocketClient30.webSocketHandler = webSocketHandler37;
        webSocketClient11.webSocketHandler = webSocketHandler37;
        webSocketClient1.webSocketHandler = webSocketHandler37;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 66 + "'", byte18 == (byte) 66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler37);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient5.bootstrap = clientBootstrap6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient5.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient5.sslFactory = sslFactory9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient5.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient5.bootstrap;
        org.jboss.netty.channel.Channel channel14 = webSocketClient5.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient5.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient16.sslFactory = sslFactory24;
        java.util.concurrent.Executor executor26 = webSocketClient16.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient16.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "IlobnN/iHc5JjNScG34Nlw==");
        webSocketClient5.request = httpRequest29;
        webSocketClient0.request = httpRequest29;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 49 + "'", byte23 == (byte) 49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -65 + "'", byte7 == (byte) -65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient3.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient3.reconnectEvery((long) (byte) -44);
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient11.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory12);
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        java.util.concurrent.Executor executor40 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel41 = webSocketClient0.channel;
        boolean boolean42 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.createNettyHttpRequest("N0+tm6/4AmtTRMEVl1vyWg==", "bz9M4yZDuhr5wdRP6Myh2Q==");
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient0.channel = channel12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        boolean boolean14 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        org.jboss.netty.channel.Channel channel20 = null;
        webSocketClient13.channel = channel20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient25.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient22.request = httpRequest33;
        java.util.concurrent.Executor executor35 = webSocketClient22.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient22.request;
        webSocketClient13.request = httpRequest36;
        webSocketClient7.request = httpRequest36;
        webSocketClient0.request = httpRequest36;
        org.jboss.netty.channel.Channel channel40 = webSocketClient0.channel;
        webSocketClient0.base64Nonce = "+DKK8jDHzErMcAWhfLklKg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel40);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("a7zdjb+g3taq4pj3h+G+pg==", "9IGsDRkMzTKrFAbPxWWAHg==");
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 5;
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        boolean boolean7 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient12.sslFactory;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient12.executor = executor14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery(10L);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient9.createNettyHttpRequest("Uw6Avo1gP96qcEE49N8kvw==", "zUkyA+zzqTKCvBgEk+t+dw==");
        boolean boolean13 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient0.remoteAddress = inetSocketAddress37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient0.createNettyHttpRequest("NjQj/ZFqfCs0t0u5rXHLgA==", "HXjzRmZPQI8/opCCDdWOBA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -17 + "'", byte6 == (byte) -17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "2js3/fNuBzm9nKySqOls5g==" + "'", str7.equals("2js3/fNuBzm9nKySqOls5g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        byte byte45 = webSocketClient0.randomByte();
        java.io.InputStream inputStream46 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient0.setupSsl(inputStream46, "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 80 + "'", byte45 == (byte) 80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel11 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "wZcd0/VnaBO/6Nyl3rBokA==" + "'", str8.equals("wZcd0/VnaBO/6Nyl3rBokA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel11);
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "WKPf7oYc0z9L3rYlvMwNYA==" + "'", str8.equals("WKPf7oYc0z9L3rYlvMwNYA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        org.jboss.netty.channel.Channel channel12 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        boolean boolean7 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        java.lang.String str13 = webSocketClient8.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient8.sslFactory;
        webSocketClient0.sslFactory = sslFactory14;
        java.util.concurrent.Executor executor16 = null;
        webSocketClient0.executor = executor16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient0.webSocketHandler;
        java.lang.String str25 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient0.setupSsl(inputStream26, "o94DzX8+pWNsDDArBjspXg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str25 + "' != '" + "5Ma8oi522D1LuSozY01vGA==" + "'", str25.equals("5Ma8oi522D1LuSozY01vGA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient0.remoteAddress;
        byte byte19 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler20;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient0.bootstrap = clientBootstrap23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 2 + "'", byte19 == (byte) 2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -106);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient7.bootstrap;
        webSocketClient7.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient7.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient7.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler13);
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient29.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient29.request;
        boolean boolean56 = webSocketClient29.ssl;
        byte byte57 = webSocketClient29.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte57 + "' != '" + (byte) -93 + "'", byte57 == (byte) -93);
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("a7zdjb+g3taq4pj3h+G+pg==", "9IGsDRkMzTKrFAbPxWWAHg==");
        boolean boolean8 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler12;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient10.remoteAddress = inetSocketAddress15;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler26;
        webSocketClient0.webSocketHandler = webSocketHandler26;
        java.lang.String str29 = webSocketClient0.base64Nonce();
        boolean boolean30 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -16 + "'", byte7 == (byte) -16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "R1bsO1I7XuN5J5Wsln2F7w==" + "'", str29.equals("R1bsO1I7XuN5J5Wsln2F7w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient13.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient0.remoteAddress = inetSocketAddress21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler19);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        webSocketClient1.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient1.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler16;
        java.util.concurrent.Executor executor18 = webSocketClient14.executor;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient14.remoteAddress = inetSocketAddress19;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient14.setupSsl(inputStream21, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient24.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = null;
        webSocketClient27.ioExceptionHandler = uncaughtExceptionHandler28;
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient27.webSocketHandler;
        webSocketClient23.webSocketHandler = webSocketHandler30;
        webSocketClient1.webSocketHandler = webSocketHandler30;
        java.util.concurrent.Executor executor33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler30, executor33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -8 + "'", byte8 == (byte) -8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler30);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "lsFn0UVROjF5rbWiXNcpag==" + "'", str6.equals("lsFn0UVROjF5rbWiXNcpag=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -39 + "'", byte9 == (byte) -39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        java.util.concurrent.Executor executor32 = null;
        webSocketClient29.executor = executor32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient34.bootstrap = clientBootstrap36;
        java.util.concurrent.Executor executor38 = webSocketClient34.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler39;
        java.io.InputStream inputStream41 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient34.setupSsl(inputStream41, "qcyB1VUvw6+2NxfeqFhJEA==");
        org.webbitserver.helpers.SslFactory sslFactory44 = webSocketClient43.sslFactory;
        webSocketClient29.sslFactory = sslFactory44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient29.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient1.bootstrap = clientBootstrap8;
        java.util.concurrent.Executor executor10 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient1.reconnectEvery((long) (byte) 99);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        byte byte20 = webSocketClient13.randomByte();
        webSocketClient13.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient13.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient13.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        boolean boolean33 = webSocketClient27.ssl;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient27.remoteAddress = inetSocketAddress34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor40 = webSocketClient39.executor;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient39.webSocketHandler;
        webSocketClient27.webSocketHandler = webSocketHandler41;
        webSocketClient13.webSocketHandler = webSocketHandler41;
        webSocketClient1.webSocketHandler = webSocketHandler41;
        java.util.concurrent.Executor executor45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler41, executor45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "SChPv4Zy7ade4wUhFCKiZg==" + "'", str7.equals("SChPv4Zy7ade4wUhFCKiZg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) 120 + "'", byte20 == (byte) 120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        webSocketClient0.base64Nonce = "k8f9EvvC8IJ1WzuBGYszbw==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        java.lang.String str16 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str16 + "' != '" + "G8N14KYkHppAdp4lpDMKBA==" + "'", str16.equals("G8N14KYkHppAdp4lpDMKBA=="));
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        webSocketClient0.base64Nonce = "085v8bpfTuqmMi+NJNaitw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "MTKww05v/CyuaNYwxZ774w==" + "'", str11.equals("MTKww05v/CyuaNYwxZ774w=="));
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.reconnectEvery(0L);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("", "alODXB9ILViLUR13udkAtA==");
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -21);
        org.jboss.netty.channel.Channel channel10 = null;
        webSocketClient9.channel = channel10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        webSocketClient3.ssl = false;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient3.createNettyHttpRequest("hi!", "5LtGrnc7jINyvQ0ZrTHNkw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = null;
        webSocketClient0.bootstrap = clientBootstrap26;
        org.jboss.netty.channel.Channel channel28 = null;
        webSocketClient0.channel = channel28;
        java.lang.String str30 = webSocketClient0.base64Nonce;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient0.executor = executor31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str30 + "' != '" + "5qdqC+9u1MtwanSUzAWlhw==" + "'", str30.equals("5qdqC+9u1MtwanSUzAWlhw=="));
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "085v8bpfTuqmMi+NJNaitw==";
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient0.executor = executor30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "Zl4cKdsBq1fuFq+BCgNsTw==" + "'", str27.equals("Zl4cKdsBq1fuFq+BCgNsTw=="));
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient0.executor = executor14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        boolean boolean22 = webSocketClient16.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient0.request = httpRequest25;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 101 + "'", byte5 == (byte) 101);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient9.reconnectEvery((long) (byte) -4);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "ny1+cgF2IPSTkpuXDy6KEA==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "ypQmqqIvV428okuJKGaX9g==" + "'", str6.equals("ypQmqqIvV428okuJKGaX9g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "qcyB1VUvw6+2NxfeqFhJEA==");
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient9.sslFactory;
        java.lang.String str11 = webSocketClient9.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler3 = null;
        webSocketClient1.webSocketHandler = webSocketHandler3;
        java.util.concurrent.Executor executor5 = webSocketClient1.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient1.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient1.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        java.lang.String str21 = webSocketClient16.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory22 = null;
        webSocketClient16.sslFactory = sslFactory22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = null;
        webSocketClient16.ioExceptionHandler = uncaughtExceptionHandler27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient29.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler33;
        org.webbitserver.WebSocketHandler webSocketHandler35 = webSocketClient32.webSocketHandler;
        webSocketClient16.webSocketHandler = webSocketHandler35;
        webSocketClient1.webSocketHandler = webSocketHandler35;
        java.util.concurrent.Executor executor38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler35, executor38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler35);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        byte byte30 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient31.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient31.remoteAddress = inetSocketAddress33;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient31.remoteAddress = inetSocketAddress35;
        boolean boolean37 = webSocketClient31.ssl;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient31.remoteAddress = inetSocketAddress38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient40.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor44 = webSocketClient43.executor;
        org.webbitserver.WebSocketHandler webSocketHandler45 = webSocketClient43.webSocketHandler;
        webSocketClient31.webSocketHandler = webSocketHandler45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient31.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = webSocketClient31.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = webSocketClient31.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient50.request;
        java.io.InputStream inputStream52 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = webSocketClient50.setupSsl(inputStream52, "hi!");
        java.lang.String str55 = webSocketClient50.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory56 = null;
        webSocketClient50.sslFactory = sslFactory56;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient50.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler61 = null;
        webSocketClient50.ioExceptionHandler = uncaughtExceptionHandler61;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient63.request;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = webSocketClient63.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler67 = null;
        webSocketClient66.ioExceptionHandler = uncaughtExceptionHandler67;
        org.webbitserver.WebSocketHandler webSocketHandler69 = webSocketClient66.webSocketHandler;
        webSocketClient50.webSocketHandler = webSocketHandler69;
        webSocketClient31.webSocketHandler = webSocketHandler69;
        webSocketClient0.webSocketHandler = webSocketHandler69;
        byte byte73 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) -108 + "'", byte30 == (byte) -108);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler69);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte73 + "' != '" + (byte) -114 + "'", byte73 == (byte) -114);
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient0.ssl = true;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient0.executor = executor37;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = null;
        webSocketClient0.bootstrap = clientBootstrap39;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -95 + "'", byte7 == (byte) -95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.createNettyHttpRequest("54PRmm8EnGcV2VOcjHfgog==", "hi!");
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        webSocketClient0.base64Nonce = "+Sk1xnDm+VQXd7Wyv5++gQ==";
        java.lang.String str47 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str47 + "' != '" + "+Sk1xnDm+VQXd7Wyv5++gQ==" + "'", str47.equals("+Sk1xnDm+VQXd7Wyv5++gQ=="));
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.exceptionHandler;
        org.jboss.netty.channel.Channel channel13 = webSocketClient8.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler14;
        byte byte16 = webSocketClient8.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        boolean boolean23 = webSocketClient17.ssl;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient17.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient26.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor30 = webSocketClient29.executor;
        org.webbitserver.WebSocketHandler webSocketHandler31 = webSocketClient29.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler31;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient17.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient17.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient17.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = null;
        webSocketClient36.sslFactory = sslFactory42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient36.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient52.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient52.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler55;
        webSocketClient17.webSocketHandler = webSocketHandler55;
        webSocketClient8.webSocketHandler = webSocketHandler55;
        webSocketClient0.webSocketHandler = webSocketHandler55;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap61 = null;
        webSocketClient60.bootstrap = clientBootstrap61;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler64 = webSocketClient63.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress65 = null;
        webSocketClient63.remoteAddress = inetSocketAddress65;
        java.net.InetSocketAddress inetSocketAddress67 = null;
        webSocketClient63.remoteAddress = inetSocketAddress67;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest71 = webSocketClient63.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient60.request = httpRequest71;
        java.util.concurrent.Executor executor73 = webSocketClient60.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient60.request;
        webSocketClient0.request = httpRequest74;
        org.jboss.netty.channel.Channel channel76 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 12 + "'", byte16 == (byte) 12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel76);
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 126 + "'", byte6 == (byte) 126);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "mr4k0ODEcQ4ov+2jl7sORg==" + "'", str7.equals("mr4k0ODEcQ4ov+2jl7sORg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        java.lang.String str16 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient0.createNettyHttpRequest("veF4FTGpbB8CGhX43bIFtA==", "jS9sHFimUlZ7e+DzYGZhBQ==");
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient0.remoteAddress = inetSocketAddress34;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "rTsj9pFS2LsKPdjpclUpIQ==" + "'", str10.equals("rTsj9pFS2LsKPdjpclUpIQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        webSocketClient29.base64Nonce = "OvKg7ATbFa7xOsH3juxhtw==";
        webSocketClient29.base64Nonce = "wCDKxCOR2TIKKpqaBPWNJQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        boolean boolean7 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -73 + "'", byte7 == (byte) -73);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "HHQBFe+bT7XY0HrSMTcVfw==" + "'", str10.equals("HHQBFe+bT7XY0HrSMTcVfw=="));
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        webSocketClient0.base64Nonce = "xe96fFoyYqeV/lCAj7S/AQ==";
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "";
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "XxdsiWy8noB2yiw+HfrWNg==" + "'", str11.equals("XxdsiWy8noB2yiw+HfrWNg=="));
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient13.ioExceptionHandler = uncaughtExceptionHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient13.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient13.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient13.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "7z+9jgYkBlsmQQdXswgZOw==" + "'", str10.equals("7z+9jgYkBlsmQQdXswgZOw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("+Sk1xnDm+VQXd7Wyv5++gQ==", "ny1+cgF2IPSTkpuXDy6KEA==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "fw5nu7vgXJICwwwvGDkj1Q==");
        java.lang.Class<?> wildcardClass16 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient10.sslFactory;
        java.lang.String str15 = webSocketClient10.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 36 + "'", byte11 == (byte) 36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        webSocketClient0.base64Nonce = "";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient0.createNettyHttpRequest("6FZFzV4FmBCIdFn7jCvoLw==", "S7L12KAbGFmvMxdEpt7yCw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        boolean boolean12 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("3l1IyVJKANFa2A0YgbtLIg==", "pnGTokF3bYAD3HNjctggLQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "xMuqTDowKiyMHOEzsYDLlA==" + "'", str8.equals("xMuqTDowKiyMHOEzsYDLlA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        webSocketClient16.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.request = httpRequest28;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient12.setupSsl(inputStream30, "N0+tm6/4AmtTRMEVl1vyWg==");
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient33.exceptionHandler;
        org.jboss.netty.channel.Channel channel38 = webSocketClient33.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler39;
        byte byte41 = webSocketClient33.randomByte();
        java.lang.String str42 = webSocketClient33.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient43.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient43.remoteAddress = inetSocketAddress45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient43.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = webSocketClient49.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        webSocketClient49.remoteAddress = inetSocketAddress51;
        java.net.InetSocketAddress inetSocketAddress53 = null;
        webSocketClient49.remoteAddress = inetSocketAddress53;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient49.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress58 = webSocketClient49.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient49.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient43.request = httpRequest61;
        webSocketClient33.request = httpRequest61;
        webSocketClient12.request = httpRequest61;
        webSocketClient11.request = httpRequest61;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) 44 + "'", byte23 == (byte) 44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel38);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte41 + "' != '" + (byte) -45 + "'", byte41 == (byte) -45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "eJVSUWpJxQHqu+9ylrShfw==" + "'", str42.equals("eJVSUWpJxQHqu+9ylrShfw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest61);
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        byte byte13 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "G8N14KYkHppAdp4lpDMKBA==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -61 + "'", byte13 == (byte) -61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        boolean boolean9 = webSocketClient8.ssl;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket10 = webSocketClient8.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "tRu4o0e8DWH5ZfNAVuPKdA==" + "'", str5.equals("tRu4o0e8DWH5ZfNAVuPKdA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 48);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient5.ioExceptionHandler = uncaughtExceptionHandler9;
        java.lang.String str11 = webSocketClient5.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor34 = null;
        webSocketClient12.executor = executor34;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient36.sslFactory;
        webSocketClient12.sslFactory = sslFactory42;
        webSocketClient5.sslFactory = sslFactory42;
        webSocketClient0.sslFactory = sslFactory42;
        boolean boolean46 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler47;
        org.jboss.netty.channel.Channel channel49 = null;
        webSocketClient0.channel = channel49;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient4.sslFactory;
        boolean boolean18 = webSocketClient4.ssl;
        org.jboss.netty.channel.Channel channel19 = webSocketClient4.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        org.webbitserver.helpers.SslFactory sslFactory16 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "pbnraMeW9Ck6jo3CjXqZ5A==" + "'", str10.equals("pbnraMeW9Ck6jo3CjXqZ5A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory16);
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.exceptionHandler = uncaughtExceptionHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient12.exceptionHandler;
        org.jboss.netty.channel.Channel channel17 = null;
        webSocketClient12.channel = channel17;
        java.lang.String str19 = webSocketClient12.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient20.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient20.sslFactory = sslFactory24;
        java.lang.String str26 = webSocketClient20.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = webSocketClient33.sslFactory;
        webSocketClient27.sslFactory = sslFactory39;
        webSocketClient20.sslFactory = sslFactory39;
        java.util.concurrent.Executor executor42 = null;
        webSocketClient20.executor = executor42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient20.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient20.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        webSocketClient12.request = httpRequest49;
        webSocketClient0.request = httpRequest49;
        java.lang.Class<?> wildcardClass52 = httpRequest49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 80 + "'", byte7 == (byte) 80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str19 + "' != '" + "Mfa3jSHj17gOKsBi3Ihrzg==" + "'", str19.equals("Mfa3jSHj17gOKsBi3Ihrzg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient1.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient1.reconnectEvery(0L);
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient1.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient6.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient9.webSocketHandler;
        webSocketClient5.webSocketHandler = webSocketHandler11;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler11);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.reconnectEvery((long) (byte) 68);
        webSocketClient23.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = webSocketClient23.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap27);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient4.request;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient4.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient14.exceptionHandler;
        org.jboss.netty.channel.Channel channel19 = webSocketClient14.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler20;
        byte byte22 = webSocketClient14.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        boolean boolean29 = webSocketClient23.ssl;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient23.remoteAddress = inetSocketAddress30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor36 = webSocketClient35.executor;
        org.webbitserver.WebSocketHandler webSocketHandler37 = webSocketClient35.webSocketHandler;
        webSocketClient23.webSocketHandler = webSocketHandler37;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient23.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient23.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient42.request;
        java.io.InputStream inputStream44 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient42.setupSsl(inputStream44, "hi!");
        java.lang.String str47 = webSocketClient42.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory48 = null;
        webSocketClient42.sslFactory = sslFactory48;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient42.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient42.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient55.request;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = webSocketClient55.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler59 = null;
        webSocketClient58.ioExceptionHandler = uncaughtExceptionHandler59;
        org.webbitserver.WebSocketHandler webSocketHandler61 = webSocketClient58.webSocketHandler;
        webSocketClient42.webSocketHandler = webSocketHandler61;
        webSocketClient23.webSocketHandler = webSocketHandler61;
        webSocketClient14.webSocketHandler = webSocketHandler61;
        webSocketClient0.webSocketHandler = webSocketHandler61;
        webSocketClient0.ssl = true;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "0Lu9yDsSVgveiUlYHu+l7Q==");
        org.webbitserver.netty.WebSocketClient webSocketClient72 = webSocketClient0.reconnectEvery((long) (byte) -29);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 29 + "'", byte22 == (byte) 29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest73);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.createNettyHttpRequest("alODXB9ILViLUR13udkAtA==", "alODXB9ILViLUR13udkAtA==");
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "fHVZcPndChNy4K23iBKkQQ==" + "'", str10.equals("fHVZcPndChNy4K23iBKkQQ=="));
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "SyZORzabcKLo+2ZrewQxeQ==" + "'", str8.equals("SyZORzabcKLo+2ZrewQxeQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient9.bootstrap = clientBootstrap16;
        java.util.concurrent.Executor executor18 = webSocketClient9.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient9.reconnectEvery((long) (byte) 111);
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient20.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str15 + "' != '" + "K8XTLxoavwuEsWpgNynhzg==" + "'", str15.equals("K8XTLxoavwuEsWpgNynhzg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler21);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient10.bootstrap = clientBootstrap14;
        java.util.concurrent.Executor executor16 = null;
        webSocketClient10.executor = executor16;
        java.lang.String str18 = webSocketClient10.base64Nonce();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket19 = webSocketClient10.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 92 + "'", byte11 == (byte) 92);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "DFcsTVhyXiUovZyfd4nLUA==" + "'", str18.equals("DFcsTVhyXiUovZyfd4nLUA=="));
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient0.reconnectEvery((long) (byte) -72);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        boolean boolean46 = webSocketClient43.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "O2UPOp8sNDpU6C6FnfTFEg==";
    }
}
