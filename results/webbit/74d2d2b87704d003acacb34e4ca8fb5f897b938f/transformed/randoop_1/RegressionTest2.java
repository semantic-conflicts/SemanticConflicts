import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient11.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient11.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient11.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient19.exceptionHandler = uncaughtExceptionHandler21;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient19.exceptionHandler;
        org.jboss.netty.channel.Channel channel24 = webSocketClient19.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient19.exceptionHandler = uncaughtExceptionHandler25;
        byte byte27 = webSocketClient19.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        boolean boolean34 = webSocketClient28.ssl;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient28.remoteAddress = inetSocketAddress35;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient37.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor41 = webSocketClient40.executor;
        org.webbitserver.WebSocketHandler webSocketHandler42 = webSocketClient40.webSocketHandler;
        webSocketClient28.webSocketHandler = webSocketHandler42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient28.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient28.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient28.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient47.request;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient47.setupSsl(inputStream49, "hi!");
        java.lang.String str52 = webSocketClient47.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory53 = null;
        webSocketClient47.sslFactory = sslFactory53;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient47.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = null;
        webSocketClient47.ioExceptionHandler = uncaughtExceptionHandler58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient60.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler64 = null;
        webSocketClient63.ioExceptionHandler = uncaughtExceptionHandler64;
        org.webbitserver.WebSocketHandler webSocketHandler66 = webSocketClient63.webSocketHandler;
        webSocketClient47.webSocketHandler = webSocketHandler66;
        webSocketClient28.webSocketHandler = webSocketHandler66;
        webSocketClient19.webSocketHandler = webSocketHandler66;
        webSocketClient11.webSocketHandler = webSocketHandler66;
        org.webbitserver.netty.WebSocketClient webSocketClient71 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap72 = null;
        webSocketClient71.bootstrap = clientBootstrap72;
        org.webbitserver.netty.WebSocketClient webSocketClient74 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler75 = webSocketClient74.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress76 = null;
        webSocketClient74.remoteAddress = inetSocketAddress76;
        java.net.InetSocketAddress inetSocketAddress78 = null;
        webSocketClient74.remoteAddress = inetSocketAddress78;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest82 = webSocketClient74.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient71.request = httpRequest82;
        java.util.concurrent.Executor executor84 = webSocketClient71.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest85 = webSocketClient71.request;
        webSocketClient11.request = httpRequest85;
        webSocketClient9.request = httpRequest85;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) -112 + "'", byte27 == (byte) -112);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest85);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient9.setupSsl(inputStream12, "SEJu56wkLW6ABhG5/aZeUg==");
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler17 = null;
        webSocketClient15.webSocketHandler = webSocketHandler17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient15.createNettyHttpRequest("A1ImJfYvSm0LVjChazcl6w==", "qcyB1VUvw6+2NxfeqFhJEA==");
        webSocketClient14.request = httpRequest21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -44 + "'", byte10 == (byte) -44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.lang.String str28 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str28 + "' != '" + "0x1TsuPZ4DwqvcGw+EtaiA==" + "'", str28.equals("0x1TsuPZ4DwqvcGw+EtaiA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel12 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient0.remoteAddress = inetSocketAddress35;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 84 + "'", byte7 == (byte) 84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler16 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler16);
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        org.webbitserver.WebSocketHandler webSocketHandler9 = null;
        webSocketClient0.webSocketHandler = webSocketHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        byte byte14 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "XhrAKbsjhfleEb6Mm3ZfyA==" + "'", str11.equals("XhrAKbsjhfleEb6Mm3ZfyA=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) -10 + "'", byte14 == (byte) -10);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        java.lang.String str38 = webSocketClient11.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient11.createNettyHttpRequest("ChgXpFpKl1L7KepL4qseEA==", "ChgXpFpKl1L7KepL4qseEA==");
        webSocketClient0.request = httpRequest41;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler43;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "wU8Bmy0E0OQQxj3at5q2Nw==" + "'", str10.equals("wU8Bmy0E0OQQxj3at5q2Nw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str38 + "' != '" + "jNch/5+13BBy5Ix7oGJuqg==" + "'", str38.equals("jNch/5+13BBy5Ix7oGJuqg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient0.setupSsl(inputStream35, "085v8bpfTuqmMi+NJNaitw==");
        byte byte38 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "PI38MbN7cbC33BxOjHzIlQ==" + "'", str31.equals("PI38MbN7cbC33BxOjHzIlQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte38 + "' != '" + (byte) 64 + "'", byte38 == (byte) 64);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        org.webbitserver.WebSocketHandler webSocketHandler10 = null;
        webSocketClient0.webSocketHandler = webSocketHandler10;
        byte byte12 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient0.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -92 + "'", byte7 == (byte) -92);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -44 + "'", byte12 == (byte) -44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 94;
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient0.bootstrap = clientBootstrap13;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient0.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient0.remoteAddress = inetSocketAddress16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient12.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        webSocketClient0.base64Nonce = "E4V7eq/u5bfnnTGiFBuwCA==";
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket25 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -107 + "'", byte7 == (byte) -107);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient11.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient11.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress41 = webSocketClient11.remoteAddress;
        java.lang.String str42 = webSocketClient11.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress43 = webSocketClient11.remoteAddress;
        org.jboss.netty.channel.Channel channel44 = null;
        webSocketClient11.channel = channel44;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient11.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap48 = null;
        webSocketClient47.bootstrap = clientBootstrap48;
        java.net.InetSocketAddress inetSocketAddress50 = webSocketClient47.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory51 = null;
        webSocketClient47.sslFactory = sslFactory51;
        java.lang.String str53 = webSocketClient47.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient60.sslFactory;
        webSocketClient54.sslFactory = sslFactory66;
        webSocketClient47.sslFactory = sslFactory66;
        java.util.concurrent.Executor executor69 = null;
        webSocketClient47.executor = executor69;
        boolean boolean71 = webSocketClient47.ssl;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient47.sslFactory;
        webSocketClient11.sslFactory = sslFactory72;
        webSocketClient0.sslFactory = sslFactory72;
        java.lang.String str75 = webSocketClient0.base64Nonce();
        java.lang.String str76 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler77 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler77;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "AIZQ3tOkgJ9ENQmoND6AVw==" + "'", str6.equals("AIZQ3tOkgJ9ENQmoND6AVw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str42 + "' != '" + "zYqVBk1VVNZKLJyBiKWNyA==" + "'", str42.equals("zYqVBk1VVNZKLJyBiKWNyA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str75 + "' != '" + "QRZPUZ79jglR4Gw6VVu4LA==" + "'", str75.equals("QRZPUZ79jglR4Gw6VVu4LA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient7.setupSsl(inputStream8, "83LMpk5xugKUYrzKR6e1gw==");
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient10.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler11);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 34);
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient10.sslFactory;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient10.remoteAddress;
        java.util.concurrent.Executor executor13 = webSocketClient10.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 27 + "'", byte5 == (byte) 27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient11.setupSsl(inputStream13, "hi!");
        java.lang.String str16 = webSocketClient11.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient11.sslFactory;
        webSocketClient5.sslFactory = sslFactory17;
        webSocketClient0.sslFactory = sslFactory17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler20;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient0.bootstrap;
        java.lang.Class<?> wildcardClass23 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient3.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient3.reconnectEvery((long) (byte) -44);
        webSocketClient11.base64Nonce = "NHw+PVe+4F1wYHZJg4X0og==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient11.bootstrap = clientBootstrap14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient9.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        webSocketClient0.base64Nonce = "";
        java.util.concurrent.Executor executor15 = null;
        webSocketClient0.executor = executor15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient10.executor = executor12;
        byte byte14 = webSocketClient10.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 118 + "'", byte14 == (byte) 118);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient9.setupSsl(inputStream36, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = null;
        webSocketClient38.bootstrap = clientBootstrap39;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient38.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient38.sslFactory;
        webSocketClient0.sslFactory = sslFactory42;
        boolean boolean44 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient0.reconnectEvery(0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "HTlIdZSgSEHkGz2ZHKlciw==";
        java.lang.String str33 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -120 + "'", byte7 == (byte) -120);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str33 + "' != '" + "Zid4A0+FSZVDlgAqKbJ7YA==" + "'", str33.equals("Zid4A0+FSZVDlgAqKbJ7YA=="));
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler10;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 18 + "'", byte6 == (byte) 18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "UfpdD4bbfErxQegMKrdpng==" + "'", str7.equals("UfpdD4bbfErxQegMKrdpng=="));
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient3.remoteAddress = inetSocketAddress9;
        webSocketClient3.base64Nonce = "0Mesbsmo/qz2wNCX85XS0A==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient8.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "aPsINOlaThCH79ztrW5MZg==" + "'", str5.equals("aPsINOlaThCH79ztrW5MZg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -34);
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient14.sslFactory;
        webSocketClient14.base64Nonce = "JJ046SKCrDHWq4nW+y2kpA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 34);
        byte byte11 = webSocketClient10.randomByte();
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient10.remoteAddress;
        webSocketClient10.base64Nonce = "T+8QhMBB2lTV5CUZHmN1IA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) 49 + "'", byte5 == (byte) 49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 16 + "'", byte11 == (byte) 16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient0.reconnectEvery((long) (byte) -72);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient43.request;
        java.util.concurrent.Executor executor47 = webSocketClient43.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor47);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient29.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient31.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient34.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient34.webSocketHandler;
        webSocketClient29.webSocketHandler = webSocketHandler38;
        webSocketClient29.ssl = false;
        webSocketClient29.base64Nonce = "";
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket44 = webSocketClient29.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "1YKArB2PyRB1yuucR7Mppg==" + "'", str10.equals("1YKArB2PyRB1yuucR7Mppg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient9.bootstrap = clientBootstrap12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient9.reconnectEvery((long) (byte) 74);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient9.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -90 + "'", byte10 == (byte) -90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -80;
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -96 + "'", byte8 == (byte) -96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient9.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "LWeE+qtLv/rLUXrya7bPbQ==";
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient0.sslFactory = sslFactory10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        byte byte28 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 12 + "'", byte28 == (byte) 12);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "ELkOefe4aSUWwucbF+8HcA==" + "'", str10.equals("ELkOefe4aSUWwucbF+8HcA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "RUBJ82FmPNiRhv80kGuSSA==";
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 110 + "'", byte7 == (byte) 110);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.reconnectEvery((long) (byte) 61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "OCLL8AiOgCs/qERQpB+qIw==" + "'", str10.equals("OCLL8AiOgCs/qERQpB+qIw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient13.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient20.exceptionHandler = uncaughtExceptionHandler22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        byte byte26 = webSocketClient20.randomByte();
        java.lang.String str27 = webSocketClient20.base64Nonce();
        java.util.concurrent.Executor executor28 = webSocketClient20.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = null;
        webSocketClient34.sslFactory = sslFactory40;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient34.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient33.request = httpRequest44;
        webSocketClient20.request = httpRequest44;
        webSocketClient13.request = httpRequest44;
        webSocketClient0.request = httpRequest44;
        java.util.concurrent.Executor executor49 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient0.request;
        java.lang.String str51 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -15 + "'", byte26 == (byte) -15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "wWqVkYjrBUjEPx7Mg+ztZQ==" + "'", str27.equals("wWqVkYjrBUjEPx7Mg+ztZQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str51 + "' != '" + "9MWBFoORuq+f4HGadTRGAQ==" + "'", str51.equals("9MWBFoORuq+f4HGadTRGAQ=="));
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor35 = webSocketClient10.executor;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient10.executor = executor36;
        java.lang.String str38 = webSocketClient10.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress40 = webSocketClient10.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient10.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient11.setupSsl(inputStream13, "hi!");
        java.lang.String str16 = webSocketClient11.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient11.sslFactory;
        webSocketClient5.sslFactory = sslFactory17;
        webSocketClient0.sslFactory = sslFactory17;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient0.sslFactory = sslFactory30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = webSocketClient0.bootstrap;
        webSocketClient0.base64Nonce = "2V09NZ+CzYswI6JC/n48rw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap32);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "9IGsDRkMzTKrFAbPxWWAHg==");
        org.jboss.netty.channel.Channel channel13 = null;
        webSocketClient0.channel = channel13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient0.remoteAddress = inetSocketAddress13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient10.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient13.exceptionHandler = uncaughtExceptionHandler16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient13.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient13.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient13.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient24.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.setupSsl(inputStream37, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel40 = null;
        webSocketClient36.channel = channel40;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient42.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient42.remoteAddress = inetSocketAddress44;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient42.remoteAddress = inetSocketAddress46;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = webSocketClient42.ioExceptionHandler;
        byte byte49 = webSocketClient42.randomByte();
        webSocketClient42.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient42.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient42.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest58 = webSocketClient57.request;
        java.io.InputStream inputStream59 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = webSocketClient57.setupSsl(inputStream59, "hi!");
        java.lang.String str62 = webSocketClient57.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory63 = webSocketClient57.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest66 = webSocketClient57.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        webSocketClient42.request = httpRequest66;
        webSocketClient36.request = httpRequest66;
        webSocketClient13.request = httpRequest66;
        webSocketClient10.request = httpRequest66;
        java.net.InetSocketAddress inetSocketAddress71 = webSocketClient10.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 19 + "'", byte11 == (byte) 19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler48);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte49 + "' != '" + (byte) 45 + "'", byte49 == (byte) 45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress71);
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient1.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient13.webSocketHandler;
        webSocketClient9.webSocketHandler = webSocketHandler15;
        webSocketClient1.webSocketHandler = webSocketHandler15;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler15);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.String str9 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient10.request = httpRequest28;
        webSocketClient0.request = httpRequest28;
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket32 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -108 + "'", byte8 == (byte) -108);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str9 + "' != '" + "k2gTV0LwiL7q/W4o4ZBosQ==" + "'", str9.equals("k2gTV0LwiL7q/W4o4ZBosQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        java.lang.String str28 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -32 + "'", byte6 == (byte) -32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "9B44KKlcHL/SP97Txq9GTA==" + "'", str7.equals("9B44KKlcHL/SP97Txq9GTA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Class<?> wildcardClass4 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        boolean boolean7 = webSocketClient0.ssl;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "pLTMRk4L4Ew6sA7pYuKbEw==");
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        webSocketClient0.base64Nonce = "e/hVChE+jEGPbxoZ3KGB4Q==";
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        byte byte11 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.createNettyHttpRequest("N0+tm6/4AmtTRMEVl1vyWg==", "ucl4Uap6AuvBuvdY4dCRTQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -1 + "'", byte11 == (byte) -1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient0.sslFactory = sslFactory20;
        webSocketClient0.base64Nonce = "iLv88YjAq8udADXrVIZZ4g==";
        byte byte25 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -78 + "'", byte7 == (byte) -78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte25 + "' != '" + (byte) -8 + "'", byte25 == (byte) -8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("hmYRbp0IXjAWfURWFEX6HQ==", "jycD4QJMDw8a08y6M6Hu+g==");
        java.lang.Class<?> wildcardClass11 = httpRequest10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor5 = webSocketClient0.executor;
        webSocketClient0.ssl = false;
        webSocketClient0.base64Nonce = "";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor5);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        byte byte13 = webSocketClient12.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient14.ioExceptionHandler = uncaughtExceptionHandler25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient27.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient30.ioExceptionHandler = uncaughtExceptionHandler31;
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient30.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler33;
        webSocketClient12.webSocketHandler = webSocketHandler33;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 67 + "'", byte13 == (byte) 67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler33);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest41;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler43;
        byte byte45 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "GWHSqbbLB7xgkvKA4uRARw==" + "'", str31.equals("GWHSqbbLB7xgkvKA4uRARw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte45 + "' != '" + (byte) 122 + "'", byte45 == (byte) 122);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        webSocketClient0.ssl = true;
        org.jboss.netty.channel.Channel channel15 = null;
        webSocketClient0.channel = channel15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.util.concurrent.Executor executor20 = webSocketClient9.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = null;
        webSocketClient23.exceptionHandler = uncaughtExceptionHandler25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        byte byte29 = webSocketClient23.randomByte();
        java.lang.String str30 = webSocketClient23.base64Nonce();
        java.util.concurrent.Executor executor31 = webSocketClient23.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient37.setupSsl(inputStream39, "hi!");
        java.lang.String str42 = webSocketClient37.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient37.sslFactory = sslFactory43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient37.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient36.request = httpRequest47;
        webSocketClient23.request = httpRequest47;
        webSocketClient9.request = httpRequest47;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) -10 + "'", byte29 == (byte) -10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str30 + "' != '" + "QpT2o+f1TBWb96wx/nCDAw==" + "'", str30.equals("QpT2o+f1TBWb96wx/nCDAw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        java.lang.String str10 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 65);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -81;
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient1.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory5 = null;
        webSocketClient1.sslFactory = sslFactory5;
        java.lang.String str7 = webSocketClient1.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient14.sslFactory;
        webSocketClient8.sslFactory = sslFactory20;
        webSocketClient1.sslFactory = sslFactory20;
        java.util.concurrent.Executor executor23 = null;
        webSocketClient1.executor = executor23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient1.createNettyHttpRequest("", "");
        java.lang.String str28 = webSocketClient1.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient1.createNettyHttpRequest("ChgXpFpKl1L7KepL4qseEA==", "ChgXpFpKl1L7KepL4qseEA==");
        webSocketClient1.base64Nonce = "+WY+8v/zsk8BoBHp09YxVQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = null;
        webSocketClient34.ioExceptionHandler = uncaughtExceptionHandler38;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient34.exceptionHandler;
        byte byte41 = webSocketClient34.randomByte();
        java.util.concurrent.Executor executor42 = null;
        webSocketClient34.executor = executor42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient44.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient44.remoteAddress = inetSocketAddress46;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient44.remoteAddress = inetSocketAddress48;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient44.request;
        org.jboss.netty.channel.Channel channel51 = webSocketClient44.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient44.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler60 = webSocketClient54.ioExceptionHandler;
        byte byte61 = webSocketClient54.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory62 = webSocketClient54.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap64 = null;
        webSocketClient63.bootstrap = clientBootstrap64;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler67 = webSocketClient66.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress68 = null;
        webSocketClient66.remoteAddress = inetSocketAddress68;
        java.net.InetSocketAddress inetSocketAddress70 = null;
        webSocketClient66.remoteAddress = inetSocketAddress70;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient66.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient63.request = httpRequest74;
        webSocketClient54.request = httpRequest74;
        boolean boolean77 = webSocketClient54.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler79 = webSocketClient78.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        webSocketClient78.remoteAddress = inetSocketAddress80;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        webSocketClient78.remoteAddress = inetSocketAddress82;
        boolean boolean84 = webSocketClient78.ssl;
        java.net.InetSocketAddress inetSocketAddress85 = null;
        webSocketClient78.remoteAddress = inetSocketAddress85;
        org.webbitserver.netty.WebSocketClient webSocketClient87 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest88 = webSocketClient87.request;
        org.webbitserver.netty.WebSocketClient webSocketClient90 = webSocketClient87.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor91 = webSocketClient90.executor;
        org.webbitserver.WebSocketHandler webSocketHandler92 = webSocketClient90.webSocketHandler;
        webSocketClient78.webSocketHandler = webSocketHandler92;
        webSocketClient54.webSocketHandler = webSocketHandler92;
        webSocketClient53.webSocketHandler = webSocketHandler92;
        webSocketClient34.webSocketHandler = webSocketHandler92;
        webSocketClient1.webSocketHandler = webSocketHandler92;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient98 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str28 + "' != '" + "Rwr5J/rmIX6s8u3tA1uFkQ==" + "'", str28.equals("Rwr5J/rmIX6s8u3tA1uFkQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte41 + "' != '" + (byte) 17 + "'", byte41 == (byte) 17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte61 + "' != '" + (byte) 55 + "'", byte61 == (byte) 55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler92);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        webSocketClient15.base64Nonce = "uq+ogkA4uylV3lEeJ3joKw==";
        java.lang.Class<?> wildcardClass18 = webSocketClient15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        webSocketClient0.base64Nonce = "GW5o9nvWkmaqzsXeZyM2qQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient3.ioExceptionHandler;
        java.lang.Class<?> wildcardClass10 = webSocketClient3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 51 + "'", byte7 == (byte) 51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 34);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -2 + "'", byte5 == (byte) -2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        java.lang.String str10 = webSocketClient9.base64Nonce();
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient9.channel = channel11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "n41z9xeh1wxX4Oyehuoqqg==" + "'", str10.equals("n41z9xeh1wxX4Oyehuoqqg=="));
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "HTlIdZSgSEHkGz2ZHKlciw==";
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.String str35 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -60 + "'", byte7 == (byte) -60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str35 + "' != '" + "wiGDWOU2ywRtQxwWkXKMNg==" + "'", str35.equals("wiGDWOU2ywRtQxwWkXKMNg=="));
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient3.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient3.exceptionHandler;
        boolean boolean6 = webSocketClient3.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        byte byte4 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient5.sslFactory = sslFactory13;
        org.webbitserver.WebSocketHandler webSocketHandler15 = null;
        webSocketClient5.webSocketHandler = webSocketHandler15;
        byte byte17 = webSocketClient5.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient5.sslFactory = sslFactory24;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory26;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler28;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) -85 + "'", byte4 == (byte) -85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 42 + "'", byte12 == (byte) 42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -102 + "'", byte17 == (byte) -102);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        boolean boolean25 = webSocketClient19.ssl;
        boolean boolean26 = webSocketClient19.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient19.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient0.createNettyHttpRequest("75wb+kDqQoL7GryTj0XndQ==", "24d2+2MU1eL56fhTUzMipw==");
        java.lang.Class<?> wildcardClass39 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient23.bootstrap = clientBootstrap24;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient23.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient23.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient23.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient31.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = null;
        webSocketClient31.exceptionHandler = uncaughtExceptionHandler33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient31.exceptionHandler;
        org.jboss.netty.channel.Channel channel36 = webSocketClient31.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient31.exceptionHandler = uncaughtExceptionHandler37;
        byte byte39 = webSocketClient31.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient40.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient40.remoteAddress = inetSocketAddress42;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient40.remoteAddress = inetSocketAddress44;
        boolean boolean46 = webSocketClient40.ssl;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient40.remoteAddress = inetSocketAddress47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor53 = webSocketClient52.executor;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient52.webSocketHandler;
        webSocketClient40.webSocketHandler = webSocketHandler54;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler56 = webSocketClient40.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler57 = webSocketClient40.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient40.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        java.io.InputStream inputStream61 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient59.setupSsl(inputStream61, "hi!");
        java.lang.String str64 = webSocketClient59.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory65 = null;
        webSocketClient59.sslFactory = sslFactory65;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest69 = webSocketClient59.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler70 = null;
        webSocketClient59.ioExceptionHandler = uncaughtExceptionHandler70;
        org.webbitserver.netty.WebSocketClient webSocketClient72 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient72.request;
        org.webbitserver.netty.WebSocketClient webSocketClient75 = webSocketClient72.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler76 = null;
        webSocketClient75.ioExceptionHandler = uncaughtExceptionHandler76;
        org.webbitserver.WebSocketHandler webSocketHandler78 = webSocketClient75.webSocketHandler;
        webSocketClient59.webSocketHandler = webSocketHandler78;
        webSocketClient40.webSocketHandler = webSocketHandler78;
        webSocketClient31.webSocketHandler = webSocketHandler78;
        webSocketClient23.webSocketHandler = webSocketHandler78;
        webSocketClient0.webSocketHandler = webSocketHandler78;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte39 + "' != '" + (byte) 20 + "'", byte39 == (byte) 20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler78);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient0.reconnectEvery(1L);
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient19.remoteAddress = inetSocketAddress20;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        boolean boolean11 = webSocketClient8.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient8.reconnectEvery((long) (byte) -78);
        org.jboss.netty.channel.Channel channel14 = webSocketClient13.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "fBUPwoFY0M/73SFtapnxgg==" + "'", str5.equals("fBUPwoFY0M/73SFtapnxgg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -15);
        webSocketClient0.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("13AtJ+ycfl0T6vD6fjMHMQ==", "fHVZcPndChNy4K23iBKkQQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        byte byte15 = webSocketClient0.randomByte();
        java.lang.String str16 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor17 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 119 + "'", byte14 == (byte) 119);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 19 + "'", byte15 == (byte) 19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str16 + "' != '" + "jhfoOxQLr/3fS67B8AZ8kw==" + "'", str16.equals("jhfoOxQLr/3fS67B8AZ8kw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor17);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        java.util.concurrent.Executor executor14 = null;
        webSocketClient0.executor = executor14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient13.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient10.request = httpRequest21;
        webSocketClient1.request = httpRequest21;
        boolean boolean24 = webSocketClient1.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = null;
        webSocketClient25.exceptionHandler = uncaughtExceptionHandler27;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient25.exceptionHandler;
        org.jboss.netty.channel.Channel channel30 = webSocketClient25.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = null;
        webSocketClient25.exceptionHandler = uncaughtExceptionHandler31;
        byte byte33 = webSocketClient25.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        boolean boolean40 = webSocketClient34.ssl;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient34.remoteAddress = inetSocketAddress41;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest44 = webSocketClient43.request;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient43.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor47 = webSocketClient46.executor;
        org.webbitserver.WebSocketHandler webSocketHandler48 = webSocketClient46.webSocketHandler;
        webSocketClient34.webSocketHandler = webSocketHandler48;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = webSocketClient34.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler51 = webSocketClient34.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = webSocketClient34.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient53.request;
        java.io.InputStream inputStream55 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = webSocketClient53.setupSsl(inputStream55, "hi!");
        java.lang.String str58 = webSocketClient53.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory59 = null;
        webSocketClient53.sslFactory = sslFactory59;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient53.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler64 = null;
        webSocketClient53.ioExceptionHandler = uncaughtExceptionHandler64;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest67 = webSocketClient66.request;
        org.webbitserver.netty.WebSocketClient webSocketClient69 = webSocketClient66.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler70 = null;
        webSocketClient69.ioExceptionHandler = uncaughtExceptionHandler70;
        org.webbitserver.WebSocketHandler webSocketHandler72 = webSocketClient69.webSocketHandler;
        webSocketClient53.webSocketHandler = webSocketHandler72;
        webSocketClient34.webSocketHandler = webSocketHandler72;
        webSocketClient25.webSocketHandler = webSocketHandler72;
        webSocketClient1.webSocketHandler = webSocketHandler72;
        java.util.concurrent.Executor executor77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler72, executor77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -118 + "'", byte8 == (byte) -118);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte33 + "' != '" + (byte) -56 + "'", byte33 == (byte) -56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler72);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -21 + "'", byte7 == (byte) -21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -34);
        webSocketClient14.base64Nonce = "fpiUMs7WpK0bMjjr8BcyOw==";
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient14.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient14.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket19 = webSocketClient14.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient4.sslFactory;
        org.jboss.netty.channel.Channel channel18 = webSocketClient4.channel;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient4.remoteAddress;
        byte byte20 = webSocketClient4.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte20 + "' != '" + (byte) -93 + "'", byte20 == (byte) -93);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        byte byte5 = webSocketClient0.randomByte();
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient7.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient10.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient10.webSocketHandler;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient10.setupSsl(inputStream15, "qcyB1VUvw6+2NxfeqFhJEA==");
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient10.sslFactory;
        webSocketClient0.sslFactory = sslFactory18;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient0.bootstrap = clientBootstrap21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -13 + "'", byte5 == (byte) -13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "bz9M4yZDuhr5wdRP6Myh2Q==";
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient5.sslFactory;
        org.jboss.netty.channel.Channel channel12 = webSocketClient5.channel;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient44.bootstrap = clientBootstrap45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient44.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient0.sslFactory;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient3.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient8.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler12;
        boolean boolean14 = webSocketClient8.ssl;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient8.setupSsl(inputStream15, "0Lu9yDsSVgveiUlYHu+l7Q==");
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        boolean boolean24 = webSocketClient18.ssl;
        boolean boolean25 = webSocketClient18.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient18.sslFactory = sslFactory32;
        webSocketClient17.sslFactory = sslFactory32;
        webSocketClient3.sslFactory = sslFactory32;
        boolean boolean36 = webSocketClient3.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient0.remoteAddress = inetSocketAddress12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -125 + "'", byte7 == (byte) -125);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient9.sslFactory = sslFactory27;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient9.sslFactory = sslFactory36;
        webSocketClient0.sslFactory = sslFactory36;
        webSocketClient0.ssl = true;
        webSocketClient0.base64Nonce = "jn6UEyOrcNvj0Ejf13ULqQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("whjSu3yYMr2evMZ8odYRFw==", "pSTG26ddGe2nSLnoVb+Qlw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) 100);
        java.lang.String str11 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient22.exceptionHandler = uncaughtExceptionHandler24;
        java.util.concurrent.Executor executor26 = webSocketClient22.executor;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient22.remoteAddress = inetSocketAddress27;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient22.setupSsl(inputStream29, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient32.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = null;
        webSocketClient35.ioExceptionHandler = uncaughtExceptionHandler36;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient35.webSocketHandler;
        webSocketClient31.webSocketHandler = webSocketHandler38;
        webSocketClient12.webSocketHandler = webSocketHandler38;
        webSocketClient0.webSocketHandler = webSocketHandler38;
        java.net.InetSocketAddress inetSocketAddress42 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory43 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -34 + "'", byte7 == (byte) -34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -60 + "'", byte19 == (byte) -60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory43);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        webSocketClient0.ssl = true;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient0.setupSsl(inputStream15, "mbi9zmXf1uPl16MQloDzbg==");
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient18.reconnectEvery((-1L));
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient18.setupSsl(inputStream26, "hi!");
        byte byte29 = webSocketClient18.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient18.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler30;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient17.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) -91 + "'", byte29 == (byte) -91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler30);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient9.sslFactory = sslFactory27;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        java.lang.String str35 = webSocketClient30.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory36 = webSocketClient30.sslFactory;
        webSocketClient9.sslFactory = sslFactory36;
        webSocketClient0.sslFactory = sslFactory36;
        webSocketClient0.ssl = true;
        java.lang.String str41 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory36);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "OQhrwtQguzESgteRVB8EBQ==" + "'", str41.equals("OQhrwtQguzESgteRVB8EBQ=="));
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient11.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient0.base64Nonce();
        byte byte15 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "yGtNCsjjCGu4CnyWx5H3Kw==" + "'", str14.equals("yGtNCsjjCGu4CnyWx5H3Kw=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 62 + "'", byte15 == (byte) 62);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient0.setupSsl(inputStream49, "33kC5iWENnLS5T6zbOSLQA==");
        java.io.InputStream inputStream52 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient54 = webSocketClient51.setupSsl(inputStream52, "t8fh4wAuN5n40lvlWo0SfA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient51.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        boolean boolean7 = webSocketClient0.ssl;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "udoCA7ZwcQs8mBcTDaLGjw==");
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "0x1TsuPZ4DwqvcGw+EtaiA==" + "'", str11.equals("0x1TsuPZ4DwqvcGw+EtaiA=="));
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "ayeIPOKWJ/YOdJpIyXQBmQ==" + "'", str6.equals("ayeIPOKWJ/YOdJpIyXQBmQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory9 = webSocketClient1.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient10.ioExceptionHandler;
        byte byte17 = webSocketClient10.randomByte();
        webSocketClient10.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient20.exceptionHandler = uncaughtExceptionHandler22;
        java.util.concurrent.Executor executor24 = webSocketClient20.executor;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient20.remoteAddress = inetSocketAddress25;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient20.setupSsl(inputStream27, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient30.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler34;
        org.webbitserver.WebSocketHandler webSocketHandler36 = webSocketClient33.webSocketHandler;
        webSocketClient29.webSocketHandler = webSocketHandler36;
        webSocketClient10.webSocketHandler = webSocketHandler36;
        webSocketClient1.webSocketHandler = webSocketHandler36;
        java.util.concurrent.Executor executor40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler36, executor40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 55 + "'", byte8 == (byte) 55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -122 + "'", byte17 == (byte) -122);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler36);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.reconnectEvery((long) (byte) 58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "YdULXbsusGm0CLL/VSrolA==" + "'", str5.equals("YdULXbsusGm0CLL/VSrolA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient9.ssl = true;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient3.reconnectEvery((long) (byte) 17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "HTlIdZSgSEHkGz2ZHKlciw==";
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient0.setupSsl(inputStream35, "OGhHbOI54wngtflvi/giiA==");
        byte byte38 = webSocketClient37.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 45 + "'", byte7 == (byte) 45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte38 + "' != '" + (byte) 71 + "'", byte38 == (byte) 71);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient12.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient12.reconnectEvery((long) (byte) 100);
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("LWeE+qtLv/rLUXrya7bPbQ==", "JJ046SKCrDHWq4nW+y2kpA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) -3 + "'", byte19 == (byte) -3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket16 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -43 + "'", byte7 == (byte) -43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        java.lang.String str7 = webSocketClient3.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient3.exceptionHandler = uncaughtExceptionHandler8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient3.exceptionHandler;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient3.setupSsl(inputStream11, "7xO2RQJQ5LF5FofyN7DYmw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "xzC8FDdg+0ojv3d9tjc0ug==" + "'", str7.equals("xzC8FDdg+0ojv3d9tjc0ug=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient6.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient6.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient6.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient0.request = httpRequest18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler20;
        webSocketClient0.base64Nonce = "tS5jgeQrHU2fyPj1nhU+bw==";
        java.lang.String str24 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str24 + "' != '" + "tS5jgeQrHU2fyPj1nhU+bw==" + "'", str24.equals("tS5jgeQrHU2fyPj1nhU+bw=="));
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        java.lang.String str10 = webSocketClient0.base64Nonce;
        boolean boolean11 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -54;
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient3.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient3.bootstrap = clientBootstrap8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient3.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel9 = null;
        webSocketClient0.channel = channel9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient0.ioExceptionHandler;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient14.bootstrap = clientBootstrap15;
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient14.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory18 = null;
        webSocketClient14.sslFactory = sslFactory18;
        java.lang.String str20 = webSocketClient14.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient14.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient14.bootstrap;
        org.jboss.netty.channel.Channel channel23 = webSocketClient14.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = webSocketClient14.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient14.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient14.createNettyHttpRequest("RUc8AjMVLp0HU/v+jf4FQQ==", "+Sk1xnDm+VQXd7Wyv5++gQ==");
        webSocketClient0.request = httpRequest30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce;
        webSocketClient0.ssl = true;
        java.net.InetSocketAddress inetSocketAddress4 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress4);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient0.bootstrap = clientBootstrap24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "c91MzizhrGzYhhzUwaQnWQ==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = null;
        webSocketClient0.bootstrap = clientBootstrap29;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 30 + "'", byte7 == (byte) 30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "y5g3KPqOy3n0xjBoYi0PsA==" + "'", str31.equals("y5g3KPqOy3n0xjBoYi0PsA=="));
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient8.sslFactory = sslFactory27;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient8.executor = executor30;
        boolean boolean32 = webSocketClient8.ssl;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient8.setupSsl(inputStream33, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient36.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient36.remoteAddress = inetSocketAddress38;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        webSocketClient36.remoteAddress = inetSocketAddress40;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient36.ioExceptionHandler;
        byte byte43 = webSocketClient36.randomByte();
        webSocketClient36.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient36.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient36.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler51 = webSocketClient50.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        webSocketClient50.remoteAddress = inetSocketAddress52;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        webSocketClient50.remoteAddress = inetSocketAddress54;
        boolean boolean56 = webSocketClient50.ssl;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient50.remoteAddress = inetSocketAddress57;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = webSocketClient59.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor63 = webSocketClient62.executor;
        org.webbitserver.WebSocketHandler webSocketHandler64 = webSocketClient62.webSocketHandler;
        webSocketClient50.webSocketHandler = webSocketHandler64;
        webSocketClient36.webSocketHandler = webSocketHandler64;
        org.webbitserver.helpers.SslFactory sslFactory67 = webSocketClient36.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient36.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient8.request = httpRequest70;
        org.webbitserver.helpers.SslFactory sslFactory72 = webSocketClient8.sslFactory;
        webSocketClient0.sslFactory = sslFactory72;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte43 + "' != '" + (byte) -22 + "'", byte43 == (byte) -22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory72);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        byte byte7 = webSocketClient0.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = null;
        webSocketClient0.request = httpRequest8;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 47 + "'", byte7 == (byte) 47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "dwX6owofDd01sIZGZLTXkg==" + "'", str5.equals("dwX6owofDd01sIZGZLTXkg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient9.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient9.remoteAddress = inetSocketAddress13;
        boolean boolean15 = webSocketClient9.ssl;
        byte byte16 = webSocketClient9.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        webSocketClient17.sslFactory = sslFactory29;
        webSocketClient9.sslFactory = sslFactory29;
        webSocketClient0.sslFactory = sslFactory29;
        java.util.concurrent.Executor executor33 = webSocketClient0.executor;
        webSocketClient0.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient0.bootstrap = clientBootstrap36;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "7GOSPbbJ4NvPlxp3j8kq8g==" + "'", str6.equals("7GOSPbbJ4NvPlxp3j8kq8g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 54 + "'", byte16 == (byte) 54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor33);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        webSocketClient0.base64Nonce = "HTlIdZSgSEHkGz2ZHKlciw==";
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler37;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 27 + "'", byte7 == (byte) 27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient0.reconnectEvery((long) (byte) 7);
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = null;
        webSocketClient33.exceptionHandler = uncaughtExceptionHandler35;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient33.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient38.request;
        java.io.InputStream inputStream40 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient38.setupSsl(inputStream40, "hi!");
        java.lang.String str43 = webSocketClient38.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory44 = webSocketClient38.sslFactory;
        org.jboss.netty.channel.Channel channel45 = webSocketClient38.channel;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient38.sslFactory;
        webSocketClient33.sslFactory = sslFactory46;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap49 = null;
        webSocketClient48.bootstrap = clientBootstrap49;
        java.net.InetSocketAddress inetSocketAddress51 = webSocketClient48.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory52 = null;
        webSocketClient48.sslFactory = sslFactory52;
        java.lang.String str54 = webSocketClient48.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient55 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler56 = webSocketClient55.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient55.remoteAddress = inetSocketAddress57;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        webSocketClient55.remoteAddress = inetSocketAddress59;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest62 = webSocketClient61.request;
        java.io.InputStream inputStream63 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient65 = webSocketClient61.setupSsl(inputStream63, "hi!");
        java.lang.String str66 = webSocketClient61.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory67 = webSocketClient61.sslFactory;
        webSocketClient55.sslFactory = sslFactory67;
        webSocketClient48.sslFactory = sslFactory67;
        java.util.concurrent.Executor executor70 = null;
        webSocketClient48.executor = executor70;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient48.createNettyHttpRequest("", "");
        java.io.InputStream inputStream75 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient77 = webSocketClient48.setupSsl(inputStream75, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap78 = null;
        webSocketClient77.bootstrap = clientBootstrap78;
        org.webbitserver.WebSocketHandler webSocketHandler80 = webSocketClient77.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory81 = webSocketClient77.sslFactory;
        webSocketClient33.sslFactory = sslFactory81;
        org.webbitserver.helpers.SslFactory sslFactory83 = webSocketClient33.sslFactory;
        webSocketClient0.sslFactory = sslFactory83;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap85 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "LiFJi1AFe1+Y+OVm2HaCmA==" + "'", str27.equals("LiFJi1AFe1+Y+OVm2HaCmA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap85);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        webSocketClient29.base64Nonce = "OvKg7ATbFa7xOsH3juxhtw==";
        java.lang.String str35 = webSocketClient29.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str35 + "' != '" + "OvKg7ATbFa7xOsH3juxhtw==" + "'", str35.equals("OvKg7ATbFa7xOsH3juxhtw=="));
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str1 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler45;
        java.net.InetSocketAddress inetSocketAddress47 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress47);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient10.exceptionHandler;
        webSocketClient10.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient10.bootstrap = clientBootstrap15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 79 + "'", byte11 == (byte) 79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient3.bootstrap;
        byte byte5 = webSocketClient3.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient6.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient6.remoteAddress = inetSocketAddress8;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient6.remoteAddress = inetSocketAddress10;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient6.request;
        org.jboss.netty.channel.Channel channel13 = webSocketClient6.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "RR4B35Xord0fxgKGV8ODRg==");
        webSocketClient3.request = httpRequest16;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = null;
        webSocketClient18.bootstrap = clientBootstrap19;
        java.net.InetSocketAddress inetSocketAddress21 = webSocketClient18.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory22 = null;
        webSocketClient18.sslFactory = sslFactory22;
        java.lang.String str24 = webSocketClient18.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient18.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient18.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient18.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient18.reconnectEvery((long) (byte) 59);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient18.createNettyHttpRequest("hSsHQDxVNEP8GXiVGOyF4Q==", "jn6UEyOrcNvj0Ejf13ULqQ==");
        webSocketClient3.request = httpRequest32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte5 + "' != '" + (byte) -86 + "'", byte5 == (byte) -86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient7.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient7.bootstrap;
        org.jboss.netty.channel.Channel channel16 = webSocketClient7.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient17.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient17.exceptionHandler = uncaughtExceptionHandler21;
        boolean boolean23 = webSocketClient17.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient24.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.setupSsl(inputStream37, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean40 = webSocketClient36.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient36.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler41;
        webSocketClient7.webSocketHandler = webSocketHandler41;
        webSocketClient0.webSocketHandler = webSocketHandler41;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient0.bootstrap = clientBootstrap45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        java.lang.Class<?> wildcardClass11 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 68 + "'", byte8 == (byte) 68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "xA7kqDfMdt4twsimMtgNgw==" + "'", str6.equals("xA7kqDfMdt4twsimMtgNgw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient0.channel = channel8;
        byte byte10 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "Cgmwu+MuqXGB0wDbi5QXCA==";
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "+Qd8qNJfT93WRP0GbBxKVA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -36 + "'", byte10 == (byte) -36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        webSocketClient0.base64Nonce = "UfpdD4bbfErxQegMKrdpng==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient15.request = httpRequest28;
        byte byte30 = webSocketClient15.randomByte();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient15.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = null;
        webSocketClient15.ioExceptionHandler = uncaughtExceptionHandler32;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte30 + "' != '" + (byte) -29 + "'", byte30 == (byte) -29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "9IGsDRkMzTKrFAbPxWWAHg==");
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        boolean boolean23 = webSocketClient0.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient0.bootstrap = clientBootstrap24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient0.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "c91MzizhrGzYhhzUwaQnWQ==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 12 + "'", byte7 == (byte) 12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "7RHtfZjxXM/FknF7igLx+A==" + "'", str6.equals("7RHtfZjxXM/FknF7igLx+A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        java.lang.String str6 = webSocketClient0.base64Nonce;
        byte byte7 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 34 + "'", byte7 == (byte) 34);
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient11.bootstrap;
        org.jboss.netty.channel.Channel channel20 = webSocketClient11.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = webSocketClient11.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient11.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient0.request = httpRequest24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient32.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient32.remoteAddress = inetSocketAddress34;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient32.remoteAddress = inetSocketAddress36;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest39 = webSocketClient38.request;
        java.io.InputStream inputStream40 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient38.setupSsl(inputStream40, "hi!");
        java.lang.String str43 = webSocketClient38.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory44 = webSocketClient38.sslFactory;
        webSocketClient32.sslFactory = sslFactory44;
        webSocketClient26.sslFactory = sslFactory44;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest48 = webSocketClient47.request;
        java.io.InputStream inputStream49 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient47.setupSsl(inputStream49, "hi!");
        java.lang.String str52 = webSocketClient47.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory53 = webSocketClient47.sslFactory;
        webSocketClient26.sslFactory = sslFactory53;
        webSocketClient0.sslFactory = sslFactory53;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler56 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler56;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory53);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient13.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient13.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient20.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient20.sslFactory = sslFactory24;
        java.lang.String str26 = webSocketClient20.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = webSocketClient33.sslFactory;
        webSocketClient27.sslFactory = sslFactory39;
        webSocketClient20.sslFactory = sslFactory39;
        java.util.concurrent.Executor executor42 = null;
        webSocketClient20.executor = executor42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        java.io.InputStream inputStream46 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient44.setupSsl(inputStream46, "hi!");
        java.lang.String str49 = webSocketClient44.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient44.sslFactory;
        webSocketClient20.sslFactory = sslFactory50;
        webSocketClient13.sslFactory = sslFactory50;
        org.webbitserver.helpers.SslFactory sslFactory53 = webSocketClient13.sslFactory;
        webSocketClient0.sslFactory = sslFactory53;
        webSocketClient0.base64Nonce = "0Lu9yDsSVgveiUlYHu+l7Q==";
        java.util.concurrent.Executor executor57 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor57);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel14 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "sQ0t/64crhPsh4wPG/mE7A==");
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        boolean boolean11 = webSocketClient8.ssl;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient8.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap20 = null;
        webSocketClient13.bootstrap = clientBootstrap20;
        java.util.concurrent.Executor executor22 = webSocketClient13.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient13.reconnectEvery((long) (byte) 99);
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient25.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient25.remoteAddress = inetSocketAddress27;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient25.remoteAddress = inetSocketAddress29;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient25.ioExceptionHandler;
        byte byte32 = webSocketClient25.randomByte();
        webSocketClient25.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient25.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient25.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient39.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient39.remoteAddress = inetSocketAddress41;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient39.remoteAddress = inetSocketAddress43;
        boolean boolean45 = webSocketClient39.ssl;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient39.remoteAddress = inetSocketAddress46;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        org.webbitserver.netty.WebSocketClient webSocketClient51 = webSocketClient48.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor52 = webSocketClient51.executor;
        org.webbitserver.WebSocketHandler webSocketHandler53 = webSocketClient51.webSocketHandler;
        webSocketClient39.webSocketHandler = webSocketHandler53;
        webSocketClient25.webSocketHandler = webSocketHandler53;
        webSocketClient13.webSocketHandler = webSocketHandler53;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient57.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress59 = null;
        webSocketClient57.remoteAddress = inetSocketAddress59;
        java.net.InetSocketAddress inetSocketAddress61 = null;
        webSocketClient57.remoteAddress = inetSocketAddress61;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient57.reconnectEvery((-1L));
        java.io.InputStream inputStream65 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient67 = webSocketClient57.setupSsl(inputStream65, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient57.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "uq+ogkA4uylV3lEeJ3joKw==");
        webSocketClient13.request = httpRequest70;
        webSocketClient8.request = httpRequest70;
        org.webbitserver.WebSocketHandler webSocketHandler73 = webSocketClient8.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "gkvGSAubHpYA6yGri5kx7w==" + "'", str5.equals("gkvGSAubHpYA6yGri5kx7w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str19 + "' != '" + "ucfnFw3S3vcPXNWB93uiWQ==" + "'", str19.equals("ucfnFw3S3vcPXNWB93uiWQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte32 + "' != '" + (byte) -126 + "'", byte32 == (byte) -126);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler73);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.String str41 = webSocketClient0.base64Nonce;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap42 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "ZI3uFp5JLcn/KUAYMkK3CQ==" + "'", str41.equals("ZI3uFp5JLcn/KUAYMkK3CQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap42);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient0.bootstrap = clientBootstrap12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient16.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient19.ioExceptionHandler = uncaughtExceptionHandler20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient19.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler23 = webSocketClient19.webSocketHandler;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient19.setupSsl(inputStream24, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient19.setupSsl(inputStream27, "OvKg7ATbFa7xOsH3juxhtw==");
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        java.io.InputStream inputStream32 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = webSocketClient30.setupSsl(inputStream32, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient35.ioExceptionHandler;
        byte byte42 = webSocketClient35.randomByte();
        webSocketClient35.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient35.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient30.request = httpRequest47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        java.io.InputStream inputStream51 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient49.setupSsl(inputStream51, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest55 = webSocketClient54.request;
        java.io.InputStream inputStream56 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = webSocketClient54.setupSsl(inputStream56, "hi!");
        java.lang.String str59 = webSocketClient54.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory60 = null;
        webSocketClient54.sslFactory = sslFactory60;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient54.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient53.request = httpRequest64;
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient53.sslFactory;
        webSocketClient30.sslFactory = sslFactory66;
        webSocketClient19.sslFactory = sslFactory66;
        webSocketClient0.sslFactory = sslFactory66;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte42 + "' != '" + (byte) 103 + "'", byte42 == (byte) 103);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "UDC47J4D52n6Fz8oCyC3gA==";
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery(10L);
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        webSocketClient0.base64Nonce = "sCQxpxt6SlIl1p9Qh4uRVw==";
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient13.sslFactory = sslFactory19;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient13.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient12.request = httpRequest23;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient12.sslFactory;
        org.jboss.netty.channel.Channel channel26 = webSocketClient12.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = null;
        webSocketClient27.bootstrap = clientBootstrap28;
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient27.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory31 = null;
        webSocketClient27.sslFactory = sslFactory31;
        java.lang.String str33 = webSocketClient27.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient40.request;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient40.setupSsl(inputStream42, "hi!");
        java.lang.String str45 = webSocketClient40.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient40.sslFactory;
        webSocketClient34.sslFactory = sslFactory46;
        webSocketClient27.sslFactory = sslFactory46;
        java.util.concurrent.Executor executor49 = null;
        webSocketClient27.executor = executor49;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient27.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient27.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress57 = webSocketClient27.remoteAddress;
        java.lang.String str58 = webSocketClient27.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress59 = webSocketClient27.remoteAddress;
        org.jboss.netty.channel.Channel channel60 = null;
        webSocketClient27.channel = channel60;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler62 = webSocketClient27.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap64 = null;
        webSocketClient63.bootstrap = clientBootstrap64;
        java.net.InetSocketAddress inetSocketAddress66 = webSocketClient63.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory67 = null;
        webSocketClient63.sslFactory = sslFactory67;
        java.lang.String str69 = webSocketClient63.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient70 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler71 = webSocketClient70.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress72 = null;
        webSocketClient70.remoteAddress = inetSocketAddress72;
        java.net.InetSocketAddress inetSocketAddress74 = null;
        webSocketClient70.remoteAddress = inetSocketAddress74;
        org.webbitserver.netty.WebSocketClient webSocketClient76 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest77 = webSocketClient76.request;
        java.io.InputStream inputStream78 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient80 = webSocketClient76.setupSsl(inputStream78, "hi!");
        java.lang.String str81 = webSocketClient76.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory82 = webSocketClient76.sslFactory;
        webSocketClient70.sslFactory = sslFactory82;
        webSocketClient63.sslFactory = sslFactory82;
        java.util.concurrent.Executor executor85 = null;
        webSocketClient63.executor = executor85;
        boolean boolean87 = webSocketClient63.ssl;
        org.webbitserver.helpers.SslFactory sslFactory88 = webSocketClient63.sslFactory;
        webSocketClient27.sslFactory = sslFactory88;
        webSocketClient12.sslFactory = sslFactory88;
        webSocketClient0.sslFactory = sslFactory88;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "d25nIsUZNCXVdQHSh1EVPA==" + "'", str5.equals("d25nIsUZNCXVdQHSh1EVPA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress57);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str58 + "' != '" + "zk8uA1x2MibQInIhGVCPUA==" + "'", str58.equals("zk8uA1x2MibQInIhGVCPUA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory88);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel18 = webSocketClient0.channel;
        java.util.concurrent.Executor executor19 = null;
        webSocketClient0.executor = executor19;
        webSocketClient0.ssl = false;
        org.jboss.netty.channel.Channel channel23 = null;
        webSocketClient0.channel = channel23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "RR4B35Xord0fxgKGV8ODRg==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler19 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient12.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient12.bootstrap = clientBootstrap22;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient12.reconnectEvery(0L);
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient12.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient12.createNettyHttpRequest("A1ImJfYvSm0LVjChazcl6w==", "rfzrf9WLLlPEZAtJTov+Nw==");
        webSocketClient0.request = httpRequest29;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient0.bootstrap = clientBootstrap31;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient11.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient11.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient11.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient11.webSocketHandler;
        org.jboss.netty.channel.Channel channel21 = webSocketClient11.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap23 = null;
        webSocketClient22.bootstrap = clientBootstrap23;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient22.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory26 = null;
        webSocketClient22.sslFactory = sslFactory26;
        java.lang.String str28 = webSocketClient22.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient22.webSocketHandler;
        java.lang.String str30 = webSocketClient22.base64Nonce;
        org.jboss.netty.channel.Channel channel31 = webSocketClient22.channel;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient22.sslFactory;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient22.channel = channel33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient35.bootstrap = clientBootstrap36;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap38 = webSocketClient35.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap40 = null;
        webSocketClient39.bootstrap = clientBootstrap40;
        java.net.InetSocketAddress inetSocketAddress42 = webSocketClient39.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient39.sslFactory = sslFactory43;
        java.lang.String str45 = webSocketClient39.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient46.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient46.remoteAddress = inetSocketAddress48;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        webSocketClient46.remoteAddress = inetSocketAddress50;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient52.request;
        java.io.InputStream inputStream54 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = webSocketClient52.setupSsl(inputStream54, "hi!");
        java.lang.String str57 = webSocketClient52.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory58 = webSocketClient52.sslFactory;
        webSocketClient46.sslFactory = sslFactory58;
        webSocketClient39.sslFactory = sslFactory58;
        java.util.concurrent.Executor executor61 = null;
        webSocketClient39.executor = executor61;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest65 = webSocketClient39.createNettyHttpRequest("", "");
        webSocketClient35.request = httpRequest65;
        webSocketClient22.request = httpRequest65;
        webSocketClient11.request = httpRequest65;
        webSocketClient0.request = httpRequest65;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -46 + "'", byte7 == (byte) -46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest65);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        webSocketClient0.ssl = false;
        boolean boolean8 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        boolean boolean6 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient16.ioExceptionHandler;
        byte byte23 = webSocketClient16.randomByte();
        webSocketClient16.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient16.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient30.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient30.remoteAddress = inetSocketAddress32;
        java.net.InetSocketAddress inetSocketAddress34 = null;
        webSocketClient30.remoteAddress = inetSocketAddress34;
        boolean boolean36 = webSocketClient30.ssl;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient30.remoteAddress = inetSocketAddress37;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient39.request;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient39.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor43 = webSocketClient42.executor;
        org.webbitserver.WebSocketHandler webSocketHandler44 = webSocketClient42.webSocketHandler;
        webSocketClient30.webSocketHandler = webSocketHandler44;
        webSocketClient16.webSocketHandler = webSocketHandler44;
        org.webbitserver.helpers.SslFactory sslFactory47 = webSocketClient16.sslFactory;
        byte byte48 = webSocketClient16.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient16.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler49;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "885TxD/Cd9kfBo3nrC9kJg==" + "'", str10.equals("885TxD/Cd9kfBo3nrC9kJg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte23 + "' != '" + (byte) -83 + "'", byte23 == (byte) -83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) 91 + "'", byte48 == (byte) 91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler49);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        boolean boolean10 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 112);
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "cWZCTvRFBhX7GRZUCFwErw==" + "'", str8.equals("cWZCTvRFBhX7GRZUCFwErw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.util.concurrent.Executor executor12 = null;
        webSocketClient10.executor = executor12;
        java.lang.String str14 = webSocketClient10.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "SDqG5MUmPW/WaAvfzoyRDQ==" + "'", str14.equals("SDqG5MUmPW/WaAvfzoyRDQ=="));
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -68);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) -19);
        java.lang.String str17 = webSocketClient16.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = null;
        webSocketClient16.request = httpRequest18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        webSocketClient0.ssl = true;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "jS9sHFimUlZ7e+DzYGZhBQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -51 + "'", byte8 == (byte) -51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel15 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "wBYWZzPNi2kU4AXqFDNe9g==" + "'", str11.equals("wBYWZzPNi2kU4AXqFDNe9g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel15);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 50 + "'", byte7 == (byte) 50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient20.sslFactory = sslFactory32;
        webSocketClient13.sslFactory = sslFactory32;
        java.util.concurrent.Executor executor35 = null;
        webSocketClient13.executor = executor35;
        boolean boolean37 = webSocketClient13.ssl;
        org.webbitserver.helpers.SslFactory sslFactory38 = webSocketClient13.sslFactory;
        webSocketClient12.sslFactory = sslFactory38;
        webSocketClient12.ssl = false;
        webSocketClient12.base64Nonce = "0dYtCbl5hZ56Nv/msYPMAQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory38);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.net.InetSocketAddress inetSocketAddress6 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress6);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient0.ssl = true;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -27 + "'", byte7 == (byte) -27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler45;
        java.util.concurrent.Executor executor47 = null;
        webSocketClient0.executor = executor47;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = false;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor3 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient4.bootstrap = clientBootstrap5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient4.exceptionHandler = uncaughtExceptionHandler7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient4.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient4.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient4.remoteAddress = inetSocketAddress13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.setupSsl(inputStream17, "hi!");
        java.lang.String str20 = webSocketClient15.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory21 = null;
        webSocketClient15.sslFactory = sslFactory21;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient15.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient15.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient27.setupSsl(inputStream28, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.jboss.netty.channel.Channel channel31 = null;
        webSocketClient27.channel = channel31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient33.ioExceptionHandler;
        byte byte40 = webSocketClient33.randomByte();
        webSocketClient33.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient33.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        java.io.InputStream inputStream50 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient48.setupSsl(inputStream50, "hi!");
        java.lang.String str53 = webSocketClient48.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory54 = webSocketClient48.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient48.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        webSocketClient33.request = httpRequest57;
        webSocketClient27.request = httpRequest57;
        webSocketClient4.request = httpRequest57;
        webSocketClient0.request = httpRequest57;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient62.request;
        java.io.InputStream inputStream64 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = webSocketClient62.setupSsl(inputStream64, "hi!");
        java.lang.String str67 = webSocketClient62.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory68 = null;
        webSocketClient62.sslFactory = sslFactory68;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest72 = webSocketClient62.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient74 = webSocketClient62.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream75 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient77 = webSocketClient74.setupSsl(inputStream75, "");
        org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler79 = webSocketClient78.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress80 = null;
        webSocketClient78.remoteAddress = inetSocketAddress80;
        java.net.InetSocketAddress inetSocketAddress82 = null;
        webSocketClient78.remoteAddress = inetSocketAddress82;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest86 = webSocketClient78.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress87 = webSocketClient78.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest90 = webSocketClient78.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient77.request = httpRequest90;
        org.webbitserver.netty.WebSocketClient webSocketClient93 = webSocketClient77.reconnectEvery((long) (byte) 82);
        org.webbitserver.helpers.SslFactory sslFactory94 = webSocketClient93.sslFactory;
        webSocketClient0.sslFactory = sslFactory94;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte40 + "' != '" + (byte) 105 + "'", byte40 == (byte) 105);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory94);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient3.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        webSocketClient0.ssl = false;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        org.webbitserver.helpers.SslFactory sslFactory3 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "KlwK3Yz2YKfgxVvOuSmOwg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory3);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient10.channel = channel11;
        byte byte13 = webSocketClient10.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient10.webSocketHandler;
        java.lang.Class<?> wildcardClass15 = webSocketClient10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 13 + "'", byte13 == (byte) 13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.createNettyHttpRequest("alODXB9ILViLUR13udkAtA==", "alODXB9ILViLUR13udkAtA==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = webSocketClient21.sslFactory;
        webSocketClient15.sslFactory = sslFactory27;
        webSocketClient8.sslFactory = sslFactory27;
        java.util.concurrent.Executor executor30 = null;
        webSocketClient8.executor = executor30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient8.createNettyHttpRequest("", "");
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient8.setupSsl(inputStream35, "");
        java.net.InetSocketAddress inetSocketAddress38 = webSocketClient37.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient39.request;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = webSocketClient39.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient42.ioExceptionHandler = uncaughtExceptionHandler43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient42.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler46 = webSocketClient42.webSocketHandler;
        webSocketClient37.webSocketHandler = webSocketHandler46;
        webSocketClient0.webSocketHandler = webSocketHandler46;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap49 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap49);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient7.channel = channel8;
        java.lang.String str10 = webSocketClient7.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -84;
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.util.concurrent.Executor executor11 = null;
        webSocketClient0.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient5.sslFactory;
        org.jboss.netty.channel.Channel channel12 = webSocketClient5.channel;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient5.sslFactory;
        webSocketClient0.sslFactory = sslFactory13;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap45 = null;
        webSocketClient44.bootstrap = clientBootstrap45;
        org.webbitserver.WebSocketHandler webSocketHandler47 = webSocketClient44.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory48 = webSocketClient44.sslFactory;
        webSocketClient0.sslFactory = sslFactory48;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap51 = null;
        webSocketClient0.bootstrap = clientBootstrap51;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = null;
        webSocketClient0.request = httpRequest53;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "uq+ogkA4uylV3lEeJ3joKw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler11;
        java.util.concurrent.Executor executor13 = webSocketClient9.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient9.createNettyHttpRequest("a7zdjb+g3taq4pj3h+G+pg==", "9IGsDRkMzTKrFAbPxWWAHg==");
        webSocketClient0.request = httpRequest16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient6.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient6.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        java.net.InetSocketAddress inetSocketAddress37 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress37);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        boolean boolean9 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -121 + "'", byte6 == (byte) -121);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "ppL+Wnvym2b398Cjl1UJAQ==" + "'", str7.equals("ppL+Wnvym2b398Cjl1UJAQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.util.concurrent.Executor executor16 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel17 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient8.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = webSocketClient17.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient17.reconnectEvery((long) 100);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient17.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "54PRmm8EnGcV2VOcjHfgog==");
        webSocketClient0.request = httpRequest23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient0.remoteAddress = inetSocketAddress25;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -106);
        org.jboss.netty.channel.Channel channel8 = webSocketClient7.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient8.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient8.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient8.sslFactory = sslFactory12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler15 = webSocketClient8.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient8.bootstrap;
        org.jboss.netty.channel.Channel channel17 = webSocketClient8.channel;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient8.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient8.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = null;
        webSocketClient21.bootstrap = clientBootstrap22;
        java.net.InetSocketAddress inetSocketAddress24 = webSocketClient21.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory25 = null;
        webSocketClient21.sslFactory = sslFactory25;
        java.lang.String str27 = webSocketClient21.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient34.request;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient34.setupSsl(inputStream36, "hi!");
        java.lang.String str39 = webSocketClient34.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient34.sslFactory;
        webSocketClient28.sslFactory = sslFactory40;
        webSocketClient21.sslFactory = sslFactory40;
        java.util.concurrent.Executor executor43 = null;
        webSocketClient21.executor = executor43;
        boolean boolean45 = webSocketClient21.ssl;
        org.webbitserver.helpers.SslFactory sslFactory46 = webSocketClient21.sslFactory;
        webSocketClient20.sslFactory = sslFactory46;
        webSocketClient0.sslFactory = sslFactory46;
        org.jboss.netty.channel.Channel channel49 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel49);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) -15);
        webSocketClient0.ssl = false;
        java.lang.Class<?> wildcardClass9 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -60;
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        org.webbitserver.helpers.SslFactory sslFactory3 = webSocketClient0.sslFactory;
        boolean boolean4 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient9.webSocketHandler;
        java.net.InetSocketAddress inetSocketAddress21 = webSocketClient9.remoteAddress;
        org.webbitserver.WebSocketHandler webSocketHandler22 = webSocketClient9.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler22);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "KFtc38XHjucgEUCG6mdM/g==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.helpers.SslFactory sslFactory9 = null;
        webSocketClient0.sslFactory = sslFactory9;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket11 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor7 = webSocketClient0.executor;
        byte byte8 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "9dKu0kjf7sK06ZQu64wRaw==" + "'", str6.equals("9dKu0kjf7sK06ZQu64wRaw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 80 + "'", byte8 == (byte) 80);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient7.sslFactory;
        java.lang.String str9 = webSocketClient7.base64Nonce;
        java.lang.String str10 = webSocketClient7.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient7.bootstrap = clientBootstrap11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "hed0VCSKvqZVK8puzNMWwQ==" + "'", str10.equals("hed0VCSKvqZVK8puzNMWwQ=="));
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        webSocketClient0.base64Nonce = "Zid4A0+FSZVDlgAqKbJ7YA==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 25 + "'", byte7 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.lang.String str12 = webSocketClient10.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient10.request;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient10.createNettyHttpRequest("rnm75lcO3fSC9FdHwlMDgA==", "X+qnX40fXm/E/w4Ebd4AEQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = webSocketClient45.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient45.exceptionHandler = uncaughtExceptionHandler47;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = webSocketClient45.exceptionHandler;
        org.jboss.netty.channel.Channel channel50 = webSocketClient45.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler51 = null;
        webSocketClient45.exceptionHandler = uncaughtExceptionHandler51;
        byte byte53 = webSocketClient45.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient54 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient54.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress56 = null;
        webSocketClient54.remoteAddress = inetSocketAddress56;
        java.net.InetSocketAddress inetSocketAddress58 = null;
        webSocketClient54.remoteAddress = inetSocketAddress58;
        boolean boolean60 = webSocketClient54.ssl;
        java.net.InetSocketAddress inetSocketAddress61 = null;
        webSocketClient54.remoteAddress = inetSocketAddress61;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient63.request;
        org.webbitserver.netty.WebSocketClient webSocketClient66 = webSocketClient63.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor67 = webSocketClient66.executor;
        org.webbitserver.WebSocketHandler webSocketHandler68 = webSocketClient66.webSocketHandler;
        webSocketClient54.webSocketHandler = webSocketHandler68;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler70 = webSocketClient54.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler71 = webSocketClient54.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler72 = webSocketClient54.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient73 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient73.request;
        java.io.InputStream inputStream75 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient77 = webSocketClient73.setupSsl(inputStream75, "hi!");
        java.lang.String str78 = webSocketClient73.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory79 = null;
        webSocketClient73.sslFactory = sslFactory79;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest83 = webSocketClient73.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler84 = null;
        webSocketClient73.ioExceptionHandler = uncaughtExceptionHandler84;
        org.webbitserver.netty.WebSocketClient webSocketClient86 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest87 = webSocketClient86.request;
        org.webbitserver.netty.WebSocketClient webSocketClient89 = webSocketClient86.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler90 = null;
        webSocketClient89.ioExceptionHandler = uncaughtExceptionHandler90;
        org.webbitserver.WebSocketHandler webSocketHandler92 = webSocketClient89.webSocketHandler;
        webSocketClient73.webSocketHandler = webSocketHandler92;
        webSocketClient54.webSocketHandler = webSocketHandler92;
        webSocketClient45.webSocketHandler = webSocketHandler92;
        webSocketClient0.webSocketHandler = webSocketHandler92;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte53 + "' != '" + (byte) -99 + "'", byte53 == (byte) -99);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler92);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.lang.String str11 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient0.webSocketHandler;
        java.lang.String str13 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -85 + "'", byte7 == (byte) -85);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "j08LOUwiFT92ahdKThBG7Q==" + "'", str10.equals("j08LOUwiFT92ahdKThBG7Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "HDqda2VstmtcSPec7UjQkw==" + "'", str11.equals("HDqda2VstmtcSPec7UjQkw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str13 + "' != '" + "HDqda2VstmtcSPec7UjQkw==" + "'", str13.equals("HDqda2VstmtcSPec7UjQkw=="));
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient14.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient11.request = httpRequest22;
        webSocketClient0.request = httpRequest22;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap25 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "4y+WyhBTaVYKtzo8OU2H6Q==" + "'", str8.equals("4y+WyhBTaVYKtzo8OU2H6Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap25);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -74);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        byte byte11 = webSocketClient9.randomByte();
        org.jboss.netty.channel.Channel channel12 = webSocketClient9.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -50 + "'", byte11 == (byte) -50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.lang.String str11 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "RhsEoYpPCptuArzZGpt66g==" + "'", str6.equals("RhsEoYpPCptuArzZGpt66g=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -24 + "'", byte9 == (byte) -24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket8 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.WebSocketHandler webSocketHandler9 = null;
        webSocketClient0.webSocketHandler = webSocketHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery(0L);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.setupSsl(inputStream12, "iLv88YjAq8udADXrVIZZ4g==");
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient0.setupSsl(inputStream15, "S7L12KAbGFmvMxdEpt7yCw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 63 + "'", byte7 == (byte) 63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        byte byte12 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "n9TZH/N/8U0B5KnMccEIrw==" + "'", str8.equals("n9TZH/N/8U0B5KnMccEIrw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "WEYSXlU4nYL5H3Sty2PYlg==" + "'", str11.equals("WEYSXlU4nYL5H3Sty2PYlg=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 123 + "'", byte12 == (byte) 123);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient11.ioExceptionHandler;
        byte byte18 = webSocketClient11.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient11.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient23.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient20.request = httpRequest31;
        webSocketClient11.request = httpRequest31;
        boolean boolean34 = webSocketClient11.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        boolean boolean41 = webSocketClient35.ssl;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient35.remoteAddress = inetSocketAddress42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient44.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor48 = webSocketClient47.executor;
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient47.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler49;
        webSocketClient11.webSocketHandler = webSocketHandler49;
        webSocketClient0.webSocketHandler = webSocketHandler49;
        org.jboss.netty.channel.Channel channel53 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -111 + "'", byte8 == (byte) -111);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 45 + "'", byte18 == (byte) 45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel53);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "e9FX9G0pi7K36qsfYFA8xQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = null;
        webSocketClient18.bootstrap = clientBootstrap19;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = webSocketClient18.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient18.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest24;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "uXMW9f41p+zt22RGff2iyg==" + "'", str8.equals("uXMW9f41p+zt22RGff2iyg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("aHgPT5PqcCM6OheJsrBSOw==", "17jLxiFMrPvO6ceuBhvJkg==");
        java.lang.String str14 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "iGzTn3ZMwVvo0LxaEp7SqQ==" + "'", str14.equals("iGzTn3ZMwVvo0LxaEp7SqQ=="));
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.reconnectEvery((long) (byte) 90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient0.ssl = true;
        java.net.InetSocketAddress inetSocketAddress37 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 68 + "'", byte7 == (byte) 68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress37);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        boolean boolean6 = webSocketClient0.ssl;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "0Lu9yDsSVgveiUlYHu+l7Q==");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        boolean boolean16 = webSocketClient10.ssl;
        boolean boolean17 = webSocketClient10.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient18.request;
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient18.setupSsl(inputStream20, "hi!");
        java.lang.String str23 = webSocketClient18.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory24 = webSocketClient18.sslFactory;
        webSocketClient10.sslFactory = sslFactory24;
        webSocketClient9.sslFactory = sslFactory24;
        java.util.concurrent.Executor executor27 = null;
        webSocketClient9.executor = executor27;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory24);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient0.request;
        java.io.InputStream inputStream12 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.setupSsl(inputStream12, "O2UPOp8sNDpU6C6FnfTFEg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient9.bootstrap = clientBootstrap12;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient9.reconnectEvery((long) (byte) 74);
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient9.setupSsl(inputStream16, "n41z9xeh1wxX4Oyehuoqqg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 47 + "'", byte10 == (byte) 47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 74);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient12.reconnectEvery(0L);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "D0idbTvLNjLtFNN1K3L1Vw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient0.createNettyHttpRequest("dwX6owofDd01sIZGZLTXkg==", "qt9P3tpkKTc/0KedTjrfzA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient27.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient27.setupSsl(inputStream30, "SEJu56wkLW6ABhG5/aZeUg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient4.reconnectEvery((long) (byte) -23);
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient4.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient4.createNettyHttpRequest("a3ilvPMNa5hwWCc5gscA4w==", "1JXQHEkMnfwAQC6JNgji4A==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.String str10 = webSocketClient9.base64Nonce;
        java.lang.String str11 = webSocketClient9.base64Nonce();
        byte byte12 = webSocketClient9.randomByte();
        java.util.concurrent.Executor executor13 = webSocketClient9.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "QTkXQ19GORHpne4Ltk+B7A==" + "'", str11.equals("QTkXQ19GORHpne4Ltk+B7A=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 95 + "'", byte12 == (byte) 95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.String str41 = webSocketClient0.base64Nonce;
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient0.setupSsl(inputStream42, "UHY64QnHu0uobSnsZkucrw==");
        java.util.concurrent.Executor executor45 = null;
        webSocketClient0.executor = executor45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str41 + "' != '" + "Wb8N3EhFYGtL4i7S8YU2wA==" + "'", str41.equals("Wb8N3EhFYGtL4i7S8YU2wA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 116 + "'", byte7 == (byte) 116);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "+cXmjPF3gqFZMGm2bK6sBQ==");
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.setupSsl(inputStream13, "q7cyJbHFPeeoSh9Dk8nFTw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) 27 + "'", byte9 == (byte) 27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient11.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        webSocketClient0.base64Nonce = "";
        java.lang.Class<?> wildcardClass16 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -29;
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        java.net.InetSocketAddress inetSocketAddress16 = webSocketClient13.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory17 = null;
        webSocketClient13.sslFactory = sslFactory17;
        java.lang.String str19 = webSocketClient13.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient26.setupSsl(inputStream28, "hi!");
        java.lang.String str31 = webSocketClient26.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient26.sslFactory;
        webSocketClient20.sslFactory = sslFactory32;
        webSocketClient13.sslFactory = sslFactory32;
        java.util.concurrent.Executor executor35 = null;
        webSocketClient13.executor = executor35;
        boolean boolean37 = webSocketClient13.ssl;
        org.webbitserver.helpers.SslFactory sslFactory38 = webSocketClient13.sslFactory;
        webSocketClient12.sslFactory = sslFactory38;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient40.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient40.remoteAddress = inetSocketAddress42;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient40.ioExceptionHandler = uncaughtExceptionHandler44;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap46 = webSocketClient40.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient40.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler51 = webSocketClient50.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress52 = null;
        webSocketClient50.remoteAddress = inetSocketAddress52;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        webSocketClient50.remoteAddress = inetSocketAddress54;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest58 = webSocketClient50.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient50.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient61 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler62 = webSocketClient61.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress63 = null;
        webSocketClient61.remoteAddress = inetSocketAddress63;
        java.net.InetSocketAddress inetSocketAddress65 = null;
        webSocketClient61.remoteAddress = inetSocketAddress65;
        org.webbitserver.netty.WebSocketClient webSocketClient67 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest68 = webSocketClient67.request;
        java.io.InputStream inputStream69 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient71 = webSocketClient67.setupSsl(inputStream69, "hi!");
        java.lang.String str72 = webSocketClient67.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory73 = webSocketClient67.sslFactory;
        webSocketClient61.sslFactory = sslFactory73;
        webSocketClient50.sslFactory = sslFactory73;
        webSocketClient40.sslFactory = sslFactory73;
        webSocketClient12.sslFactory = sslFactory73;
        org.jboss.netty.channel.Channel channel78 = webSocketClient12.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel78);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        webSocketClient0.base64Nonce = "k8f9EvvC8IJ1WzuBGYszbw==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        webSocketClient0.base64Nonce = "xe96fFoyYqeV/lCAj7S/AQ==";
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = webSocketClient24.sslFactory;
        webSocketClient18.sslFactory = sslFactory30;
        webSocketClient11.sslFactory = sslFactory30;
        java.util.concurrent.Executor executor33 = null;
        webSocketClient11.executor = executor33;
        boolean boolean35 = webSocketClient11.ssl;
        java.io.InputStream inputStream36 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient11.setupSsl(inputStream36, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient39.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient39.remoteAddress = inetSocketAddress41;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient39.remoteAddress = inetSocketAddress43;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient39.ioExceptionHandler;
        byte byte46 = webSocketClient39.randomByte();
        webSocketClient39.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient39.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient39.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = webSocketClient53.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress55 = null;
        webSocketClient53.remoteAddress = inetSocketAddress55;
        java.net.InetSocketAddress inetSocketAddress57 = null;
        webSocketClient53.remoteAddress = inetSocketAddress57;
        boolean boolean59 = webSocketClient53.ssl;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        webSocketClient53.remoteAddress = inetSocketAddress60;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest63 = webSocketClient62.request;
        org.webbitserver.netty.WebSocketClient webSocketClient65 = webSocketClient62.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor66 = webSocketClient65.executor;
        org.webbitserver.WebSocketHandler webSocketHandler67 = webSocketClient65.webSocketHandler;
        webSocketClient53.webSocketHandler = webSocketHandler67;
        webSocketClient39.webSocketHandler = webSocketHandler67;
        org.webbitserver.helpers.SslFactory sslFactory70 = webSocketClient39.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient39.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient11.request = httpRequest73;
        org.webbitserver.helpers.SslFactory sslFactory75 = webSocketClient11.sslFactory;
        webSocketClient0.sslFactory = sslFactory75;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte46 + "' != '" + (byte) -3 + "'", byte46 == (byte) -3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory75);
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "S7L12KAbGFmvMxdEpt7yCw==");
        java.lang.String str21 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 37 + "'", byte7 == (byte) 37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str21 + "' != '" + "hi!" + "'", str21.equals("hi!"));
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest3 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest3);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient4.bootstrap = clientBootstrap6;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient4.setupSsl(inputStream8, "YvJ/PvmUsUghLZNLo+OJHw==");
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient4.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler11);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient0.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient12.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient16.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient16.sslFactory = sslFactory20;
        java.lang.String str22 = webSocketClient16.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient16.sslFactory = sslFactory35;
        java.util.concurrent.Executor executor38 = null;
        webSocketClient16.executor = executor38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient16.createNettyHttpRequest("", "");
        webSocketClient12.request = httpRequest42;
        webSocketClient0.request = httpRequest42;
        org.webbitserver.helpers.SslFactory sslFactory45 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler46 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory45);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        boolean boolean14 = webSocketClient8.ssl;
        boolean boolean15 = webSocketClient8.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        java.lang.String str21 = webSocketClient16.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory22 = webSocketClient16.sslFactory;
        webSocketClient8.sslFactory = sslFactory22;
        webSocketClient0.sslFactory = sslFactory22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory22);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor35 = webSocketClient10.executor;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient10.executor = executor36;
        java.lang.String str38 = webSocketClient10.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient10.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient10.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient11.ioExceptionHandler;
        byte byte18 = webSocketClient11.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient11.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient23.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient20.request = httpRequest31;
        webSocketClient11.request = httpRequest31;
        boolean boolean34 = webSocketClient11.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        boolean boolean41 = webSocketClient35.ssl;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient35.remoteAddress = inetSocketAddress42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        org.webbitserver.netty.WebSocketClient webSocketClient47 = webSocketClient44.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor48 = webSocketClient47.executor;
        org.webbitserver.WebSocketHandler webSocketHandler49 = webSocketClient47.webSocketHandler;
        webSocketClient35.webSocketHandler = webSocketHandler49;
        webSocketClient11.webSocketHandler = webSocketHandler49;
        webSocketClient0.webSocketHandler = webSocketHandler49;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler53;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap55 = null;
        webSocketClient0.bootstrap = clientBootstrap55;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -121 + "'", byte8 == (byte) -121);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) -109 + "'", byte18 == (byte) -109);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler49);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.lang.String str13 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient15.ioExceptionHandler;
        byte byte22 = webSocketClient15.randomByte();
        webSocketClient15.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient15.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest27;
        webSocketClient0.ssl = true;
        org.webbitserver.WebSocketHandler webSocketHandler31 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "GtgnieZJ3ytXScWPhL1SLA==" + "'", str13.equals("GtgnieZJ3ytXScWPhL1SLA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 71 + "'", byte22 == (byte) 71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler31);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient3.request = httpRequest13;
        java.util.concurrent.Executor executor15 = null;
        webSocketClient3.executor = executor15;
        java.lang.String str17 = webSocketClient3.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean16 = webSocketClient12.ssl;
        java.util.concurrent.Executor executor17 = null;
        webSocketClient12.executor = executor17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient9.remoteAddress = inetSocketAddress10;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient9.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient36.bootstrap = clientBootstrap37;
        java.net.InetSocketAddress inetSocketAddress39 = webSocketClient36.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory40 = null;
        webSocketClient36.sslFactory = sslFactory40;
        java.lang.String str42 = webSocketClient36.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = webSocketClient43.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient43.remoteAddress = inetSocketAddress45;
        java.net.InetSocketAddress inetSocketAddress47 = null;
        webSocketClient43.remoteAddress = inetSocketAddress47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        java.io.InputStream inputStream51 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient49.setupSsl(inputStream51, "hi!");
        java.lang.String str54 = webSocketClient49.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory55 = webSocketClient49.sslFactory;
        webSocketClient43.sslFactory = sslFactory55;
        webSocketClient36.sslFactory = sslFactory55;
        java.util.concurrent.Executor executor58 = null;
        webSocketClient36.executor = executor58;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest62 = webSocketClient36.createNettyHttpRequest("", "");
        java.io.InputStream inputStream63 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient65 = webSocketClient36.setupSsl(inputStream63, "");
        org.webbitserver.helpers.SslFactory sslFactory66 = webSocketClient65.sslFactory;
        webSocketClient0.sslFactory = sslFactory66;
        java.net.InetSocketAddress inetSocketAddress68 = null;
        webSocketClient0.remoteAddress = inetSocketAddress68;
        java.lang.String str70 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient72 = webSocketClient0.reconnectEvery((long) (byte) -95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "TpeJcGpijUMQR15ynV6MSA==" + "'", str31.equals("TpeJcGpijUMQR15ynV6MSA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory66);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str70 + "' != '" + "TpeJcGpijUMQR15ynV6MSA==" + "'", str70.equals("TpeJcGpijUMQR15ynV6MSA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient72);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler12;
        java.util.concurrent.Executor executor14 = webSocketClient10.executor;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient10.remoteAddress = inetSocketAddress15;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient23.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler26;
        webSocketClient0.webSocketHandler = webSocketHandler26;
        java.lang.String str29 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient0.createNettyHttpRequest("88VjQnrbgh15uht2NBB6yw==", "D0sS+Vl+RI+PpkfHEZ0ruQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -93 + "'", byte7 == (byte) -93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "/BeN9Ks6bxGaltMpax+yZw==" + "'", str29.equals("/BeN9Ks6bxGaltMpax+yZw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "D0idbTvLNjLtFNN1K3L1Vw==");
        java.net.InetSocketAddress inetSocketAddress33 = webSocketClient32.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap34 = webSocketClient32.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap34);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient29.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = null;
        webSocketClient29.exceptionHandler = uncaughtExceptionHandler34;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "bQFuXpWQodfijAN03RKLpQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) '4');
        org.jboss.netty.channel.Channel channel10 = webSocketClient9.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -115 + "'", byte7 == (byte) -115);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "o94DzX8+pWNsDDArBjspXg==";
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        boolean boolean7 = webSocketClient1.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient1.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.util.concurrent.Executor executor11 = null;
        webSocketClient1.executor = executor11;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient1.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = null;
        webSocketClient14.ioExceptionHandler = uncaughtExceptionHandler18;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient14.exceptionHandler;
        byte byte21 = webSocketClient14.randomByte();
        java.util.concurrent.Executor executor22 = null;
        webSocketClient14.executor = executor22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient24.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient24.remoteAddress = inetSocketAddress26;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient24.remoteAddress = inetSocketAddress28;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient24.request;
        org.jboss.netty.channel.Channel channel31 = webSocketClient24.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient24.reconnectEvery((long) (byte) -21);
        org.webbitserver.netty.WebSocketClient webSocketClient34 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient34.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress36 = null;
        webSocketClient34.remoteAddress = inetSocketAddress36;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient34.remoteAddress = inetSocketAddress38;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient34.ioExceptionHandler;
        byte byte41 = webSocketClient34.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory42 = webSocketClient34.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap44 = null;
        webSocketClient43.bootstrap = clientBootstrap44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient46.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient46.remoteAddress = inetSocketAddress48;
        java.net.InetSocketAddress inetSocketAddress50 = null;
        webSocketClient46.remoteAddress = inetSocketAddress50;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient46.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient43.request = httpRequest54;
        webSocketClient34.request = httpRequest54;
        boolean boolean57 = webSocketClient34.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler59 = webSocketClient58.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        webSocketClient58.remoteAddress = inetSocketAddress60;
        java.net.InetSocketAddress inetSocketAddress62 = null;
        webSocketClient58.remoteAddress = inetSocketAddress62;
        boolean boolean64 = webSocketClient58.ssl;
        java.net.InetSocketAddress inetSocketAddress65 = null;
        webSocketClient58.remoteAddress = inetSocketAddress65;
        org.webbitserver.netty.WebSocketClient webSocketClient67 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest68 = webSocketClient67.request;
        org.webbitserver.netty.WebSocketClient webSocketClient70 = webSocketClient67.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor71 = webSocketClient70.executor;
        org.webbitserver.WebSocketHandler webSocketHandler72 = webSocketClient70.webSocketHandler;
        webSocketClient58.webSocketHandler = webSocketHandler72;
        webSocketClient34.webSocketHandler = webSocketHandler72;
        webSocketClient33.webSocketHandler = webSocketHandler72;
        webSocketClient14.webSocketHandler = webSocketHandler72;
        webSocketClient1.webSocketHandler = webSocketHandler72;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient78 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 25 + "'", byte21 == (byte) 25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte41 + "' != '" + (byte) 65 + "'", byte41 == (byte) 65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler72);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient6.sslFactory;
        webSocketClient0.sslFactory = sslFactory12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler14;
        java.lang.String str16 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.exceptionHandler;
        byte byte18 = webSocketClient0.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 109 + "'", byte18 == (byte) 109);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient0.reconnectEvery((long) (byte) 68);
        org.jboss.netty.channel.Channel channel24 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor26 = null;
        webSocketClient0.executor = executor26;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.reconnectEvery((long) (byte) -22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient14.request;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "hi!");
        java.lang.String str19 = webSocketClient14.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory20 = null;
        webSocketClient14.sslFactory = sslFactory20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient14.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient13.request = httpRequest24;
        webSocketClient0.request = httpRequest24;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient0.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient0.webSocketHandler;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket29 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) -70 + "'", byte6 == (byte) -70);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "ERJTOFv/BWXTbhMLJosXHQ==" + "'", str7.equals("ERJTOFv/BWXTbhMLJosXHQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler28);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        byte byte8 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("GW5o9nvWkmaqzsXeZyM2qQ==", "sdmXqGkUzPuzi47FYKcvOA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -43 + "'", byte8 == (byte) -43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient4.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient4.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient4.bootstrap;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient4.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory8);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient0.remoteAddress = inetSocketAddress29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.exceptionHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient0.request;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.channel.Channel channel27 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = null;
        webSocketClient28.bootstrap = clientBootstrap29;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = webSocketClient28.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient28.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap36 = null;
        webSocketClient35.bootstrap = clientBootstrap36;
        java.net.InetSocketAddress inetSocketAddress38 = webSocketClient35.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient35.sslFactory = sslFactory39;
        java.lang.String str41 = webSocketClient35.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient42 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = webSocketClient42.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient42.remoteAddress = inetSocketAddress44;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient42.remoteAddress = inetSocketAddress46;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient48.request;
        java.io.InputStream inputStream50 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient48.setupSsl(inputStream50, "hi!");
        java.lang.String str53 = webSocketClient48.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory54 = webSocketClient48.sslFactory;
        webSocketClient42.sslFactory = sslFactory54;
        webSocketClient35.sslFactory = sslFactory54;
        java.util.concurrent.Executor executor57 = null;
        webSocketClient35.executor = executor57;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest60 = webSocketClient59.request;
        java.io.InputStream inputStream61 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient59.setupSsl(inputStream61, "hi!");
        java.lang.String str64 = webSocketClient59.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory65 = webSocketClient59.sslFactory;
        webSocketClient35.sslFactory = sslFactory65;
        webSocketClient28.sslFactory = sslFactory65;
        org.webbitserver.helpers.SslFactory sslFactory68 = webSocketClient28.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler69 = webSocketClient28.exceptionHandler;
        java.io.InputStream inputStream70 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient72 = webSocketClient28.setupSsl(inputStream70, "13aKYIJGy2v+UAEI9+/V9g==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest75 = webSocketClient72.createNettyHttpRequest("JJ046SKCrDHWq4nW+y2kpA==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient0.request = httpRequest75;
        java.util.concurrent.Executor executor77 = null;
        webSocketClient0.executor = executor77;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest75);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("", "alODXB9ILViLUR13udkAtA==");
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        java.lang.String str10 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "RR4B35Xord0fxgKGV8ODRg==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -86);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.webbitserver.WebSocketHandler webSocketHandler1 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler1);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient0.bootstrap = clientBootstrap7;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) 99);
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient12.ioExceptionHandler;
        byte byte19 = webSocketClient12.randomByte();
        webSocketClient12.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient12.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient12.webSocketHandler = webSocketHandler40;
        webSocketClient0.webSocketHandler = webSocketHandler40;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = webSocketClient0.reconnectEvery((long) (byte) 3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "tEm+qDj25R84aFi052lmHA==" + "'", str6.equals("tEm+qDj25R84aFi052lmHA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte19 + "' != '" + (byte) 96 + "'", byte19 == (byte) 96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient45);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        java.lang.String str10 = webSocketClient9.base64Nonce();
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "wwjktNAMwM29TzNl4vjWvQ==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient13.createNettyHttpRequest("OCLL8AiOgCs/qERQpB+qIw==", "wWqVkYjrBUjEPx7Mg+ztZQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "U43j6fOWDmXZ4HAoyRvDGQ==" + "'", str10.equals("U43j6fOWDmXZ4HAoyRvDGQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "54PRmm8EnGcV2VOcjHfgog==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient9.exceptionHandler;
        java.lang.String str17 = webSocketClient9.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient9.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str17 + "' != '" + "Tn7MrturC5s73eBOice0OQ==" + "'", str17.equals("Tn7MrturC5s73eBOice0OQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = null;
        webSocketClient0.sslFactory = sslFactory8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "IlobnN/iHc5JjNScG34Nlw==");
        boolean boolean14 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -84 + "'", byte7 == (byte) -84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient3.bootstrap;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient3.remoteAddress = inetSocketAddress11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient4.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient1.request = httpRequest12;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler30 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler31 = webSocketClient14.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler32 = webSocketClient14.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = null;
        webSocketClient33.sslFactory = sslFactory39;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient33.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler44 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler44;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        org.webbitserver.WebSocketHandler webSocketHandler52 = webSocketClient49.webSocketHandler;
        webSocketClient33.webSocketHandler = webSocketHandler52;
        webSocketClient14.webSocketHandler = webSocketHandler52;
        webSocketClient1.webSocketHandler = webSocketHandler52;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler52);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.lang.String str4 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("A1ImJfYvSm0LVjChazcl6w==", "qcyB1VUvw6+2NxfeqFhJEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient1.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient1.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient1.ioExceptionHandler;
        boolean boolean10 = webSocketClient1.ssl;
        webSocketClient1.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        org.jboss.netty.channel.Channel channel20 = webSocketClient13.channel;
        java.lang.String str21 = webSocketClient13.base64Nonce();
        java.lang.String str22 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient13.sslFactory;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient13.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler27 = webSocketClient26.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress28 = null;
        webSocketClient26.remoteAddress = inetSocketAddress28;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient26.remoteAddress = inetSocketAddress30;
        boolean boolean32 = webSocketClient26.ssl;
        java.net.InetSocketAddress inetSocketAddress33 = null;
        webSocketClient26.remoteAddress = inetSocketAddress33;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        org.webbitserver.netty.WebSocketClient webSocketClient38 = webSocketClient35.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor39 = webSocketClient38.executor;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient38.webSocketHandler;
        webSocketClient26.webSocketHandler = webSocketHandler40;
        webSocketClient13.webSocketHandler = webSocketHandler40;
        webSocketClient1.webSocketHandler = webSocketHandler40;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str21 + "' != '" + "2OlHFKa54RS+s+CAGsdmqg==" + "'", str21.equals("2OlHFKa54RS+s+CAGsdmqg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler40);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient15.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient15.setupSsl(inputStream17, "hi!");
        java.lang.String str20 = webSocketClient15.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient15.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient15.createNettyHttpRequest("P+SPIF+HmRQzVa/sxVQYnw==", "sCQxpxt6SlIl1p9Qh4uRVw==");
        webSocketClient0.request = httpRequest24;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = null;
        webSocketClient0.bootstrap = clientBootstrap26;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -33 + "'", byte7 == (byte) -33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "ia6hvLF1bYRf7yE2MY6aig==";
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "uq+ogkA4uylV3lEeJ3joKw==");
        java.lang.Class<?> wildcardClass14 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        webSocketClient0.ssl = false;
        java.lang.String str9 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler10;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient8.exceptionHandler;
        org.jboss.netty.channel.Channel channel13 = webSocketClient8.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient8.exceptionHandler = uncaughtExceptionHandler14;
        byte byte16 = webSocketClient8.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient17.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient17.remoteAddress = inetSocketAddress19;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient17.remoteAddress = inetSocketAddress21;
        boolean boolean23 = webSocketClient17.ssl;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient17.remoteAddress = inetSocketAddress24;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient26.request;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient26.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor30 = webSocketClient29.executor;
        org.webbitserver.WebSocketHandler webSocketHandler31 = webSocketClient29.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler31;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient17.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient17.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient17.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = null;
        webSocketClient36.sslFactory = sslFactory42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient36.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient36.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest50 = webSocketClient49.request;
        org.webbitserver.netty.WebSocketClient webSocketClient52 = webSocketClient49.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler53 = null;
        webSocketClient52.ioExceptionHandler = uncaughtExceptionHandler53;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient52.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler55;
        webSocketClient17.webSocketHandler = webSocketHandler55;
        webSocketClient8.webSocketHandler = webSocketHandler55;
        webSocketClient0.webSocketHandler = webSocketHandler55;
        java.net.InetSocketAddress inetSocketAddress60 = null;
        webSocketClient0.remoteAddress = inetSocketAddress60;
        org.webbitserver.netty.WebSocketClient webSocketClient63 = webSocketClient0.reconnectEvery((long) (byte) -2);
        java.util.concurrent.Executor executor64 = null;
        webSocketClient0.executor = executor64;
        boolean boolean66 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 24 + "'", byte16 == (byte) 24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient12.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient12.remoteAddress = inetSocketAddress14;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient12.remoteAddress = inetSocketAddress16;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient12.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient9.request = httpRequest20;
        webSocketClient0.request = httpRequest20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -16 + "'", byte7 == (byte) -16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler25);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient4.request = httpRequest15;
        boolean boolean17 = webSocketClient4.ssl;
        byte byte18 = webSocketClient4.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 114 + "'", byte18 == (byte) 114);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler4;
        boolean boolean6 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient7.sslFactory = sslFactory13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient7.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient7.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream20 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.setupSsl(inputStream20, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean23 = webSocketClient19.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient19.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler24;
        java.lang.String str26 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient0.reconnectEvery((long) (byte) 59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str26 + "' != '" + "NgNiAg/oMF3wpDDvEGMWgw==" + "'", str26.equals("NgNiAg/oMF3wpDDvEGMWgw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient4.ioExceptionHandler = uncaughtExceptionHandler5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient4.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient4.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient4.webSocketHandler;
        java.util.concurrent.Executor executor10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler9, executor10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler9);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient15.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient22.exceptionHandler = uncaughtExceptionHandler24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        byte byte28 = webSocketClient22.randomByte();
        java.lang.String str29 = webSocketClient22.base64Nonce();
        java.util.concurrent.Executor executor30 = webSocketClient22.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        java.lang.String str41 = webSocketClient36.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory42 = null;
        webSocketClient36.sslFactory = sslFactory42;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient36.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient35.request = httpRequest46;
        webSocketClient22.request = httpRequest46;
        webSocketClient15.request = httpRequest46;
        webSocketClient0.request = httpRequest46;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "uRjV9uBdj8xBMSbW0ZJRwQ==" + "'", str11.equals("uRjV9uBdj8xBMSbW0ZJRwQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) 90 + "'", byte28 == (byte) 90);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "xwgtx0kekF1hYx3K7JrkTQ==" + "'", str29.equals("xwgtx0kekF1hYx3K7JrkTQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest46);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) 100);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient9.createNettyHttpRequest("goE5n353gkGe5CsB9YoFPA==", "54PRmm8EnGcV2VOcjHfgog==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient9.exceptionHandler;
        java.lang.String str17 = webSocketClient9.base64Nonce;
        java.lang.String str18 = webSocketClient9.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str17 + "' != '" + "PmM066YFGBo1T08lejC2hQ==" + "'", str17.equals("PmM066YFGBo1T08lejC2hQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "PmM066YFGBo1T08lejC2hQ==" + "'", str18.equals("PmM066YFGBo1T08lejC2hQ=="));
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "qWewGwGyoOoS1Zs5hUAYKQ==";
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler29;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.setupSsl(inputStream9, "2js3/fNuBzm9nKySqOls5g==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient0.bootstrap = clientBootstrap8;
        boolean boolean10 = webSocketClient0.ssl;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("VzXaCQ5Dk/ShzwplMQJsSA==", "aHgPT5PqcCM6OheJsrBSOw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "6b/OtxUAeZeLLnYx/Br6wg==";
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        webSocketClient0.ssl = true;
        boolean boolean14 = webSocketClient0.ssl;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient0.setupSsl(inputStream15, "J2vAWxHQjLkhAtmNeKVdHg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "QSlYN3uc4paYamK0Z2NfaQ==" + "'", str10.equals("QSlYN3uc4paYamK0Z2NfaQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor35 = webSocketClient10.executor;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient10.executor = executor36;
        java.lang.String str38 = webSocketClient10.base64Nonce;
        java.lang.String str39 = webSocketClient10.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient40.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress42 = null;
        webSocketClient40.remoteAddress = inetSocketAddress42;
        java.net.InetSocketAddress inetSocketAddress44 = null;
        webSocketClient40.remoteAddress = inetSocketAddress44;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient40.request;
        org.jboss.netty.channel.Channel channel47 = webSocketClient40.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient40.reconnectEvery((long) (byte) -21);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest52 = webSocketClient49.createNettyHttpRequest("0Mesbsmo/qz2wNCX85XS0A==", "W+VuRUNlLvV2pRfpqHZw+A==");
        webSocketClient10.request = httpRequest52;
        java.net.InetSocketAddress inetSocketAddress54 = null;
        webSocketClient10.remoteAddress = inetSocketAddress54;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest52);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient0.bootstrap = clientBootstrap17;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient0.channel = channel19;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient0.remoteAddress = inetSocketAddress24;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        boolean boolean11 = webSocketClient9.ssl;
        java.lang.String str12 = webSocketClient9.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "ig8BuV7LmXjGeOszzHSflg==" + "'", str12.equals("ig8BuV7LmXjGeOszzHSflg=="));
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("", "alODXB9ILViLUR13udkAtA==");
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        webSocketClient0.base64Nonce = "";
        org.jboss.netty.channel.Channel channel18 = null;
        webSocketClient0.channel = channel18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient1.ioExceptionHandler;
        byte byte8 = webSocketClient1.randomByte();
        webSocketClient1.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient1.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient1.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        boolean boolean21 = webSocketClient15.ssl;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient15.remoteAddress = inetSocketAddress22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient24.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor28 = webSocketClient27.executor;
        org.webbitserver.WebSocketHandler webSocketHandler29 = webSocketClient27.webSocketHandler;
        webSocketClient15.webSocketHandler = webSocketHandler29;
        webSocketClient1.webSocketHandler = webSocketHandler29;
        org.webbitserver.helpers.SslFactory sslFactory32 = webSocketClient1.sslFactory;
        byte byte33 = webSocketClient1.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler34 = webSocketClient1.webSocketHandler;
        java.util.concurrent.Executor executor35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler34, executor35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 23 + "'", byte8 == (byte) 23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory32);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte33 + "' != '" + (byte) -65 + "'", byte33 == (byte) -65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler34);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        boolean boolean7 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient8.request;
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient8.setupSsl(inputStream10, "hi!");
        java.lang.String str13 = webSocketClient8.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient8.sslFactory;
        webSocketClient0.sslFactory = sslFactory14;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient19.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient16.request = httpRequest27;
        java.util.concurrent.Executor executor29 = webSocketClient16.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient16.createNettyHttpRequest("a7zdjb+g3taq4pj3h+G+pg==", "mDNiHnSq15ff4wc7aJZvFg==");
        webSocketClient0.request = httpRequest32;
        java.net.InetSocketAddress inetSocketAddress34 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -46;
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler7;
        org.jboss.netty.channel.Channel channel9 = null;
        webSocketClient0.channel = channel9;
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "fw5nu7vgXJICwwwvGDkj1Q==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient10.bootstrap = clientBootstrap11;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient10.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory14 = null;
        webSocketClient10.sslFactory = sslFactory14;
        java.lang.String str16 = webSocketClient10.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler17 = webSocketClient10.webSocketHandler;
        java.lang.String str18 = webSocketClient10.base64Nonce;
        org.jboss.netty.channel.Channel channel19 = webSocketClient10.channel;
        org.webbitserver.helpers.SslFactory sslFactory20 = webSocketClient10.sslFactory;
        byte byte21 = webSocketClient10.randomByte();
        java.net.InetSocketAddress inetSocketAddress22 = webSocketClient10.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient23.setupSsl(inputStream25, "hi!");
        java.lang.String str28 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory29 = webSocketClient23.sslFactory;
        org.jboss.netty.channel.Channel channel30 = webSocketClient23.channel;
        java.lang.String str31 = webSocketClient23.base64Nonce();
        java.lang.String str32 = webSocketClient23.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient23.sslFactory;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) -100 + "'", byte21 == (byte) -100);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "Wbaswl4Merm9hmKjCpK5ig==" + "'", str31.equals("Wbaswl4Merm9hmKjCpK5ig=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        java.util.concurrent.Executor executor20 = webSocketClient9.executor;
        byte byte21 = webSocketClient9.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient9.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) -36 + "'", byte21 == (byte) -36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient0.sslFactory;
        boolean boolean6 = webSocketClient0.ssl;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "X+qnX40fXm/E/w4Ebd4AEQ==");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient10.request;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient10.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor14 = webSocketClient13.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest41 = webSocketClient15.createNettyHttpRequest("", "");
        java.io.InputStream inputStream42 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = webSocketClient15.setupSsl(inputStream42, "");
        java.net.InetSocketAddress inetSocketAddress45 = webSocketClient44.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient46.request;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient46.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = null;
        webSocketClient49.ioExceptionHandler = uncaughtExceptionHandler50;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler52 = webSocketClient49.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler53 = webSocketClient49.webSocketHandler;
        webSocketClient44.webSocketHandler = webSocketHandler53;
        webSocketClient13.webSocketHandler = webSocketHandler53;
        webSocketClient9.webSocketHandler = webSocketHandler53;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap57 = null;
        webSocketClient9.bootstrap = clientBootstrap57;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler53);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.reconnectEvery(0L);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler14;
        boolean boolean16 = webSocketClient9.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 116);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        byte byte17 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 74 + "'", byte17 == (byte) 74);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient0.setupSsl(inputStream31, "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -28 + "'", byte7 == (byte) -28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        java.lang.String str19 = webSocketClient11.base64Nonce;
        org.jboss.netty.channel.Channel channel20 = webSocketClient11.channel;
        org.webbitserver.helpers.SslFactory sslFactory21 = webSocketClient11.sslFactory;
        org.jboss.netty.channel.Channel channel22 = null;
        webSocketClient11.channel = channel22;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap25 = null;
        webSocketClient24.bootstrap = clientBootstrap25;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = webSocketClient24.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = null;
        webSocketClient28.bootstrap = clientBootstrap29;
        java.net.InetSocketAddress inetSocketAddress31 = webSocketClient28.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory32 = null;
        webSocketClient28.sslFactory = sslFactory32;
        java.lang.String str34 = webSocketClient28.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient35.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient35.remoteAddress = inetSocketAddress37;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient35.remoteAddress = inetSocketAddress39;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient41.request;
        java.io.InputStream inputStream43 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = webSocketClient41.setupSsl(inputStream43, "hi!");
        java.lang.String str46 = webSocketClient41.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory47 = webSocketClient41.sslFactory;
        webSocketClient35.sslFactory = sslFactory47;
        webSocketClient28.sslFactory = sslFactory47;
        java.util.concurrent.Executor executor50 = null;
        webSocketClient28.executor = executor50;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest54 = webSocketClient28.createNettyHttpRequest("", "");
        webSocketClient24.request = httpRequest54;
        webSocketClient11.request = httpRequest54;
        webSocketClient0.request = httpRequest54;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest58 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest58);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) -34);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler15;
        webSocketClient0.ssl = false;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        byte byte11 = webSocketClient0.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket12 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -17 + "'", byte11 == (byte) -17);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) -74;
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel13 = webSocketClient0.channel;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient0.remoteAddress;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = null;
        webSocketClient0.bootstrap = clientBootstrap15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.util.concurrent.Executor executor13 = null;
        webSocketClient12.executor = executor13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        byte byte14 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "/9kISSdqTAPyusjz6dV1kg==" + "'", str11.equals("/9kISSdqTAPyusjz6dV1kg=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 76 + "'", byte14 == (byte) 76);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = webSocketClient1.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress3 = null;
        webSocketClient1.remoteAddress = inetSocketAddress3;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient1.remoteAddress = inetSocketAddress5;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient1.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient1.setupSsl(inputStream8, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient10.exceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient10.sslFactory = sslFactory19;
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient10.webSocketHandler;
        boolean boolean22 = webSocketClient10.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap24 = null;
        webSocketClient23.bootstrap = clientBootstrap24;
        java.net.InetSocketAddress inetSocketAddress26 = webSocketClient23.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory27 = null;
        webSocketClient23.sslFactory = sslFactory27;
        java.lang.String str29 = webSocketClient23.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler30 = webSocketClient23.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = webSocketClient23.bootstrap;
        org.jboss.netty.channel.Channel channel32 = webSocketClient23.channel;
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient23.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient23.reconnectEvery((long) (byte) 37);
        java.util.concurrent.Executor executor36 = null;
        webSocketClient35.executor = executor36;
        org.webbitserver.WebSocketHandler webSocketHandler38 = webSocketClient35.webSocketHandler;
        webSocketClient10.webSocketHandler = webSocketHandler38;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler38);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient1.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient1.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient1.remoteAddress = inetSocketAddress8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient10.ioExceptionHandler;
        byte byte17 = webSocketClient10.randomByte();
        webSocketClient10.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient20.exceptionHandler = uncaughtExceptionHandler22;
        java.util.concurrent.Executor executor24 = webSocketClient20.executor;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient20.remoteAddress = inetSocketAddress25;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient20.setupSsl(inputStream27, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient30 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient30.request;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient30.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = null;
        webSocketClient33.ioExceptionHandler = uncaughtExceptionHandler34;
        org.webbitserver.WebSocketHandler webSocketHandler36 = webSocketClient33.webSocketHandler;
        webSocketClient29.webSocketHandler = webSocketHandler36;
        webSocketClient10.webSocketHandler = webSocketHandler36;
        webSocketClient1.webSocketHandler = webSocketHandler36;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient40 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) 102 + "'", byte17 == (byte) 102);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler36);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.webbitserver.helpers.SslFactory sslFactory10 = null;
        webSocketClient0.sslFactory = sslFactory10;
        boolean boolean12 = webSocketClient0.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = null;
        webSocketClient29.bootstrap = clientBootstrap32;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient29.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient29.reconnectEvery((-1L));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("c91MzizhrGzYhhzUwaQnWQ==", "OmE9sCjdiQ3BYeDTodQtaw==");
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient0.reconnectEvery((long) (byte) -35);
        byte byte12 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler14 = null;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 37 + "'", byte12 == (byte) 37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = null;
        webSocketClient11.bootstrap = clientBootstrap12;
        java.net.InetSocketAddress inetSocketAddress14 = webSocketClient11.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient11.sslFactory = sslFactory15;
        java.lang.String str17 = webSocketClient11.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient11.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient11.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient11.createNettyHttpRequest("54PRmm8EnGcV2VOcjHfgog==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient23.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient23.remoteAddress = inetSocketAddress25;
        java.net.InetSocketAddress inetSocketAddress27 = null;
        webSocketClient23.remoteAddress = inetSocketAddress27;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        java.io.InputStream inputStream31 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = webSocketClient29.setupSsl(inputStream31, "hi!");
        java.lang.String str34 = webSocketClient29.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory35 = webSocketClient29.sslFactory;
        webSocketClient23.sslFactory = sslFactory35;
        webSocketClient11.sslFactory = sslFactory35;
        webSocketClient0.sslFactory = sslFactory35;
        org.jboss.netty.channel.Channel channel39 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "BegqX3e/6Ud/fMw1znV1Jw==" + "'", str10.equals("BegqX3e/6Ud/fMw1znV1Jw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel39);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient3.bootstrap = clientBootstrap7;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient3.ioExceptionHandler;
        java.util.concurrent.Executor executor10 = webSocketClient3.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        boolean boolean9 = webSocketClient0.ssl;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) ' ');
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient6.setupSsl(inputStream8, "hi!");
        java.lang.String str11 = webSocketClient6.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory12 = null;
        webSocketClient6.sslFactory = sslFactory12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient6.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient6.ioExceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = webSocketClient19.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient22.ioExceptionHandler = uncaughtExceptionHandler23;
        org.webbitserver.WebSocketHandler webSocketHandler25 = webSocketClient22.webSocketHandler;
        webSocketClient6.webSocketHandler = webSocketHandler25;
        webSocketClient3.webSocketHandler = webSocketHandler25;
        byte byte28 = webSocketClient3.randomByte();
        java.lang.String str29 = webSocketClient3.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient3.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler25);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -82 + "'", byte28 == (byte) -82);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str29 + "' != '" + "uN4ft72MW1MHdTZZQh5u9g==" + "'", str29.equals("uN4ft72MW1MHdTZZQh5u9g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel7 = webSocketClient0.channel;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        java.lang.String str9 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.webbitserver.helpers.SslFactory sslFactory11 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient0.bootstrap = clientBootstrap13;
        org.jboss.netty.channel.Channel channel15 = null;
        webSocketClient0.channel = channel15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "7uxBxNh/puOvNK3JTeoYzw==" + "'", str8.equals("7uxBxNh/puOvNK3JTeoYzw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        boolean boolean4 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.lang.String str7 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel8 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str6 + "' != '" + "" + "'", str6.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str7 + "' != '" + "" + "'", str7.equals(""));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "ny1+cgF2IPSTkpuXDy6KEA==");
        boolean boolean10 = webSocketClient9.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient9.bootstrap = clientBootstrap11;
        java.lang.String str13 = webSocketClient9.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "LwXT2BaXMYYKK6N/qIY8WA==" + "'", str13.equals("LwXT2BaXMYYKK6N/qIY8WA=="));
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        boolean boolean8 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -68);
        java.util.concurrent.Executor executor11 = null;
        webSocketClient10.executor = executor11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient0.setupSsl(inputStream16, "t8ZjbpBRZxQ8jiEz845Y0g==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.reconnectEvery((long) (byte) -107);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient0.setupSsl(inputStream16, "A3D4w/mFV63lbKgoGsPzFA==");
        webSocketClient0.base64Nonce = "pLTMRk4L4Ew6sA7pYuKbEw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 72 + "'", byte7 == (byte) 72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        webSocketClient0.ssl = true;
        java.lang.String str37 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 9 + "'", byte7 == (byte) 9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str37 + "' != '" + "XCirFPERaAD8Q29Gq3vPZg==" + "'", str37.equals("XCirFPERaAD8Q29Gq3vPZg=="));
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        byte byte11 = webSocketClient0.randomByte();
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient0.remoteAddress = inetSocketAddress12;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "AKUq1313A9JMc88A6rJ00A==" + "'", str5.equals("AKUq1313A9JMc88A6rJ00A=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -10 + "'", byte11 == (byte) -10);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        boolean boolean7 = webSocketClient0.ssl;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = webSocketClient4.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient4.remoteAddress = inetSocketAddress6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient4.ioExceptionHandler;
        byte byte11 = webSocketClient4.randomByte();
        webSocketClient4.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient4.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest16;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "N0+tm6/4AmtTRMEVl1vyWg==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient22.reconnectEvery((long) (short) 10);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient25.bootstrap;
        byte byte27 = webSocketClient25.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler29 = webSocketClient28.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress30 = null;
        webSocketClient28.remoteAddress = inetSocketAddress30;
        java.net.InetSocketAddress inetSocketAddress32 = null;
        webSocketClient28.remoteAddress = inetSocketAddress32;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient28.request;
        org.jboss.netty.channel.Channel channel35 = webSocketClient28.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient28.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "RR4B35Xord0fxgKGV8ODRg==");
        webSocketClient25.request = httpRequest38;
        webSocketClient20.request = httpRequest38;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 116 + "'", byte11 == (byte) 116);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) 27 + "'", byte27 == (byte) 27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest38);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "sQ0t/64crhPsh4wPG/mE7A==");
        webSocketClient0.base64Nonce = "XxdsiWy8noB2yiw+HfrWNg==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = webSocketClient0.exceptionHandler;
        byte byte4 = webSocketClient0.randomByte();
        webSocketClient0.ssl = false;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient7.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.reconnectEvery((long) (byte) -59);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient7.bootstrap = clientBootstrap17;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient7.reconnectEvery(0L);
        org.webbitserver.WebSocketHandler webSocketHandler21 = webSocketClient7.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte4 + "' != '" + (byte) 35 + "'", byte4 == (byte) 35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler21);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient0.createNettyHttpRequest("ChgXpFpKl1L7KepL4qseEA==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.String str31 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "LIgrt1YeEWYaJZhRcB2y2Q==" + "'", str27.equals("LIgrt1YeEWYaJZhRcB2y2Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "TOdyTNQZsd4d+OarUNkz7w==" + "'", str31.equals("TOdyTNQZsd4d+OarUNkz7w=="));
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = null;
        webSocketClient0.channel = channel16;
        webSocketClient0.base64Nonce = "CinYmgYmZnao4SbZGdlRXw==";
        boolean boolean20 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "48qijvmaXXgryb2mckswSg==" + "'", str11.equals("48qijvmaXXgryb2mckswSg=="));
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.reconnectEvery(0L);
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient13.createNettyHttpRequest("+Sk1xnDm+VQXd7Wyv5++gQ==", "7uxBxNh/puOvNK3JTeoYzw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = uncaughtExceptionHandler6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.webbitserver.WebSocketHandler webSocketHandler4 = webSocketClient0.webSocketHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "NjQj/ZFqfCs0t0u5rXHLgA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        byte byte14 = webSocketClient0.randomByte();
        byte byte15 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte14 + "' != '" + (byte) 121 + "'", byte14 == (byte) 121);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -13 + "'", byte15 == (byte) -13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient7.bootstrap = clientBootstrap8;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient7.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient7.sslFactory = sslFactory11;
        java.lang.String str13 = webSocketClient7.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient20.setupSsl(inputStream22, "hi!");
        java.lang.String str25 = webSocketClient20.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory26 = webSocketClient20.sslFactory;
        webSocketClient14.sslFactory = sslFactory26;
        webSocketClient7.sslFactory = sslFactory26;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient7.executor = executor29;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest32 = webSocketClient31.request;
        java.io.InputStream inputStream33 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = webSocketClient31.setupSsl(inputStream33, "hi!");
        java.lang.String str36 = webSocketClient31.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory37 = webSocketClient31.sslFactory;
        webSocketClient7.sslFactory = sslFactory37;
        webSocketClient0.sslFactory = sslFactory37;
        org.webbitserver.helpers.SslFactory sslFactory40 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler41 = webSocketClient0.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap42 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap42);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler7 = webSocketClient0.ioExceptionHandler;
        java.util.concurrent.Executor executor8 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor8);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor10 = null;
        webSocketClient0.executor = executor10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -26 + "'", byte9 == (byte) -26);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient5.ioExceptionHandler;
        byte byte12 = webSocketClient5.randomByte();
        webSocketClient5.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest17;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient0.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient20.request;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient20.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient23.ioExceptionHandler = uncaughtExceptionHandler24;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient23.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler27 = webSocketClient23.webSocketHandler;
        java.io.InputStream inputStream28 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient23.setupSsl(inputStream28, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor31 = webSocketClient30.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap33 = null;
        webSocketClient32.bootstrap = clientBootstrap33;
        java.net.InetSocketAddress inetSocketAddress35 = webSocketClient32.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory36 = null;
        webSocketClient32.sslFactory = sslFactory36;
        java.lang.String str38 = webSocketClient32.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler40 = webSocketClient39.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient39.remoteAddress = inetSocketAddress41;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient39.remoteAddress = inetSocketAddress43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        java.io.InputStream inputStream47 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = webSocketClient45.setupSsl(inputStream47, "hi!");
        java.lang.String str50 = webSocketClient45.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory51 = webSocketClient45.sslFactory;
        webSocketClient39.sslFactory = sslFactory51;
        webSocketClient32.sslFactory = sslFactory51;
        webSocketClient30.sslFactory = sslFactory51;
        java.util.concurrent.Executor executor55 = webSocketClient30.executor;
        java.util.concurrent.Executor executor56 = null;
        webSocketClient30.executor = executor56;
        java.lang.String str58 = webSocketClient30.base64Nonce;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler59 = webSocketClient30.exceptionHandler;
        org.webbitserver.helpers.SslFactory sslFactory60 = webSocketClient30.sslFactory;
        webSocketClient0.sslFactory = sslFactory60;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) -60 + "'", byte12 == (byte) -60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory60);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient10.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient10.ioExceptionHandler = uncaughtExceptionHandler15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient9.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.reconnectEvery(0L);
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient9.remoteAddress = inetSocketAddress14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        byte byte11 = webSocketClient0.randomByte();
        byte byte12 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -119 + "'", byte11 == (byte) -119);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte12 + "' != '" + (byte) 75 + "'", byte12 == (byte) 75);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.setupSsl(inputStream8, "hi!");
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient10.channel = channel11;
        byte byte13 = webSocketClient10.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient14.exceptionHandler = uncaughtExceptionHandler16;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler18 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress19 = webSocketClient14.remoteAddress;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient14.reconnectEvery((long) (byte) -106);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap22 = webSocketClient21.bootstrap;
        webSocketClient21.ssl = true;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient21.createNettyHttpRequest("", "17jLxiFMrPvO6ceuBhvJkg==");
        webSocketClient10.request = httpRequest27;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) -3 + "'", byte13 == (byte) -3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte11 = webSocketClient10.randomByte();
        webSocketClient10.ssl = true;
        org.webbitserver.helpers.SslFactory sslFactory14 = webSocketClient10.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = null;
        webSocketClient15.bootstrap = clientBootstrap16;
        java.net.InetSocketAddress inetSocketAddress18 = webSocketClient15.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient15.sslFactory = sslFactory19;
        java.lang.String str21 = webSocketClient15.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient28.request;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient28.setupSsl(inputStream30, "hi!");
        java.lang.String str33 = webSocketClient28.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory34 = webSocketClient28.sslFactory;
        webSocketClient22.sslFactory = sslFactory34;
        webSocketClient15.sslFactory = sslFactory34;
        java.util.concurrent.Executor executor37 = null;
        webSocketClient15.executor = executor37;
        org.jboss.netty.channel.Channel channel39 = null;
        webSocketClient15.channel = channel39;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient41.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient41.remoteAddress = inetSocketAddress43;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient41.remoteAddress = inetSocketAddress45;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest49 = webSocketClient41.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient15.request = httpRequest49;
        webSocketClient10.request = httpRequest49;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) 22 + "'", byte11 == (byte) 22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest49);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap27 = null;
        webSocketClient0.bootstrap = clientBootstrap27;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap29 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap29);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient29.webSocketHandler;
        org.webbitserver.WebSocketHandler webSocketHandler33 = webSocketClient29.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap34 = webSocketClient29.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap34);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient0.remoteAddress = inetSocketAddress10;
        java.lang.String str12 = webSocketClient0.base64Nonce;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "/Y7RHNDpBoK4gKmXGxGRrA==" + "'", str12.equals("/Y7RHNDpBoK4gKmXGxGRrA=="));
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        java.io.InputStream inputStream3 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = webSocketClient1.setupSsl(inputStream3, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient6 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient6.request;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient6.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        org.webbitserver.WebSocketHandler webSocketHandler11 = webSocketClient9.webSocketHandler;
        webSocketClient5.webSocketHandler = webSocketHandler11;
        java.util.concurrent.Executor executor13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler11, executor13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler11);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        org.jboss.netty.channel.Channel channel11 = null;
        webSocketClient0.channel = channel11;
        java.net.InetSocketAddress inetSocketAddress13 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress13);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        java.lang.String str12 = webSocketClient10.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient10.request;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient10.channel = channel14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor15 = null;
        webSocketClient0.executor = executor15;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "+eKJ/18gS8gCOvQkUESqBw==" + "'", str11.equals("+eKJ/18gS8gCOvQkUESqBw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap14);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = null;
        webSocketClient0.bootstrap = clientBootstrap4;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient7.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap15 = webSocketClient7.bootstrap;
        org.jboss.netty.channel.Channel channel16 = webSocketClient7.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient17.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient17.exceptionHandler = uncaughtExceptionHandler21;
        boolean boolean23 = webSocketClient17.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest25 = webSocketClient24.request;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient24.setupSsl(inputStream26, "hi!");
        java.lang.String str29 = webSocketClient24.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory30 = null;
        webSocketClient24.sslFactory = sslFactory30;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient24.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient24.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient36.setupSsl(inputStream37, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean40 = webSocketClient36.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler41 = webSocketClient36.webSocketHandler;
        webSocketClient17.webSocketHandler = webSocketHandler41;
        webSocketClient7.webSocketHandler = webSocketHandler41;
        webSocketClient0.webSocketHandler = webSocketHandler41;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient0.createNettyHttpRequest("gi0Cb4bn3vMRN08q0L86/Q==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.lang.String str12 = webSocketClient0.base64Nonce();
        java.lang.String str13 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient0.reconnectEvery((long) (byte) 99);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str12 + "' != '" + "k5groj+bwtAhoemRerDWtQ==" + "'", str12.equals("k5groj+bwtAhoemRerDWtQ=="));
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "uZ7CUlQ3P8ny5qC285tKDg==" + "'", str13.equals("uZ7CUlQ3P8ny5qC285tKDg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler9 = webSocketClient0.webSocketHandler;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient0.createNettyHttpRequest("413F9uWRTwxSRQYgXmQMMQ==", "+WY+8v/zsk8BoBHp09YxVQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "PUwxB/jszXL/OY1Sug0UMQ==" + "'", str7.equals("PUwxB/jszXL/OY1Sug0UMQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.jboss.netty.channel.Channel channel10 = null;
        webSocketClient0.channel = channel10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient12.ssl = true;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.jboss.netty.channel.Channel channel19 = null;
        webSocketClient12.channel = channel19;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str18 + "' != '" + "x/eQhz7u/sDb4tokZVfv5Q==" + "'", str18.equals("x/eQhz7u/sDb4tokZVfv5Q=="));
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler16;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient11.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient14.ioExceptionHandler = uncaughtExceptionHandler15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient14.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler18 = webSocketClient14.webSocketHandler;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient14.setupSsl(inputStream19, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient14.setupSsl(inputStream22, "OvKg7ATbFa7xOsH3juxhtw==");
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient24.sslFactory;
        webSocketClient0.sslFactory = sslFactory25;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) 48);
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        webSocketClient0.base64Nonce = "";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery(0L);
        java.lang.String str8 = webSocketClient7.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = null;
        webSocketClient9.bootstrap = clientBootstrap10;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient9.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory13 = null;
        webSocketClient9.sslFactory = sslFactory13;
        java.lang.String str15 = webSocketClient9.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient22.request;
        java.io.InputStream inputStream24 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient22.setupSsl(inputStream24, "hi!");
        java.lang.String str27 = webSocketClient22.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory28 = webSocketClient22.sslFactory;
        webSocketClient16.sslFactory = sslFactory28;
        webSocketClient9.sslFactory = sslFactory28;
        java.util.concurrent.Executor executor31 = null;
        webSocketClient9.executor = executor31;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest35 = webSocketClient9.createNettyHttpRequest("", "");
        webSocketClient7.request = httpRequest35;
        org.webbitserver.WebSocketHandler webSocketHandler37 = webSocketClient7.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "kVIbHTCiSlrupv8CDrrb3g==" + "'", str8.equals("kVIbHTCiSlrupv8CDrrb3g=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler37);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.createNettyHttpRequest("ny1+cgF2IPSTkpuXDy6KEA==", "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient10.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient10.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = webSocketClient21.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient21.remoteAddress = inetSocketAddress23;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient21.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        java.io.InputStream inputStream29 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient31 = webSocketClient27.setupSsl(inputStream29, "hi!");
        java.lang.String str32 = webSocketClient27.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory33 = webSocketClient27.sslFactory;
        webSocketClient21.sslFactory = sslFactory33;
        webSocketClient10.sslFactory = sslFactory33;
        webSocketClient0.sslFactory = sslFactory33;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap37 = null;
        webSocketClient0.bootstrap = clientBootstrap37;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap39 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler40 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler40);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        org.jboss.netty.channel.Channel channel4 = null;
        webSocketClient0.channel = channel4;
        org.webbitserver.WebSocketHandler webSocketHandler6 = webSocketClient0.webSocketHandler;
        java.util.concurrent.Executor executor7 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        boolean boolean14 = webSocketClient8.ssl;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient8.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient17.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor21 = webSocketClient20.executor;
        org.webbitserver.WebSocketHandler webSocketHandler22 = webSocketClient20.webSocketHandler;
        webSocketClient8.webSocketHandler = webSocketHandler22;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = webSocketClient8.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler25 = webSocketClient8.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler26 = webSocketClient8.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        boolean boolean33 = webSocketClient27.ssl;
        boolean boolean34 = webSocketClient27.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient35 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest36 = webSocketClient35.request;
        java.io.InputStream inputStream37 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = webSocketClient35.setupSsl(inputStream37, "hi!");
        java.lang.String str40 = webSocketClient35.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory41 = webSocketClient35.sslFactory;
        webSocketClient27.sslFactory = sslFactory41;
        webSocketClient8.sslFactory = sslFactory41;
        webSocketClient0.sslFactory = sslFactory41;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient0.createNettyHttpRequest("rfzrf9WLLlPEZAtJTov+Nw==", "n9TZH/N/8U0B5KnMccEIrw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        byte byte6 = webSocketClient0.randomByte();
        java.lang.String str7 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte6 + "' != '" + (byte) 90 + "'", byte6 == (byte) 90);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "nl+lLyXDTd3T+gVN5txVRw==" + "'", str7.equals("nl+lLyXDTd3T+gVN5txVRw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress6 = null;
        webSocketClient0.remoteAddress = inetSocketAddress6;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.reconnectEvery((long) (byte) 35);
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap3 = webSocketClient0.bootstrap;
        java.io.InputStream inputStream4 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient6 = webSocketClient0.setupSsl(inputStream4, "");
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient7.request;
        java.io.InputStream inputStream9 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = webSocketClient7.setupSsl(inputStream9, "hi!");
        java.lang.String str12 = webSocketClient7.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient7.sslFactory;
        webSocketClient6.sslFactory = sslFactory13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient6.request;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap17 = null;
        webSocketClient16.bootstrap = clientBootstrap17;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap19 = webSocketClient16.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        webSocketClient6.request = httpRequest22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest22);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient7.exceptionHandler = uncaughtExceptionHandler9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        byte byte13 = webSocketClient7.randomByte();
        java.lang.String str14 = webSocketClient7.base64Nonce();
        java.util.concurrent.Executor executor15 = webSocketClient7.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient16.request;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient16.setupSsl(inputStream18, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient21 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest22 = webSocketClient21.request;
        java.io.InputStream inputStream23 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = webSocketClient21.setupSsl(inputStream23, "hi!");
        java.lang.String str26 = webSocketClient21.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory27 = null;
        webSocketClient21.sslFactory = sslFactory27;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest31 = webSocketClient21.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient20.request = httpRequest31;
        webSocketClient7.request = httpRequest31;
        webSocketClient0.request = httpRequest31;
        java.lang.Class<?> wildcardClass35 = webSocketClient0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte13 + "' != '" + (byte) 90 + "'", byte13 == (byte) 90);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str14 + "' != '" + "GBIFwH0C90vrqkvmjLR+jw==" + "'", str14.equals("GBIFwH0C90vrqkvmjLR+jw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.jboss.netty.channel.Channel channel6 = webSocketClient0.channel;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient0.sslFactory;
        byte byte8 = webSocketClient0.randomByte();
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket9 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -95 + "'", byte8 == (byte) -95);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        java.util.concurrent.Executor executor7 = null;
        webSocketClient0.executor = executor7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "5LtGrnc7jINyvQ0ZrTHNkw==";
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.exceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor8 = null;
        webSocketClient0.executor = executor8;
        java.lang.String str10 = webSocketClient0.base64Nonce;
        byte byte11 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor12 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 72 + "'", byte7 == (byte) 72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte11 + "' != '" + (byte) -38 + "'", byte11 == (byte) -38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor12);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        org.jboss.netty.channel.Channel channel7 = null;
        webSocketClient0.channel = channel7;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        java.util.concurrent.Executor executor11 = webSocketClient0.executor;
        java.net.InetSocketAddress inetSocketAddress12 = webSocketClient0.remoteAddress;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket13 = webSocketClient0.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress12);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        boolean boolean35 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient41.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient41.remoteAddress = inetSocketAddress43;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient41.remoteAddress = inetSocketAddress45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient41.ioExceptionHandler;
        byte byte48 = webSocketClient41.randomByte();
        webSocketClient41.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient41.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient36.request = httpRequest53;
        webSocketClient0.request = httpRequest53;
        org.webbitserver.netty.WebSocketClient webSocketClient57 = webSocketClient0.reconnectEvery((long) (byte) 92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -26 + "'", byte7 == (byte) -26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) 4 + "'", byte48 == (byte) 4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient57);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest5 = webSocketClient4.request;
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient4.setupSsl(inputStream6, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient8.webSocketHandler = webSocketHandler14;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        webSocketClient0.ssl = true;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient0.setupSsl(inputStream15, "mbi9zmXf1uPl16MQloDzbg==");
        byte byte18 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) -64 + "'", byte18 == (byte) -64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = null;
        webSocketClient0.webSocketHandler = webSocketHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.createNettyHttpRequest("A1ImJfYvSm0LVjChazcl6w==", "qcyB1VUvw6+2NxfeqFhJEA==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        java.lang.String str8 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str8 + "' != '" + "MVKKWKNRNQ5Bo2fDYwQQUA==" + "'", str8.equals("MVKKWKNRNQ5Bo2fDYwQQUA=="));
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler2 = webSocketClient0.webSocketHandler;
        webSocketClient0.base64Nonce = "nl+lLyXDTd3T+gVN5txVRw==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler2);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        boolean boolean9 = webSocketClient8.ssl;
        java.lang.String str10 = webSocketClient8.base64Nonce;
        boolean boolean11 = webSocketClient8.ssl;
        org.jboss.netty.channel.Channel channel12 = null;
        webSocketClient8.channel = channel12;
        java.lang.String str14 = webSocketClient8.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient8.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "BleEf2erP4d37u3KjdySyQ==" + "'", str5.equals("BleEf2erP4d37u3KjdySyQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest15);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler9;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient0.bootstrap;
        org.webbitserver.helpers.SslFactory sslFactory7 = webSocketClient0.sslFactory;
        byte byte8 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) -7 + "'", byte8 == (byte) -7);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor4 = webSocketClient3.executor;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient3.webSocketHandler;
        java.util.concurrent.Executor executor6 = null;
        webSocketClient3.executor = executor6;
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient3.channel = channel8;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient3.request;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient3.remoteAddress = inetSocketAddress11;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap10 = webSocketClient0.bootstrap;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient11.ioExceptionHandler;
        byte byte18 = webSocketClient11.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory19 = null;
        webSocketClient11.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor21 = webSocketClient11.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient11.createNettyHttpRequest("YvJ/PvmUsUghLZNLo+OJHw==", "IlobnN/iHc5JjNScG34Nlw==");
        webSocketClient0.request = httpRequest24;
        byte byte26 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte18 + "' != '" + (byte) 104 + "'", byte18 == (byte) 104);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte26 + "' != '" + (byte) -80 + "'", byte26 == (byte) -80);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.ssl = true;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient11.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient11.remoteAddress = inetSocketAddress13;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient11.remoteAddress = inetSocketAddress15;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        java.io.InputStream inputStream19 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient17.setupSsl(inputStream19, "hi!");
        java.lang.String str22 = webSocketClient17.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory23 = webSocketClient17.sslFactory;
        webSocketClient11.sslFactory = sslFactory23;
        webSocketClient0.sslFactory = sslFactory23;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap26 = webSocketClient0.bootstrap;
        java.util.concurrent.Executor executor27 = null;
        webSocketClient0.executor = executor27;
        java.net.InetSocketAddress inetSocketAddress29 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress29);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor6 = webSocketClient0.executor;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.channel.Channel channel8 = webSocketClient0.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel8);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        org.webbitserver.WebSocketHandler webSocketHandler10 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) 37);
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient12.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient12.ioExceptionHandler = uncaughtExceptionHandler14;
        org.webbitserver.helpers.SslFactory sslFactory16 = webSocketClient12.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        java.lang.String str18 = webSocketClient17.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest21 = webSocketClient17.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "N0+tm6/4AmtTRMEVl1vyWg==");
        webSocketClient12.request = httpRequest21;
        org.jboss.netty.channel.Channel channel23 = null;
        webSocketClient12.channel = channel23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest21);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory10 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory10);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient5.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient5.setupSsl(inputStream7, "hi!");
        java.lang.String str10 = webSocketClient5.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory11 = null;
        webSocketClient5.sslFactory = sslFactory11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient4.request = httpRequest15;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient4.sslFactory;
        org.jboss.netty.channel.Channel channel18 = webSocketClient4.channel;
        java.lang.String str19 = webSocketClient4.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress20 = webSocketClient4.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress20);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient1.bootstrap = clientBootstrap2;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap4 = webSocketClient1.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient1.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "ChgXpFpKl1L7KepL4qseEA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient1.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler11;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient9.exceptionHandler;
        org.jboss.netty.channel.Channel channel14 = webSocketClient9.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler15;
        byte byte17 = webSocketClient9.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient18 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler19 = webSocketClient18.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient18.remoteAddress = inetSocketAddress20;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient18.remoteAddress = inetSocketAddress22;
        boolean boolean24 = webSocketClient18.ssl;
        java.net.InetSocketAddress inetSocketAddress25 = null;
        webSocketClient18.remoteAddress = inetSocketAddress25;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient27.request;
        org.webbitserver.netty.WebSocketClient webSocketClient30 = webSocketClient27.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor31 = webSocketClient30.executor;
        org.webbitserver.WebSocketHandler webSocketHandler32 = webSocketClient30.webSocketHandler;
        webSocketClient18.webSocketHandler = webSocketHandler32;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient18.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient18.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient18.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest38 = webSocketClient37.request;
        java.io.InputStream inputStream39 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient41 = webSocketClient37.setupSsl(inputStream39, "hi!");
        java.lang.String str42 = webSocketClient37.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory43 = null;
        webSocketClient37.sslFactory = sslFactory43;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest47 = webSocketClient37.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler48 = null;
        webSocketClient37.ioExceptionHandler = uncaughtExceptionHandler48;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient50.request;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient50.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler54 = null;
        webSocketClient53.ioExceptionHandler = uncaughtExceptionHandler54;
        org.webbitserver.WebSocketHandler webSocketHandler56 = webSocketClient53.webSocketHandler;
        webSocketClient37.webSocketHandler = webSocketHandler56;
        webSocketClient18.webSocketHandler = webSocketHandler56;
        webSocketClient9.webSocketHandler = webSocketHandler56;
        webSocketClient1.webSocketHandler = webSocketHandler56;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient61 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -25 + "'", byte17 == (byte) -25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler56);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest29 = webSocketClient0.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "hi!");
        java.net.InetSocketAddress inetSocketAddress30 = webSocketClient0.remoteAddress;
        java.lang.String str31 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress32 = webSocketClient0.remoteAddress;
        org.jboss.netty.channel.Channel channel33 = null;
        webSocketClient0.channel = channel33;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler35 = webSocketClient0.exceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler36 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress30);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str31 + "' != '" + "h0OoF87qj5N4cLVaEIqnuA==" + "'", str31.equals("h0OoF87qj5N4cLVaEIqnuA=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler36);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler5;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient13.bootstrap = clientBootstrap14;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap16 = webSocketClient13.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient13.createNettyHttpRequest("hi!", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient20.bootstrap = clientBootstrap21;
        java.net.InetSocketAddress inetSocketAddress23 = webSocketClient20.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory24 = null;
        webSocketClient20.sslFactory = sslFactory24;
        java.lang.String str26 = webSocketClient20.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient27.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress29 = null;
        webSocketClient27.remoteAddress = inetSocketAddress29;
        java.net.InetSocketAddress inetSocketAddress31 = null;
        webSocketClient27.remoteAddress = inetSocketAddress31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient33.request;
        java.io.InputStream inputStream35 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient37 = webSocketClient33.setupSsl(inputStream35, "hi!");
        java.lang.String str38 = webSocketClient33.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory39 = webSocketClient33.sslFactory;
        webSocketClient27.sslFactory = sslFactory39;
        webSocketClient20.sslFactory = sslFactory39;
        java.util.concurrent.Executor executor42 = null;
        webSocketClient20.executor = executor42;
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest45 = webSocketClient44.request;
        java.io.InputStream inputStream46 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient44.setupSsl(inputStream46, "hi!");
        java.lang.String str49 = webSocketClient44.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory50 = webSocketClient44.sslFactory;
        webSocketClient20.sslFactory = sslFactory50;
        webSocketClient13.sslFactory = sslFactory50;
        org.webbitserver.helpers.SslFactory sslFactory53 = webSocketClient13.sslFactory;
        webSocketClient0.sslFactory = sslFactory53;
        webSocketClient0.base64Nonce = "0Lu9yDsSVgveiUlYHu+l7Q==";
        org.jboss.netty.channel.Channel channel57 = null;
        webSocketClient0.channel = channel57;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory53);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = null;
        webSocketClient3.ioExceptionHandler = uncaughtExceptionHandler4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient3.webSocketHandler;
        java.io.InputStream inputStream8 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient3.setupSsl(inputStream8, "qcyB1VUvw6+2NxfeqFhJEA==");
        java.util.concurrent.Executor executor11 = webSocketClient10.executor;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = null;
        webSocketClient12.bootstrap = clientBootstrap13;
        java.net.InetSocketAddress inetSocketAddress15 = webSocketClient12.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory16 = null;
        webSocketClient12.sslFactory = sslFactory16;
        java.lang.String str18 = webSocketClient12.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient19.remoteAddress = inetSocketAddress21;
        java.net.InetSocketAddress inetSocketAddress23 = null;
        webSocketClient19.remoteAddress = inetSocketAddress23;
        org.webbitserver.netty.WebSocketClient webSocketClient25 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient25.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient25.setupSsl(inputStream27, "hi!");
        java.lang.String str30 = webSocketClient25.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient25.sslFactory;
        webSocketClient19.sslFactory = sslFactory31;
        webSocketClient12.sslFactory = sslFactory31;
        webSocketClient10.sslFactory = sslFactory31;
        java.util.concurrent.Executor executor35 = webSocketClient10.executor;
        java.util.concurrent.Executor executor36 = null;
        webSocketClient10.executor = executor36;
        java.lang.String str38 = webSocketClient10.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient39.request;
        java.io.InputStream inputStream41 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient39.setupSsl(inputStream41, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient44 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler45 = webSocketClient44.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress46 = null;
        webSocketClient44.remoteAddress = inetSocketAddress46;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient44.remoteAddress = inetSocketAddress48;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = webSocketClient44.ioExceptionHandler;
        byte byte51 = webSocketClient44.randomByte();
        webSocketClient44.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest56 = webSocketClient44.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient39.request = httpRequest56;
        org.webbitserver.netty.WebSocketClient webSocketClient58 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest59 = webSocketClient58.request;
        java.io.InputStream inputStream60 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient62 = webSocketClient58.setupSsl(inputStream60, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient63 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest64 = webSocketClient63.request;
        java.io.InputStream inputStream65 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient67 = webSocketClient63.setupSsl(inputStream65, "hi!");
        java.lang.String str68 = webSocketClient63.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory69 = null;
        webSocketClient63.sslFactory = sslFactory69;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest73 = webSocketClient63.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        webSocketClient62.request = httpRequest73;
        org.webbitserver.helpers.SslFactory sslFactory75 = webSocketClient62.sslFactory;
        webSocketClient39.sslFactory = sslFactory75;
        webSocketClient10.sslFactory = sslFactory75;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler50);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte51 + "' != '" + (byte) -16 + "'", byte51 == (byte) -16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory75);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        boolean boolean13 = webSocketClient0.ssl;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -60 + "'", byte7 == (byte) -60);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "pu1bZAhrb4TVHF6+8m1MEw==" + "'", str10.equals("pu1bZAhrb4TVHF6+8m1MEw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = null;
        webSocketClient0.bootstrap = clientBootstrap6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        java.lang.String str10 = webSocketClient0.base64Nonce();
        java.lang.String str11 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler12 = webSocketClient0.webSocketHandler;
        webSocketClient0.ssl = true;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 74 + "'", byte7 == (byte) 74);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "0EmhzVoV/2oyW5EwtXvsaQ==" + "'", str10.equals("0EmhzVoV/2oyW5EwtXvsaQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str11 + "' != '" + "HDqda2VstmtcSPec7UjQkw==" + "'", str11.equals("HDqda2VstmtcSPec7UjQkw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler12);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler3 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler3;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.webbitserver.netty.WebSocketClient webSocketClient11 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient11.request;
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient11.setupSsl(inputStream13, "hi!");
        java.lang.String str16 = webSocketClient11.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient11.sslFactory;
        webSocketClient5.sslFactory = sslFactory17;
        webSocketClient0.sslFactory = sslFactory17;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler20;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler22 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler22;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler24 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler24;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory17);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap8 = null;
        webSocketClient0.bootstrap = clientBootstrap8;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = webSocketClient10.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient10.remoteAddress = inetSocketAddress12;
        java.net.InetSocketAddress inetSocketAddress14 = null;
        webSocketClient10.remoteAddress = inetSocketAddress14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient10.request;
        java.io.InputStream inputStream17 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = webSocketClient10.setupSsl(inputStream17, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor20 = webSocketClient19.executor;
        boolean boolean21 = webSocketClient19.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient22 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient22.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient22.remoteAddress = inetSocketAddress24;
        java.net.InetSocketAddress inetSocketAddress26 = null;
        webSocketClient22.remoteAddress = inetSocketAddress26;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient22.ioExceptionHandler;
        byte byte29 = webSocketClient22.randomByte();
        webSocketClient22.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient22.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler35 = webSocketClient22.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler37 = webSocketClient36.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress38 = null;
        webSocketClient36.remoteAddress = inetSocketAddress38;
        java.net.InetSocketAddress inetSocketAddress40 = null;
        webSocketClient36.remoteAddress = inetSocketAddress40;
        boolean boolean42 = webSocketClient36.ssl;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient36.remoteAddress = inetSocketAddress43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor49 = webSocketClient48.executor;
        org.webbitserver.WebSocketHandler webSocketHandler50 = webSocketClient48.webSocketHandler;
        webSocketClient36.webSocketHandler = webSocketHandler50;
        webSocketClient22.webSocketHandler = webSocketHandler50;
        org.webbitserver.helpers.SslFactory sslFactory53 = webSocketClient22.sslFactory;
        byte byte54 = webSocketClient22.randomByte();
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient22.webSocketHandler;
        webSocketClient19.webSocketHandler = webSocketHandler55;
        webSocketClient0.webSocketHandler = webSocketHandler55;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte29 + "' != '" + (byte) -86 + "'", byte29 == (byte) -86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte54 + "' != '" + (byte) 19 + "'", byte54 == (byte) 19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream13 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = webSocketClient12.setupSsl(inputStream13, "");
        org.webbitserver.netty.WebSocketClient webSocketClient16 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = webSocketClient16.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient16.remoteAddress = inetSocketAddress18;
        java.net.InetSocketAddress inetSocketAddress20 = null;
        webSocketClient16.remoteAddress = inetSocketAddress20;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient16.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress25 = webSocketClient16.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient16.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        webSocketClient15.request = httpRequest28;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.WebSocket webSocket30 = webSocketClient15.close();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        boolean boolean11 = webSocketClient9.ssl;
        org.webbitserver.helpers.SslFactory sslFactory12 = webSocketClient9.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory12);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = null;
        webSocketClient0.bootstrap = clientBootstrap9;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        java.util.concurrent.Executor executor12 = null;
        webSocketClient0.executor = executor12;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap14 = null;
        webSocketClient0.bootstrap = clientBootstrap14;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient0.createNettyHttpRequest("Ih8rn5vWRH2NTZ+hUEE97Q==", "hmYRbp0IXjAWfURWFEX6HQ==");
        webSocketClient0.ssl = false;
        byte byte21 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "hCNWtL34ODqXxKY1xHqkrg==" + "'", str11.equals("hCNWtL34ODqXxKY1xHqkrg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte21 + "' != '" + (byte) 36 + "'", byte21 == (byte) 36);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        java.util.concurrent.Executor executor7 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.ioExceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        boolean boolean13 = webSocketClient0.ssl;
        org.jboss.netty.channel.Channel channel14 = null;
        webSocketClient0.channel = channel14;
        org.jboss.netty.channel.Channel channel16 = webSocketClient0.channel;
        byte byte17 = webSocketClient0.randomByte();
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "5CLJecHO+lbRjGYm/s2WRQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel16);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte17 + "' != '" + (byte) -2 + "'", byte17 == (byte) -2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap2 = null;
        webSocketClient0.bootstrap = clientBootstrap2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler5 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        webSocketClient0.base64Nonce = "0x1TsuPZ4DwqvcGw+EtaiA==";
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient7.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient7.setupSsl(inputStream14, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient16.exceptionHandler = uncaughtExceptionHandler17;
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest20 = webSocketClient19.request;
        java.io.InputStream inputStream21 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = webSocketClient19.setupSsl(inputStream21, "hi!");
        java.lang.String str24 = webSocketClient19.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory25 = webSocketClient19.sslFactory;
        webSocketClient16.sslFactory = sslFactory25;
        webSocketClient0.sslFactory = sslFactory25;
        java.util.concurrent.Executor executor28 = webSocketClient0.executor;
        org.jboss.netty.channel.Channel channel29 = webSocketClient0.channel;
        java.io.InputStream inputStream30 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient0.setupSsl(inputStream30, "D0idbTvLNjLtFNN1K3L1Vw==");
        org.webbitserver.WebSocketHandler webSocketHandler33 = null;
        webSocketClient0.webSocketHandler = webSocketHandler33;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient0.reconnectEvery((long) (byte) 103);
        org.webbitserver.netty.WebSocketClient webSocketClient37 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = webSocketClient37.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress39 = null;
        webSocketClient37.remoteAddress = inetSocketAddress39;
        java.net.InetSocketAddress inetSocketAddress41 = null;
        webSocketClient37.remoteAddress = inetSocketAddress41;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest43 = webSocketClient37.request;
        java.io.InputStream inputStream44 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient46 = webSocketClient37.setupSsl(inputStream44, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = null;
        webSocketClient37.ioExceptionHandler = uncaughtExceptionHandler47;
        org.webbitserver.netty.WebSocketClient webSocketClient49 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler50 = webSocketClient49.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress51 = null;
        webSocketClient49.remoteAddress = inetSocketAddress51;
        java.net.InetSocketAddress inetSocketAddress53 = null;
        webSocketClient49.remoteAddress = inetSocketAddress53;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler55 = webSocketClient49.ioExceptionHandler;
        byte byte56 = webSocketClient49.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler57 = webSocketClient49.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient59 = webSocketClient49.reconnectEvery((long) (byte) 100);
        org.webbitserver.WebSocketHandler webSocketHandler60 = webSocketClient49.webSocketHandler;
        webSocketClient37.webSocketHandler = webSocketHandler60;
        webSocketClient36.webSocketHandler = webSocketHandler60;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler55);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte56 + "' != '" + (byte) -94 + "'", byte56 == (byte) -94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler60);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory8 = webSocketClient0.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient9.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient9.remoteAddress = inetSocketAddress13;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient9.ioExceptionHandler;
        byte byte16 = webSocketClient9.randomByte();
        webSocketClient9.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.webbitserver.netty.WebSocketClient webSocketClient19 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler20 = webSocketClient19.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient19.exceptionHandler = uncaughtExceptionHandler21;
        java.util.concurrent.Executor executor23 = webSocketClient19.executor;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient19.remoteAddress = inetSocketAddress24;
        java.io.InputStream inputStream26 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient28 = webSocketClient19.setupSsl(inputStream26, "ny1+cgF2IPSTkpuXDy6KEA==");
        org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient29.request;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = webSocketClient29.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler33;
        org.webbitserver.WebSocketHandler webSocketHandler35 = webSocketClient32.webSocketHandler;
        webSocketClient28.webSocketHandler = webSocketHandler35;
        webSocketClient9.webSocketHandler = webSocketHandler35;
        webSocketClient0.webSocketHandler = webSocketHandler35;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler39 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -21 + "'", byte7 == (byte) -21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte16 + "' != '" + (byte) 44 + "'", byte16 == (byte) 44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler39);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.util.concurrent.Executor executor10 = webSocketClient9.executor;
        java.lang.String str11 = webSocketClient9.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "VtsCiKAd7hoQVjYLWcs++A==" + "'", str11.equals("VtsCiKAd7hoQVjYLWcs++A=="));
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.reconnectEvery((long) (byte) -6);
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap13 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler14;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap13);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "sQ0t/64crhPsh4wPG/mE7A==");
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient0.remoteAddress = inetSocketAddress11;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient0.start();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: remoteAddress");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest10);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = null;
        webSocketClient0.channel = channel5;
        java.lang.String str7 = webSocketClient0.base64Nonce();
        org.webbitserver.netty.WebSocketClient webSocketClient8 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient8.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress10 = null;
        webSocketClient8.remoteAddress = inetSocketAddress10;
        java.net.InetSocketAddress inetSocketAddress12 = null;
        webSocketClient8.remoteAddress = inetSocketAddress12;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient8.ioExceptionHandler;
        byte byte15 = webSocketClient8.randomByte();
        org.webbitserver.helpers.SslFactory sslFactory16 = webSocketClient8.sslFactory;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = null;
        webSocketClient17.bootstrap = clientBootstrap18;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient20.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress22 = null;
        webSocketClient20.remoteAddress = inetSocketAddress22;
        java.net.InetSocketAddress inetSocketAddress24 = null;
        webSocketClient20.remoteAddress = inetSocketAddress24;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest28 = webSocketClient20.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient17.request = httpRequest28;
        webSocketClient8.request = httpRequest28;
        boolean boolean31 = webSocketClient8.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler33 = webSocketClient32.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = null;
        webSocketClient32.exceptionHandler = uncaughtExceptionHandler34;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler36 = webSocketClient32.exceptionHandler;
        org.jboss.netty.channel.Channel channel37 = webSocketClient32.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler38 = null;
        webSocketClient32.exceptionHandler = uncaughtExceptionHandler38;
        byte byte40 = webSocketClient32.randomByte();
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient41.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient41.remoteAddress = inetSocketAddress43;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient41.remoteAddress = inetSocketAddress45;
        boolean boolean47 = webSocketClient41.ssl;
        java.net.InetSocketAddress inetSocketAddress48 = null;
        webSocketClient41.remoteAddress = inetSocketAddress48;
        org.webbitserver.netty.WebSocketClient webSocketClient50 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest51 = webSocketClient50.request;
        org.webbitserver.netty.WebSocketClient webSocketClient53 = webSocketClient50.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor54 = webSocketClient53.executor;
        org.webbitserver.WebSocketHandler webSocketHandler55 = webSocketClient53.webSocketHandler;
        webSocketClient41.webSocketHandler = webSocketHandler55;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler57 = webSocketClient41.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler58 = webSocketClient41.ioExceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler59 = webSocketClient41.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient60 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest61 = webSocketClient60.request;
        java.io.InputStream inputStream62 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient64 = webSocketClient60.setupSsl(inputStream62, "hi!");
        java.lang.String str65 = webSocketClient60.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory66 = null;
        webSocketClient60.sslFactory = sslFactory66;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest70 = webSocketClient60.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler71 = null;
        webSocketClient60.ioExceptionHandler = uncaughtExceptionHandler71;
        org.webbitserver.netty.WebSocketClient webSocketClient73 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest74 = webSocketClient73.request;
        org.webbitserver.netty.WebSocketClient webSocketClient76 = webSocketClient73.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler77 = null;
        webSocketClient76.ioExceptionHandler = uncaughtExceptionHandler77;
        org.webbitserver.WebSocketHandler webSocketHandler79 = webSocketClient76.webSocketHandler;
        webSocketClient60.webSocketHandler = webSocketHandler79;
        webSocketClient41.webSocketHandler = webSocketHandler79;
        webSocketClient32.webSocketHandler = webSocketHandler79;
        webSocketClient8.webSocketHandler = webSocketHandler79;
        webSocketClient0.webSocketHandler = webSocketHandler79;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str7 + "' != '" + "AOlwKm+ceh0LvJ6SnW4dZw==" + "'", str7.equals("AOlwKm+ceh0LvJ6SnW4dZw=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) -19 + "'", byte15 == (byte) -19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel37);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte40 + "' != '" + (byte) 122 + "'", byte40 == (byte) 122);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler79);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = webSocketClient0.bootstrap;
        org.jboss.netty.channel.Channel channel6 = null;
        webSocketClient0.channel = channel6;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler8;
        org.jboss.netty.channel.Channel channel10 = null;
        webSocketClient0.channel = channel10;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap5);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient9.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor13 = webSocketClient12.executor;
        org.webbitserver.WebSocketHandler webSocketHandler14 = webSocketClient12.webSocketHandler;
        webSocketClient0.webSocketHandler = webSocketHandler14;
        java.util.concurrent.Executor executor16 = webSocketClient0.executor;
        org.webbitserver.helpers.SslFactory sslFactory17 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory17);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        java.net.URI uRI0 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient1 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest2 = webSocketClient1.request;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient1.reconnectEvery((long) (short) 10);
        org.webbitserver.helpers.SslFactory sslFactory5 = webSocketClient4.sslFactory;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient4.exceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = null;
        webSocketClient4.bootstrap = clientBootstrap7;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient9.request;
        java.io.InputStream inputStream11 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = webSocketClient9.setupSsl(inputStream11, "hi!");
        java.lang.String str14 = webSocketClient9.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory15 = null;
        webSocketClient9.sslFactory = sslFactory15;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient9.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        org.webbitserver.netty.WebSocketClient webSocketClient21 = webSocketClient9.reconnectEvery((long) (byte) -6);
        java.io.InputStream inputStream22 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient24 = webSocketClient21.setupSsl(inputStream22, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        boolean boolean25 = webSocketClient21.ssl;
        org.webbitserver.WebSocketHandler webSocketHandler26 = webSocketClient21.webSocketHandler;
        webSocketClient4.webSocketHandler = webSocketHandler26;
        java.util.concurrent.Executor executor28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.webbitserver.netty.WebSocketClient webSocketClient29 = new org.webbitserver.netty.WebSocketClient(uRI0, webSocketHandler26, executor28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler26);
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.ioExceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient5 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient5.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient5.remoteAddress = inetSocketAddress7;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient5.remoteAddress = inetSocketAddress9;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient5.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient3.request = httpRequest13;
        java.util.concurrent.Executor executor15 = null;
        webSocketClient3.executor = executor15;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler17 = null;
        webSocketClient3.exceptionHandler = uncaughtExceptionHandler17;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest13);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        webSocketClient0.base64Nonce = "xObPeY7blHrn4terN5S4rA==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler13;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler12);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap7 = webSocketClient0.bootstrap;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient9.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient9.remoteAddress = inetSocketAddress11;
        java.net.InetSocketAddress inetSocketAddress13 = null;
        webSocketClient9.remoteAddress = inetSocketAddress13;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest17 = webSocketClient9.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        org.jboss.netty.channel.Channel channel18 = webSocketClient9.channel;
        webSocketClient9.ssl = false;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient9.bootstrap = clientBootstrap21;
        java.util.concurrent.Executor executor23 = webSocketClient9.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient9.createNettyHttpRequest("/w8cXyMSpJBvAe57l24wvQ==", "0ILfI0ECEfEPhLLlokgdpw==");
        webSocketClient0.request = httpRequest26;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap28 = webSocketClient0.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap28);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.net.InetSocketAddress inetSocketAddress9 = webSocketClient0.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("83LMpk5xugKUYrzKR6e1gw==", "HDqda2VstmtcSPec7UjQkw==");
        java.lang.String str13 = webSocketClient0.base64Nonce();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient0.exceptionHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient15 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler16 = webSocketClient15.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient15.remoteAddress = inetSocketAddress17;
        java.net.InetSocketAddress inetSocketAddress19 = null;
        webSocketClient15.remoteAddress = inetSocketAddress19;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = webSocketClient15.ioExceptionHandler;
        byte byte22 = webSocketClient15.randomByte();
        webSocketClient15.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient15.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.request = httpRequest27;
        webSocketClient0.base64Nonce = "xrV7AsiA+OCBewjb7vIgQQ==";
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str13 + "' != '" + "jT64PlEITnjAUVXRcdI3Wg==" + "'", str13.equals("jT64PlEITnjAUVXRcdI3Wg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler21);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte22 + "' != '" + (byte) 29 + "'", byte22 == (byte) 29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        org.webbitserver.WebSocketHandler webSocketHandler8 = webSocketClient0.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap9 = webSocketClient0.bootstrap;
        java.net.InetSocketAddress inetSocketAddress10 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler11;
        java.util.concurrent.Executor executor13 = null;
        webSocketClient0.executor = executor13;
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient0.sslFactory;
        webSocketClient0.base64Nonce = "ChgXpFpKl1L7KepL4qseEA==";
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap18 = null;
        webSocketClient0.bootstrap = clientBootstrap18;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest6 = webSocketClient0.request;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient9.exceptionHandler = uncaughtExceptionHandler10;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest13 = webSocketClient12.request;
        java.io.InputStream inputStream14 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient12.setupSsl(inputStream14, "hi!");
        java.lang.String str17 = webSocketClient12.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory18 = webSocketClient12.sslFactory;
        webSocketClient9.sslFactory = sslFactory18;
        org.webbitserver.WebSocketHandler webSocketHandler20 = webSocketClient9.webSocketHandler;
        java.net.InetSocketAddress inetSocketAddress21 = webSocketClient9.remoteAddress;
        java.util.concurrent.Executor executor22 = webSocketClient9.executor;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = null;
        webSocketClient9.ioExceptionHandler = uncaughtExceptionHandler23;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor22);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        org.webbitserver.netty.WebSocketClient.ACCEPT_GUID = "RR4B35Xord0fxgKGV8ODRg==";
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((-1L));
        org.jboss.netty.channel.Channel channel8 = null;
        webSocketClient7.channel = channel8;
        java.lang.String str10 = webSocketClient7.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str10 + "' != '" + "k4RcMZpreg/AbT9cgOz0Yw==" + "'", str10.equals("k4RcMZpreg/AbT9cgOz0Yw=="));
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = null;
        webSocketClient0.sslFactory = sslFactory6;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.util.concurrent.Executor executor9 = null;
        webSocketClient0.executor = executor9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = null;
        webSocketClient0.bootstrap = clientBootstrap11;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = webSocketClient0.reconnectEvery((long) (byte) 12);
        org.webbitserver.helpers.SslFactory sslFactory15 = webSocketClient14.sslFactory;
        java.io.InputStream inputStream16 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient18 = webSocketClient14.setupSsl(inputStream16, "x/7V531XljuIzT3fc6xq4Q==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient18);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest8 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = webSocketClient0.exceptionHandler;
        java.lang.String str11 = webSocketClient0.base64Nonce();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler10);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str11 + "' != '" + "EuXimiHHsOEcIfQnNbCyjQ==" + "'", str11.equals("EuXimiHHsOEcIfQnNbCyjQ=="));
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient0.webSocketHandler;
        java.lang.String str25 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.request;
        byte byte27 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str25 + "' != '" + "D410ORb6lOttTIYT5u5hgg==" + "'", str25.equals("D410ORb6lOttTIYT5u5hgg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte27 + "' != '" + (byte) 114 + "'", byte27 == (byte) 114);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.channel.Channel channel30 = null;
        webSocketClient29.channel = channel30;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap32 = webSocketClient29.bootstrap;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap32);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient0.webSocketHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler5);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        java.lang.String str5 = webSocketClient0.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory6 = webSocketClient0.sslFactory;
        java.io.InputStream inputStream7 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.setupSsl(inputStream7, "P+SPIF+HmRQzVa/sxVQYnw==");
        byte byte10 = webSocketClient9.randomByte();
        java.net.InetSocketAddress inetSocketAddress11 = webSocketClient9.remoteAddress;
        org.jboss.netty.channel.Channel channel12 = webSocketClient9.channel;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) -89 + "'", byte10 == (byte) -89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel12);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient0.exceptionHandler;
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        java.util.concurrent.Executor executor10 = webSocketClient0.executor;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -72 + "'", byte7 == (byte) -72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor10);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        boolean boolean6 = webSocketClient0.ssl;
        java.net.InetSocketAddress inetSocketAddress7 = webSocketClient0.remoteAddress;
        java.net.InetSocketAddress inetSocketAddress8 = webSocketClient0.remoteAddress;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler9 = webSocketClient0.ioExceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler9);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient3.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient3.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient3.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest11 = webSocketClient3.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "tS5jgeQrHU2fyPj1nhU+bw==");
        webSocketClient0.request = httpRequest11;
        java.util.concurrent.Executor executor13 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient0.request;
        byte byte15 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte15 + "' != '" + (byte) 104 + "'", byte15 == (byte) 104);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        org.webbitserver.WebSocketHandler webSocketHandler13 = webSocketClient0.webSocketHandler;
        org.webbitserver.netty.WebSocketClient webSocketClient14 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler15 = webSocketClient14.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress16 = null;
        webSocketClient14.remoteAddress = inetSocketAddress16;
        java.net.InetSocketAddress inetSocketAddress18 = null;
        webSocketClient14.remoteAddress = inetSocketAddress18;
        boolean boolean20 = webSocketClient14.ssl;
        java.net.InetSocketAddress inetSocketAddress21 = null;
        webSocketClient14.remoteAddress = inetSocketAddress21;
        org.webbitserver.netty.WebSocketClient webSocketClient23 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest24 = webSocketClient23.request;
        org.webbitserver.netty.WebSocketClient webSocketClient26 = webSocketClient23.reconnectEvery((long) (short) 10);
        java.util.concurrent.Executor executor27 = webSocketClient26.executor;
        org.webbitserver.WebSocketHandler webSocketHandler28 = webSocketClient26.webSocketHandler;
        webSocketClient14.webSocketHandler = webSocketHandler28;
        webSocketClient0.webSocketHandler = webSocketHandler28;
        org.webbitserver.helpers.SslFactory sslFactory31 = webSocketClient0.sslFactory;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest34 = webSocketClient0.createNettyHttpRequest("13aKYIJGy2v+UAEI9+/V9g==", "e0nbZ0nKUHaX7B+ZcvAyDA==");
        boolean boolean35 = webSocketClient0.ssl;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest37 = webSocketClient36.request;
        java.io.InputStream inputStream38 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient40 = webSocketClient36.setupSsl(inputStream38, "hi!");
        org.webbitserver.netty.WebSocketClient webSocketClient41 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler42 = webSocketClient41.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress43 = null;
        webSocketClient41.remoteAddress = inetSocketAddress43;
        java.net.InetSocketAddress inetSocketAddress45 = null;
        webSocketClient41.remoteAddress = inetSocketAddress45;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler47 = webSocketClient41.ioExceptionHandler;
        byte byte48 = webSocketClient41.randomByte();
        webSocketClient41.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest53 = webSocketClient41.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient36.request = httpRequest53;
        webSocketClient0.request = httpRequest53;
        org.webbitserver.netty.WebSocketClient webSocketClient56 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap57 = null;
        webSocketClient56.bootstrap = clientBootstrap57;
        java.net.InetSocketAddress inetSocketAddress59 = webSocketClient56.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory60 = null;
        webSocketClient56.sslFactory = sslFactory60;
        java.lang.String str62 = webSocketClient56.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler63 = webSocketClient56.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap64 = webSocketClient56.bootstrap;
        org.jboss.netty.channel.Channel channel65 = webSocketClient56.channel;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap66 = webSocketClient56.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest69 = webSocketClient56.createNettyHttpRequest("8WBxsPX/UwPNOi2yGSwKXg==", "HDqda2VstmtcSPec7UjQkw==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest72 = webSocketClient56.createNettyHttpRequest("RUc8AjMVLp0HU/v+jf4FQQ==", "+Sk1xnDm+VQXd7Wyv5++gQ==");
        webSocketClient0.request = httpRequest72;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) -44 + "'", byte7 == (byte) -44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler47);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte48 + "' != '" + (byte) 101 + "'", byte48 == (byte) 101);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest72);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = uncaughtExceptionHandler1.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce();
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest9 = webSocketClient0.request;
        boolean boolean10 = webSocketClient0.ssl;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler11 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler11;
        org.webbitserver.helpers.SslFactory sslFactory13 = webSocketClient0.sslFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str6 + "' != '" + "IujudcPq5pBaYRIDRIRuVg==" + "'", str6.equals("IujudcPq5pBaYRIDRIRuVg=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(sslFactory13);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler6;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient0.remoteAddress = inetSocketAddress8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.WebSocketHandler webSocketHandler7 = webSocketClient0.webSocketHandler;
        java.lang.String str8 = webSocketClient0.base64Nonce;
        org.jboss.netty.channel.Channel channel9 = webSocketClient0.channel;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler10 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler10;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap12 = webSocketClient0.bootstrap;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest15 = webSocketClient0.createNettyHttpRequest("MVKKWKNRNQ5Bo2fDYwQQUA==", "MqgnKZ9UldxEfdn8MEmNsQ==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest15);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.lang.String str27 = webSocketClient0.base64Nonce;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest30 = webSocketClient0.createNettyHttpRequest("ChgXpFpKl1L7KepL4qseEA==", "ChgXpFpKl1L7KepL4qseEA==");
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient0.createNettyHttpRequest("MVKKWKNRNQ5Bo2fDYwQQUA==", "/BeN9Ks6bxGaltMpax+yZw==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str27 + "' != '" + "NMQwTwgV+OoN7C2qI3y5DQ==" + "'", str27.equals("NMQwTwgV+OoN7C2qI3y5DQ=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest33);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient0.webSocketHandler;
        java.lang.String str25 = webSocketClient0.base64Nonce();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.request;
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "VzXaCQ5Dk/ShzwplMQJsSA==");
        java.util.concurrent.Executor executor30 = null;
        webSocketClient29.executor = executor30;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str25 + "' != '" + "bnMYbrGd+5j7UER4BtPU1w==" + "'", str25.equals("bnMYbrGd+5j7UER4BtPU1w=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest4 = webSocketClient0.request;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest7 = webSocketClient0.createNettyHttpRequest("", "alODXB9ILViLUR13udkAtA==");
        byte byte8 = webSocketClient0.randomByte();
        java.util.concurrent.Executor executor9 = webSocketClient0.executor;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest10 = webSocketClient0.request;
        webSocketClient0.base64Nonce = "hMsXZKXjOzr5QJ3ta/urzg==";
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler13 = webSocketClient0.exceptionHandler;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest7);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte8 + "' != '" + (byte) 72 + "'", byte8 == (byte) 72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler13);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress2 = null;
        webSocketClient0.remoteAddress = inetSocketAddress2;
        java.net.InetSocketAddress inetSocketAddress4 = null;
        webSocketClient0.remoteAddress = inetSocketAddress4;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler6 = webSocketClient0.ioExceptionHandler;
        byte byte7 = webSocketClient0.randomByte();
        webSocketClient0.base64Nonce = "HDqda2VstmtcSPec7UjQkw==";
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest12 = webSocketClient0.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        webSocketClient0.base64Nonce = "hi!";
        org.webbitserver.netty.WebSocketClient webSocketClient16 = webSocketClient0.reconnectEvery((long) (byte) 0);
        java.net.InetSocketAddress inetSocketAddress17 = webSocketClient0.remoteAddress;
        java.io.InputStream inputStream18 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient0.setupSsl(inputStream18, "S7L12KAbGFmvMxdEpt7yCw==");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap21 = null;
        webSocketClient0.bootstrap = clientBootstrap21;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte7 + "' != '" + (byte) 68 + "'", byte7 == (byte) 68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        org.webbitserver.netty.WebSocketClient.nextId = (byte) 1;
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        byte byte9 = webSocketClient0.randomByte();
        byte byte10 = webSocketClient0.randomByte();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte9 + "' != '" + (byte) -53 + "'", byte9 == (byte) -53);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte10 + "' != '" + (byte) 123 + "'", byte10 == (byte) 123);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        boolean boolean24 = webSocketClient0.ssl;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient0.setupSsl(inputStream25, "258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler28 = webSocketClient0.ioExceptionHandler;
        java.util.concurrent.Executor executor29 = null;
        webSocketClient0.executor = executor29;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler28);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        org.webbitserver.netty.WebSocketClient webSocketClient3 = webSocketClient0.reconnectEvery((long) (short) 10);
        boolean boolean4 = webSocketClient3.ssl;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap5 = null;
        webSocketClient3.bootstrap = clientBootstrap5;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        org.jboss.netty.channel.Channel channel5 = webSocketClient0.channel;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = webSocketClient0.reconnectEvery((long) (byte) -49);
        org.webbitserver.netty.WebSocketClient webSocketClient9 = webSocketClient0.reconnectEvery((long) (byte) -74);
        java.io.InputStream inputStream10 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient12 = webSocketClient0.setupSsl(inputStream10, "1z44udTqW6C2mV2IcxHbNw==");
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler14 = webSocketClient13.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress15 = null;
        webSocketClient13.remoteAddress = inetSocketAddress15;
        java.net.InetSocketAddress inetSocketAddress17 = null;
        webSocketClient13.remoteAddress = inetSocketAddress17;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest19 = webSocketClient13.request;
        org.jboss.netty.channel.Channel channel20 = webSocketClient13.channel;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest23 = webSocketClient13.createNettyHttpRequest("HDqda2VstmtcSPec7UjQkw==", "RR4B35Xord0fxgKGV8ODRg==");
        webSocketClient0.request = httpRequest23;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest27 = webSocketClient0.createNettyHttpRequest("n9TZH/N/8U0B5KnMccEIrw==", "ig8BuV7LmXjGeOszzHSflg==");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest27);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap1 = null;
        webSocketClient0.bootstrap = clientBootstrap1;
        java.net.InetSocketAddress inetSocketAddress3 = webSocketClient0.remoteAddress;
        org.webbitserver.helpers.SslFactory sslFactory4 = null;
        webSocketClient0.sslFactory = sslFactory4;
        java.lang.String str6 = webSocketClient0.base64Nonce;
        org.webbitserver.netty.WebSocketClient webSocketClient7 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler8 = webSocketClient7.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient7.remoteAddress = inetSocketAddress9;
        java.net.InetSocketAddress inetSocketAddress11 = null;
        webSocketClient7.remoteAddress = inetSocketAddress11;
        org.webbitserver.netty.WebSocketClient webSocketClient13 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest14 = webSocketClient13.request;
        java.io.InputStream inputStream15 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient17 = webSocketClient13.setupSsl(inputStream15, "hi!");
        java.lang.String str18 = webSocketClient13.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory19 = webSocketClient13.sslFactory;
        webSocketClient7.sslFactory = sslFactory19;
        webSocketClient0.sslFactory = sslFactory19;
        java.util.concurrent.Executor executor22 = null;
        webSocketClient0.executor = executor22;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest26 = webSocketClient0.createNettyHttpRequest("", "");
        java.io.InputStream inputStream27 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient29 = webSocketClient0.setupSsl(inputStream27, "");
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap30 = null;
        webSocketClient29.bootstrap = clientBootstrap30;
        org.webbitserver.netty.WebSocketClient webSocketClient32 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest33 = webSocketClient32.request;
        java.io.InputStream inputStream34 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient36 = webSocketClient32.setupSsl(inputStream34, "hi!");
        java.lang.String str37 = webSocketClient32.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory38 = null;
        webSocketClient32.sslFactory = sslFactory38;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest42 = webSocketClient32.createNettyHttpRequest("tS5jgeQrHU2fyPj1nhU+bw==", "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler43 = null;
        webSocketClient32.ioExceptionHandler = uncaughtExceptionHandler43;
        org.webbitserver.netty.WebSocketClient webSocketClient45 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest46 = webSocketClient45.request;
        org.webbitserver.netty.WebSocketClient webSocketClient48 = webSocketClient45.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler49 = null;
        webSocketClient48.ioExceptionHandler = uncaughtExceptionHandler49;
        org.webbitserver.WebSocketHandler webSocketHandler51 = webSocketClient48.webSocketHandler;
        webSocketClient32.webSocketHandler = webSocketHandler51;
        webSocketClient29.webSocketHandler = webSocketHandler51;
        org.webbitserver.WebSocketHandler webSocketHandler54 = webSocketClient29.webSocketHandler;
        java.util.concurrent.Executor executor55 = webSocketClient29.executor;
        java.net.InetSocketAddress inetSocketAddress56 = webSocketClient29.remoteAddress;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest57 = webSocketClient29.request;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(inetSocketAddress56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest57);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest1 = webSocketClient0.request;
        java.io.InputStream inputStream2 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient4 = webSocketClient0.setupSsl(inputStream2, "hi!");
        org.webbitserver.WebSocketHandler webSocketHandler5 = webSocketClient4.webSocketHandler;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap6 = webSocketClient4.bootstrap;
        org.jboss.netty.channel.Channel channel7 = webSocketClient4.channel;
        java.net.InetSocketAddress inetSocketAddress8 = null;
        webSocketClient4.remoteAddress = inetSocketAddress8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(webSocketHandler5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(channel7);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.util.concurrent.Executor executor4 = webSocketClient0.executor;
        java.lang.String str5 = webSocketClient0.base64Nonce();
        java.io.InputStream inputStream6 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient8 = webSocketClient0.setupSsl(inputStream6, "0x1TsuPZ4DwqvcGw+EtaiA==");
        java.net.InetSocketAddress inetSocketAddress9 = null;
        webSocketClient0.remoteAddress = inetSocketAddress9;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap11 = webSocketClient0.bootstrap;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler12 = null;
        webSocketClient0.ioExceptionHandler = uncaughtExceptionHandler12;
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest16 = webSocketClient0.createNettyHttpRequest("a7zdjb+g3taq4pj3h+G+pg==", "bz9M4yZDuhr5wdRP6Myh2Q==");
        org.webbitserver.netty.WebSocketClient webSocketClient17 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest18 = webSocketClient17.request;
        org.webbitserver.netty.WebSocketClient webSocketClient20 = webSocketClient17.reconnectEvery((long) (short) 10);
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler21 = null;
        webSocketClient20.ioExceptionHandler = uncaughtExceptionHandler21;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler23 = webSocketClient20.ioExceptionHandler;
        org.webbitserver.WebSocketHandler webSocketHandler24 = webSocketClient20.webSocketHandler;
        java.io.InputStream inputStream25 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient27 = webSocketClient20.setupSsl(inputStream25, "qcyB1VUvw6+2NxfeqFhJEA==");
        byte byte28 = webSocketClient27.randomByte();
        webSocketClient27.ssl = true;
        org.jboss.netty.bootstrap.ClientBootstrap clientBootstrap31 = null;
        webSocketClient27.bootstrap = clientBootstrap31;
        org.webbitserver.netty.WebSocketClient webSocketClient33 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler34 = webSocketClient33.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress35 = null;
        webSocketClient33.remoteAddress = inetSocketAddress35;
        java.net.InetSocketAddress inetSocketAddress37 = null;
        webSocketClient33.remoteAddress = inetSocketAddress37;
        org.webbitserver.netty.WebSocketClient webSocketClient39 = new org.webbitserver.netty.WebSocketClient();
        org.jboss.netty.handler.codec.http.HttpRequest httpRequest40 = webSocketClient39.request;
        java.io.InputStream inputStream41 = null;
        org.webbitserver.netty.WebSocketClient webSocketClient43 = webSocketClient39.setupSsl(inputStream41, "hi!");
        java.lang.String str44 = webSocketClient39.base64Nonce;
        org.webbitserver.helpers.SslFactory sslFactory45 = webSocketClient39.sslFactory;
        webSocketClient33.sslFactory = sslFactory45;
        webSocketClient27.sslFactory = sslFactory45;
        webSocketClient0.sslFactory = sslFactory45;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(executor4);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + str5 + "' != '" + "nLKKSLvtqgEZ/oBNLBJV7Q==" + "'", str5.equals("nLKKSLvtqgEZ/oBNLBJV7Q=="));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(clientBootstrap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(httpRequest16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketHandler24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient27);
        // Regression assertion (captures the current behavior of the code)
// flaky:         org.junit.Assert.assertTrue("'" + byte28 + "' != '" + (byte) -98 + "'", byte28 == (byte) -98);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(httpRequest40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(str44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(sslFactory45);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        org.webbitserver.netty.WebSocketClient webSocketClient0 = new org.webbitserver.netty.WebSocketClient();
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler1 = webSocketClient0.exceptionHandler;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler2 = null;
        webSocketClient0.exceptionHandler = uncaughtExceptionHandler2;
        java.lang.Thread.UncaughtExceptionHandler uncaughtExceptionHandler4 = webSocketClient0.exceptionHandler;
        java.net.InetSocketAddress inetSocketAddress5 = null;
        webSocketClient0.remoteAddress = inetSocketAddress5;
        java.net.InetSocketAddress inetSocketAddress7 = null;
        webSocketClient0.remoteAddress = inetSocketAddress7;
        org.webbitserver.netty.WebSocketClient webSocketClient10 = webSocketClient0.reconnectEvery((long) (byte) -80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(uncaughtExceptionHandler4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(webSocketClient10);
    }
}
