import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest2 {

    public static boolean debug = false;

    @Test
    public void test1001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1001");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage30.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage0.languageMixin = languageMixin45;
        java.lang.reflect.Method method47 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1002");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test1003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1003");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage4.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage22.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass26 = javaLanguage25.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage22.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage22.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage22.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage4.languageMixin = languageMixin32;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage35.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage35.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage40.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass44 = javaLanguage43.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage35.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1004");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
    }

    @Test
    public void test1005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1005");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage0.objectFactory = objectFactory44;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory46);
    }

    @Test
    public void test1006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1006");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage14.languageMixin = languageMixin15;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage14.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage4.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList33 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1007");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage14.languageMixin = languageMixin15;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage14.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage4.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage0.languageMixin = languageMixin32;
        java.lang.reflect.Method method34 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1008");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1009");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage8.languageMixin = languageMixin20;
        java.lang.Class<?> wildcardClass22 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class25 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1010");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1011");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class26 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
    }

    @Test
    public void test1012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1012");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.StepDefinition stepDefinition5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1013");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = null;
        javaLanguage1.languageMixin = languageMixin2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = null;
        javaLanguage1.objectFactory = objectFactory4;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage6.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass10 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage14.objectFactory = objectFactory38;
        java.lang.Class<?> wildcardClass40 = javaLanguage14.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
    }

    @Test
    public void test1014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1014");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage0.languageMixin = languageMixin24;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
    }

    @Test
    public void test1015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1015");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class9 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1016");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage11.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass15 = javaLanguage14.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage11.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage11.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage11.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage21.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass25 = javaLanguage24.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage11.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage29.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage29.languageMixin;
        java.lang.Class<?> wildcardClass37 = javaLanguage29.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage11.languageMixin = languageMixin39;
        cuke4duke.internal.language.LanguageMixin languageMixin41 = javaLanguage11.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage42.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage47.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass51 = javaLanguage50.getClass();
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        java.lang.Class<?> wildcardClass55 = javaLanguage11.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        java.lang.reflect.Method method57 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1017");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
    }

    @Test
    public void test1018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1018");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class45 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
    }

    @Test
    public void test1019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1019");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage0.languageMixin = languageMixin11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage13.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage13.languageMixin = languageMixin25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = javaLanguage27.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage27.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage27.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage27.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage45.objectFactory = objectFactory46;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass49 = javaLanguage48.getClass();
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.java.ObjectFactory objectFactory51 = javaLanguage45.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage45.languageMixin;
        java.lang.Class<?> wildcardClass53 = javaLanguage45.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        cuke4duke.internal.language.LanguageMixin languageMixin55 = javaLanguage27.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory56 = null;
        javaLanguage27.objectFactory = objectFactory56;
        java.lang.Class<?> wildcardClass58 = javaLanguage27.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        cuke4duke.internal.language.LanguageMixin languageMixin61 = null;
        javaLanguage0.languageMixin = languageMixin61;
        cuke4duke.internal.java.ObjectFactory objectFactory63 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.StepDefinition stepDefinition64 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory63);
    }

    @Test
    public void test1020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1020");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition43 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
    }

    @Test
    public void test1021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1021");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList26 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1022");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage0.languageMixin = languageMixin33;
        cuke4duke.internal.language.StepDefinition stepDefinition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1023");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1024");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        java.lang.Class<?> wildcardClass5 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1025");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1026");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test1027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1027");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
    }

    @Test
    public void test1028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1028");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1029");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage0.objectFactory = objectFactory25;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList28 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1030");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory63 = null;
        javaLanguage62.objectFactory = objectFactory63;
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass66 = javaLanguage65.getClass();
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass66);
        cuke4duke.internal.java.ObjectFactory objectFactory68 = javaLanguage62.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin69 = javaLanguage62.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage62.objectFactory = objectFactory70;
        cuke4duke.internal.java.JavaLanguage javaLanguage72 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage72.objectFactory = objectFactory73;
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass76 = javaLanguage75.getClass();
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass76);
        cuke4duke.internal.java.ObjectFactory objectFactory78 = javaLanguage72.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage79 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory80 = null;
        javaLanguage79.objectFactory = objectFactory80;
        cuke4duke.internal.java.JavaLanguage javaLanguage82 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass83 = javaLanguage82.getClass();
        javaLanguage79.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory88 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method89 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory88);
    }

    @Test
    public void test1031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1031");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.StepDefinition stepDefinition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1032");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method46 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
    }

    @Test
    public void test1033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1033");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass2 = objectFactory1.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
    }

    @Test
    public void test1034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1034");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1035");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test1036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1036");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage0.languageMixin = languageMixin33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage0.objectFactory = objectFactory35;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method38 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
    }

    @Test
    public void test1037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1037");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage0.objectFactory = objectFactory35;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1038");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage24.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = null;
        javaLanguage37.languageMixin = languageMixin38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage37.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage37.objectFactory;
        java.lang.Class<?> wildcardClass43 = javaLanguage37.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.java.ObjectFactory objectFactory46 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass47 = javaLanguage24.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1039");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
    }

    @Test
    public void test1040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1040");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage13.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin41 = javaLanguage18.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass43 = javaLanguage18.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1041");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
    }

    @Test
    public void test1042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1042");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test1043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1043");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage6.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass10 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage6.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage6.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage6.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage6.languageMixin;
        java.lang.Class<?> wildcardClass18 = javaLanguage6.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList21 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1044");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
    }

    @Test
    public void test1045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1045");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage0.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
    }

    @Test
    public void test1046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1046");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test1047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1047");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage25.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage25.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class40 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
    }

    @Test
    public void test1048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1048");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage11.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage11.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage16.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass20 = javaLanguage19.getClass();
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage16.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage16.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage16.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage26.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage26.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage16.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = javaLanguage16.languageMixin;
        java.lang.Class<?> wildcardClass41 = javaLanguage16.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        java.lang.reflect.Method method44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1049");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage7.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage7.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage7.languageMixin = languageMixin19;
        java.lang.Class<?> wildcardClass21 = javaLanguage7.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList24 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1050");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage0.languageMixin = languageMixin40;
        cuke4duke.internal.language.StepDefinition stepDefinition42 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
    }

    @Test
    public void test1051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1051");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage0.objectFactory = objectFactory11;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1052");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
    }

    @Test
    public void test1053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1053");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage19.languageMixin = languageMixin20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage19.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage19.languageMixin = languageMixin35;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass42 = javaLanguage41.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage38.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage38.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage38.objectFactory = objectFactory46;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage48.objectFactory = objectFactory49;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass52 = javaLanguage51.getClass();
        javaLanguage48.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = javaLanguage38.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory57 = null;
        javaLanguage56.objectFactory = objectFactory57;
        cuke4duke.internal.java.JavaLanguage javaLanguage59 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass60 = javaLanguage59.getClass();
        javaLanguage56.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage56.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin63 = javaLanguage56.languageMixin;
        java.lang.Class<?> wildcardClass64 = javaLanguage56.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass64);
        cuke4duke.internal.language.LanguageMixin languageMixin66 = javaLanguage38.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory67 = null;
        javaLanguage38.objectFactory = objectFactory67;
        cuke4duke.internal.java.ObjectFactory objectFactory69 = null;
        javaLanguage38.objectFactory = objectFactory69;
        java.lang.Class<?> wildcardClass71 = javaLanguage38.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1054");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin31 = null;
        javaLanguage30.languageMixin = languageMixin31;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage30.objectFactory = objectFactory33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage30.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin44 = null;
        javaLanguage43.languageMixin = languageMixin44;
        cuke4duke.internal.language.LanguageMixin languageMixin46 = null;
        javaLanguage43.languageMixin = languageMixin46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage43.objectFactory;
        java.lang.Class<?> wildcardClass49 = javaLanguage43.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = javaLanguage30.objectFactory;
        java.lang.Class<?> wildcardClass53 = javaLanguage30.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        java.lang.Class<?> wildcardClass55 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1055");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1056");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class32 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1057");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1058");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
    }

    @Test
    public void test1059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1059");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1060");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin43);
    }

    @Test
    public void test1061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1061");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = languageMixin18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test1062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1062");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1063");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1064");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage0.languageMixin = languageMixin33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage0.objectFactory = objectFactory35;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class39 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
    }

    @Test
    public void test1065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1065");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage17.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage17.languageMixin = languageMixin20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = null;
        javaLanguage22.languageMixin = languageMixin23;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage22.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage0.objectFactory = objectFactory36;
        cuke4duke.internal.language.StepDefinition stepDefinition38 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1066");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
    }

    @Test
    public void test1067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1067");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList28 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
    }

    @Test
    public void test1068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1068");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.ObjectFactory objectFactory64 = null;
        javaLanguage0.objectFactory = objectFactory64;
        cuke4duke.internal.java.ObjectFactory objectFactory66 = null;
        javaLanguage0.objectFactory = objectFactory66;
        java.lang.reflect.Method method68 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1069");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList20 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
    }

    @Test
    public void test1070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1070");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage4.languageMixin = languageMixin5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage4.languageMixin = languageMixin7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage9.languageMixin = languageMixin10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage9.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
    }

    @Test
    public void test1071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1071");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage0.languageMixin = languageMixin35;
        java.lang.reflect.Method method37 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1072");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage0.languageMixin = languageMixin47;
        cuke4duke.internal.language.LanguageMixin languageMixin49 = null;
        javaLanguage0.languageMixin = languageMixin49;
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage0.objectFactory = objectFactory51;
        cuke4duke.internal.java.ObjectFactory objectFactory53 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method54 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory53);
    }

    @Test
    public void test1073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1073");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage0.languageMixin = languageMixin33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage0.objectFactory = objectFactory35;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class38 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1074");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method30 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1075");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = languageMixin10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1076");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = null;
        javaLanguage0.objectFactory = objectFactory86;
        cuke4duke.internal.language.LanguageMixin languageMixin88 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList90 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin88);
    }

    @Test
    public void test1077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1077");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1078");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory27 = javaLanguage26.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage26.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage26.languageMixin = languageMixin29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage31.languageMixin = languageMixin35;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage31.objectFactory = objectFactory37;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage31.getClass();
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1079");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
    }

    @Test
    public void test1080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1080");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass19 = objectFactory18.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
    }

    @Test
    public void test1081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1081");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        java.lang.reflect.Method method42 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1082");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
    }

    @Test
    public void test1083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1083");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1084");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage0.languageMixin;
        java.lang.Class<?> wildcardClass22 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1085");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage0.languageMixin = languageMixin35;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1086");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage18.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage28.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass32 = javaLanguage31.getClass();
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage37.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = javaLanguage37.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage37.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage47.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass51 = javaLanguage50.getClass();
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        cuke4duke.internal.java.ObjectFactory objectFactory54 = javaLanguage37.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory56 = null;
        javaLanguage55.objectFactory = objectFactory56;
        cuke4duke.internal.java.JavaLanguage javaLanguage58 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass59 = javaLanguage58.getClass();
        javaLanguage55.registerStepDefinitionsFor((java.lang.Class) wildcardClass59);
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage55.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin62 = javaLanguage55.languageMixin;
        java.lang.Class<?> wildcardClass63 = javaLanguage55.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.language.LanguageMixin languageMixin65 = javaLanguage37.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory66 = javaLanguage37.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin67 = null;
        javaLanguage37.languageMixin = languageMixin67;
        java.lang.Class<?> wildcardClass69 = javaLanguage37.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class72 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1087");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage8.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage8.objectFactory;
        java.lang.Class<?> wildcardClass15 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1088");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage0.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage28.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass32 = javaLanguage31.getClass();
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1089");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1090");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage0.languageMixin = languageMixin15;
        cuke4duke.internal.language.StepDefinition stepDefinition17 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
    }

    @Test
    public void test1091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1091");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class13 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test1092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1092");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1093");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test1094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1094");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory7);
    }

    @Test
    public void test1095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1095");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        java.lang.Class<?> wildcardClass35 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1096");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1097");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage19.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage19.languageMixin = languageMixin22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage19.objectFactory;
        java.lang.Class<?> wildcardClass26 = javaLanguage19.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class29 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1098");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage0.objectFactory = objectFactory25;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class28 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
    }

    @Test
    public void test1099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1099");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class20 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
    }

    @Test
    public void test1100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1100");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList23 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1101");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class32 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
    }

    @Test
    public void test1102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1102");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage0.languageMixin = languageMixin14;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1103");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
    }

    @Test
    public void test1104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1104");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage14.languageMixin = languageMixin15;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage14.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage4.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1105");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage33.languageMixin = languageMixin34;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage33.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage33.objectFactory;
        java.lang.Class<?> wildcardClass39 = javaLanguage33.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin44);
    }

    @Test
    public void test1106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1106");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin21 = null;
        javaLanguage20.languageMixin = languageMixin21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage20.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage25.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage20.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage34.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass38 = javaLanguage37.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage34.languageMixin = languageMixin40;
        cuke4duke.internal.language.LanguageMixin languageMixin42 = null;
        javaLanguage34.languageMixin = languageMixin42;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage44.languageMixin = languageMixin45;
        cuke4duke.internal.java.ObjectFactory objectFactory47 = null;
        javaLanguage44.objectFactory = objectFactory47;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage49.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass53 = javaLanguage52.getClass();
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        cuke4duke.internal.java.ObjectFactory objectFactory56 = javaLanguage44.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass58 = javaLanguage57.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage61.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass65 = javaLanguage64.getClass();
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        cuke4duke.internal.language.LanguageMixin languageMixin67 = null;
        javaLanguage61.languageMixin = languageMixin67;
        java.lang.Class<?> wildcardClass69 = javaLanguage61.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        java.lang.reflect.Method method73 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1107");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test1108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1108");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
    }

    @Test
    public void test1109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1109");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage38.objectFactory = objectFactory41;
        java.lang.Class<?> wildcardClass43 = javaLanguage38.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList46 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1110");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test1111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1111");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        java.lang.reflect.Method method6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1112");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory63 = null;
        javaLanguage62.objectFactory = objectFactory63;
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass66 = javaLanguage65.getClass();
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass66);
        cuke4duke.internal.java.ObjectFactory objectFactory68 = javaLanguage62.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin69 = javaLanguage62.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage62.objectFactory = objectFactory70;
        cuke4duke.internal.java.JavaLanguage javaLanguage72 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage72.objectFactory = objectFactory73;
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass76 = javaLanguage75.getClass();
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass76);
        cuke4duke.internal.java.ObjectFactory objectFactory78 = javaLanguage72.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage79 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory80 = null;
        javaLanguage79.objectFactory = objectFactory80;
        cuke4duke.internal.java.JavaLanguage javaLanguage82 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass83 = javaLanguage82.getClass();
        javaLanguage79.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory88 = null;
        javaLanguage0.objectFactory = objectFactory88;
        java.lang.reflect.Method method90 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1113");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
    }

    @Test
    public void test1114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1114");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = null;
        javaLanguage0.languageMixin = languageMixin31;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage34.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass38 = javaLanguage37.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage34.objectFactory = objectFactory40;
        java.lang.Class<?> wildcardClass42 = javaLanguage34.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.language.StepDefinition stepDefinition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1115");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        java.lang.Class<?> wildcardClass6 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1116");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1117");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test1118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1118");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.ObjectFactory objectFactory64 = null;
        javaLanguage0.objectFactory = objectFactory64;
        cuke4duke.internal.java.ObjectFactory objectFactory66 = null;
        javaLanguage0.objectFactory = objectFactory66;
        cuke4duke.internal.language.LanguageMixin languageMixin68 = null;
        javaLanguage0.languageMixin = languageMixin68;
        java.lang.reflect.Method method70 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1119");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage0.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage28.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage31.objectFactory = objectFactory36;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass42 = javaLanguage41.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage44.languageMixin = languageMixin45;
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage44.languageMixin = languageMixin47;
        cuke4duke.internal.java.ObjectFactory objectFactory49 = javaLanguage44.objectFactory;
        java.lang.Class<?> wildcardClass50 = javaLanguage44.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.language.LanguageMixin languageMixin55 = null;
        javaLanguage0.languageMixin = languageMixin55;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class58 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1120");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1121");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage40.languageMixin = languageMixin41;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage40.objectFactory = objectFactory43;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage40.objectFactory = objectFactory45;
        java.lang.Class<?> wildcardClass47 = javaLanguage40.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.language.LanguageMixin languageMixin49 = null;
        javaLanguage0.languageMixin = languageMixin49;
        java.lang.reflect.Method method51 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1122");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = languageMixin10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1123");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1124");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
    }

    @Test
    public void test1125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1125");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1126");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method43 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
    }

    @Test
    public void test1127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1127");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
    }

    @Test
    public void test1128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1128");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test1129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1129");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1130");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
    }

    @Test
    public void test1131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1131");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        java.lang.Class<?> wildcardClass9 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1132");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1133");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage8.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage8.objectFactory;
        java.lang.Class<?> wildcardClass15 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test1134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1134");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin21 = null;
        javaLanguage0.languageMixin = languageMixin21;
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1135");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class19 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1136");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage4.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage22.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass26 = javaLanguage25.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage22.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage22.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage22.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage4.languageMixin = languageMixin32;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage35.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage35.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage40.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass44 = javaLanguage43.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage35.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage0.objectFactory = objectFactory49;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage51.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass55 = javaLanguage54.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.ObjectFactory objectFactory57 = javaLanguage51.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin58 = javaLanguage51.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage51.objectFactory = objectFactory59;
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage61.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass65 = javaLanguage64.getClass();
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        cuke4duke.internal.java.JavaLanguage javaLanguage68 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin69 = null;
        javaLanguage68.languageMixin = languageMixin69;
        cuke4duke.internal.language.LanguageMixin languageMixin71 = null;
        javaLanguage68.languageMixin = languageMixin71;
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin74 = null;
        javaLanguage73.languageMixin = languageMixin74;
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage73.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.JavaLanguage javaLanguage81 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass82 = javaLanguage81.getClass();
        javaLanguage78.registerStepDefinitionsFor((java.lang.Class) wildcardClass82);
        javaLanguage73.registerStepDefinitionsFor((java.lang.Class) wildcardClass82);
        javaLanguage68.registerStepDefinitionsFor((java.lang.Class) wildcardClass82);
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass82);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1137");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.ObjectFactory objectFactory39 = javaLanguage33.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = javaLanguage33.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage33.objectFactory = objectFactory41;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = javaLanguage33.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = null;
        javaLanguage33.languageMixin = languageMixin44;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = javaLanguage33.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory47 = null;
        javaLanguage33.objectFactory = objectFactory47;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage49.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass53 = javaLanguage52.getClass();
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = javaLanguage49.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin56 = javaLanguage49.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory57 = null;
        javaLanguage49.objectFactory = objectFactory57;
        cuke4duke.internal.java.JavaLanguage javaLanguage59 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin60 = null;
        javaLanguage59.languageMixin = languageMixin60;
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage59.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass68 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass68);
        javaLanguage59.registerStepDefinitionsFor((java.lang.Class) wildcardClass68);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass68);
        cuke4duke.internal.language.LanguageMixin languageMixin72 = javaLanguage49.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage49.objectFactory = objectFactory73;
        cuke4duke.internal.java.ObjectFactory objectFactory75 = javaLanguage49.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage76 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory77 = null;
        javaLanguage76.objectFactory = objectFactory77;
        cuke4duke.internal.java.JavaLanguage javaLanguage79 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass80 = javaLanguage79.getClass();
        javaLanguage76.registerStepDefinitionsFor((java.lang.Class) wildcardClass80);
        cuke4duke.internal.java.JavaLanguage javaLanguage82 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin83 = null;
        javaLanguage82.languageMixin = languageMixin83;
        cuke4duke.internal.language.LanguageMixin languageMixin85 = null;
        javaLanguage82.languageMixin = languageMixin85;
        cuke4duke.internal.java.ObjectFactory objectFactory87 = javaLanguage82.objectFactory;
        java.lang.Class<?> wildcardClass88 = javaLanguage82.getClass();
        javaLanguage76.registerStepDefinitionsFor((java.lang.Class) wildcardClass88);
        java.lang.Class<?> wildcardClass90 = javaLanguage76.getClass();
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        java.lang.Class<?> wildcardClass94 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1138");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
    }

    @Test
    public void test1139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1139");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1140");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList38 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
    }

    @Test
    public void test1141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1141");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1142");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1143");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin21 = null;
        javaLanguage0.languageMixin = languageMixin21;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1144");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage11.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass15 = javaLanguage14.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass18 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class23 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1145");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
    }

    @Test
    public void test1146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1146");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
    }

    @Test
    public void test1147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1147");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList22 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
    }

    @Test
    public void test1148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1148");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage23.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin37 = null;
        javaLanguage36.languageMixin = languageMixin37;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage36.languageMixin = languageMixin39;
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage36.objectFactory;
        java.lang.Class<?> wildcardClass42 = javaLanguage36.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        java.lang.reflect.Method method47 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1149");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1150");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1151");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1152");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = null;
        javaLanguage0.languageMixin = languageMixin31;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage34.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass38 = javaLanguage37.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage34.objectFactory = objectFactory40;
        java.lang.Class<?> wildcardClass42 = javaLanguage34.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        java.lang.reflect.Method method44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1153");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        java.lang.reflect.Method method8 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
    }

    @Test
    public void test1154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1154");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage20.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage20.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage20.languageMixin;
        java.lang.Class<?> wildcardClass32 = javaLanguage20.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        java.lang.reflect.Method method34 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1155");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage7.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage7.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage7.languageMixin = languageMixin19;
        java.lang.Class<?> wildcardClass21 = javaLanguage7.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1156");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1157");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList5 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
    }

    @Test
    public void test1158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1158");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage0.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
    }

    @Test
    public void test1159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1159");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test1160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1160");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method35 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1161");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage10.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage10.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage10.objectFactory = objectFactory16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage10.objectFactory = objectFactory18;
        java.lang.Class<?> wildcardClass20 = javaLanguage10.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class23 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1162");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
    }

    @Test
    public void test1163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1163");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList6 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1164");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin6);
    }

    @Test
    public void test1165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1165");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
    }

    @Test
    public void test1166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1166");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
    }

    @Test
    public void test1167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1167");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage21.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass25 = javaLanguage24.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage21.languageMixin = languageMixin27;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage21.languageMixin = languageMixin29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage31.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass45 = javaLanguage44.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage48.objectFactory = objectFactory49;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass52 = javaLanguage51.getClass();
        javaLanguage48.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.language.LanguageMixin languageMixin54 = null;
        javaLanguage48.languageMixin = languageMixin54;
        java.lang.Class<?> wildcardClass56 = javaLanguage48.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = javaLanguage21.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1168");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1169");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1170");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage0.languageMixin = languageMixin33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage0.objectFactory = objectFactory35;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1171");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test1172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1172");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        java.lang.Class<?> wildcardClass75 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1173");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
    }

    @Test
    public void test1174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1174");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        java.lang.Class<?> wildcardClass24 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1175");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage30.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage0.languageMixin = languageMixin45;
        java.lang.Class<?> wildcardClass47 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1176");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage22.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass26 = javaLanguage25.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage22.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage22.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage22.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage32.languageMixin = languageMixin33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage32.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage22.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage22.objectFactory = objectFactory46;
        java.lang.Class<?> wildcardClass48 = javaLanguage22.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        java.lang.reflect.Method method50 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1177");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage26.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage26.objectFactory = objectFactory29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage26.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage39.languageMixin = languageMixin40;
        cuke4duke.internal.language.LanguageMixin languageMixin42 = null;
        javaLanguage39.languageMixin = languageMixin42;
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage39.objectFactory;
        java.lang.Class<?> wildcardClass45 = javaLanguage39.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin49 = javaLanguage23.languageMixin;
        java.lang.Class<?> wildcardClass50 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class53 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1178");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.language.StepDefinition stepDefinition19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
    }

    @Test
    public void test1179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1179");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        java.lang.reflect.Method method25 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1180");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
    }

    @Test
    public void test1181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1181");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1182");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage36.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1183");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1184");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
    }

    @Test
    public void test1185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1185");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1186");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage0.objectFactory = objectFactory15;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test1187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1187");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
    }

    @Test
    public void test1188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1188");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory33);
    }

    @Test
    public void test1189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1189");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage30.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage30.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage30.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage40.languageMixin = languageMixin41;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage40.objectFactory = objectFactory43;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage45.objectFactory = objectFactory46;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass49 = javaLanguage48.getClass();
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.language.LanguageMixin languageMixin53 = javaLanguage30.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = null;
        javaLanguage30.objectFactory = objectFactory54;
        cuke4duke.internal.language.LanguageMixin languageMixin56 = null;
        javaLanguage30.languageMixin = languageMixin56;
        cuke4duke.internal.language.LanguageMixin languageMixin58 = null;
        javaLanguage30.languageMixin = languageMixin58;
        cuke4duke.internal.language.LanguageMixin languageMixin60 = null;
        javaLanguage30.languageMixin = languageMixin60;
        java.lang.Class<?> wildcardClass62 = javaLanguage30.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        java.lang.reflect.Method method64 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1190");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1191");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage0.objectFactory = objectFactory45;
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage0.languageMixin = languageMixin48;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class51 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
    }

    @Test
    public void test1192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1192");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin46 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method47 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin46);
    }

    @Test
    public void test1193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1193");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        cuke4duke.internal.language.StepDefinition stepDefinition35 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1194");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage26.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage26.objectFactory = objectFactory29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage26.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage39.languageMixin = languageMixin40;
        cuke4duke.internal.language.LanguageMixin languageMixin42 = null;
        javaLanguage39.languageMixin = languageMixin42;
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage39.objectFactory;
        java.lang.Class<?> wildcardClass45 = javaLanguage39.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin49 = javaLanguage23.languageMixin;
        java.lang.Class<?> wildcardClass50 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1195");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage29.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage29.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage34.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass38 = javaLanguage37.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        cuke4duke.internal.java.ObjectFactory objectFactory40 = javaLanguage34.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage41.objectFactory = objectFactory42;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass45 = javaLanguage44.getClass();
        javaLanguage41.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage51.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass55 = javaLanguage54.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.ObjectFactory objectFactory57 = javaLanguage51.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin58 = javaLanguage51.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage51.objectFactory = objectFactory59;
        cuke4duke.internal.language.LanguageMixin languageMixin61 = javaLanguage51.languageMixin;
        java.lang.Class<?> wildcardClass62 = javaLanguage51.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        java.lang.reflect.Method method64 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1196");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
    }

    @Test
    public void test1197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1197");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
    }

    @Test
    public void test1198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1198");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage25.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage25.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage0.objectFactory;
        java.lang.Class<?> wildcardClass39 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1199");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage19.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage19.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage19.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage37.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = javaLanguage37.languageMixin;
        java.lang.Class<?> wildcardClass45 = javaLanguage37.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage19.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage19.objectFactory = objectFactory48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage19.objectFactory = objectFactory50;
        java.lang.Class<?> wildcardClass52 = javaLanguage19.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.java.ObjectFactory objectFactory54 = null;
        javaLanguage0.objectFactory = objectFactory54;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList57 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1200");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage26.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage26.objectFactory = objectFactory29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage26.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage39.languageMixin = languageMixin40;
        cuke4duke.internal.language.LanguageMixin languageMixin42 = null;
        javaLanguage39.languageMixin = languageMixin42;
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage39.objectFactory;
        java.lang.Class<?> wildcardClass45 = javaLanguage39.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin49 = javaLanguage23.languageMixin;
        java.lang.Class<?> wildcardClass50 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        java.lang.reflect.Method method52 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1201");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.language.LanguageMixin languageMixin64 = javaLanguage0.languageMixin;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin64);
    }

    @Test
    public void test1202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1202");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin46 = null;
        javaLanguage45.languageMixin = languageMixin46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage45.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage50.objectFactory = objectFactory51;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass54 = javaLanguage53.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage45.languageMixin = languageMixin57;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage45.objectFactory = objectFactory59;
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage45.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage45.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage63 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin64 = null;
        javaLanguage63.languageMixin = languageMixin64;
        cuke4duke.internal.java.ObjectFactory objectFactory66 = javaLanguage63.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory67 = javaLanguage63.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage68 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin69 = null;
        javaLanguage68.languageMixin = languageMixin69;
        cuke4duke.internal.java.ObjectFactory objectFactory71 = null;
        javaLanguage68.objectFactory = objectFactory71;
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory74 = null;
        javaLanguage73.objectFactory = objectFactory74;
        cuke4duke.internal.java.JavaLanguage javaLanguage76 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass77 = javaLanguage76.getClass();
        javaLanguage73.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage68.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage63.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1203");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage11.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass15 = javaLanguage14.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass18 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1204");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
    }

    @Test
    public void test1205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1205");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage40.languageMixin = languageMixin41;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage40.objectFactory = objectFactory43;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage40.objectFactory = objectFactory45;
        java.lang.Class<?> wildcardClass47 = javaLanguage40.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.language.LanguageMixin languageMixin49 = null;
        javaLanguage0.languageMixin = languageMixin49;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList52 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1206");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1207");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
    }

    @Test
    public void test1208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1208");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin43);
    }

    @Test
    public void test1209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1209");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1210");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
    }

    @Test
    public void test1211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1211");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1212");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
    }

    @Test
    public void test1213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1213");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method31 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
    }

    @Test
    public void test1214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1214");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1215");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage0.objectFactory = objectFactory44;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
    }

    @Test
    public void test1216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1216");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage11.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage11.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage16.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass20 = javaLanguage19.getClass();
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage11.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage24.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage24.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage34.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass38 = javaLanguage37.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage24.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage42.objectFactory = objectFactory43;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass46 = javaLanguage45.getClass();
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage42.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin49 = javaLanguage42.languageMixin;
        java.lang.Class<?> wildcardClass50 = javaLanguage42.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin54 = null;
        javaLanguage53.languageMixin = languageMixin54;
        cuke4duke.internal.language.LanguageMixin languageMixin56 = null;
        javaLanguage53.languageMixin = languageMixin56;
        cuke4duke.internal.java.JavaLanguage javaLanguage58 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin59 = null;
        javaLanguage58.languageMixin = languageMixin59;
        cuke4duke.internal.java.ObjectFactory objectFactory61 = null;
        javaLanguage58.objectFactory = objectFactory61;
        cuke4duke.internal.java.JavaLanguage javaLanguage63 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory64 = null;
        javaLanguage63.objectFactory = objectFactory64;
        cuke4duke.internal.java.JavaLanguage javaLanguage66 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass67 = javaLanguage66.getClass();
        javaLanguage63.registerStepDefinitionsFor((java.lang.Class) wildcardClass67);
        javaLanguage58.registerStepDefinitionsFor((java.lang.Class) wildcardClass67);
        javaLanguage53.registerStepDefinitionsFor((java.lang.Class) wildcardClass67);
        java.lang.Class<?> wildcardClass71 = javaLanguage53.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage11.objectFactory = objectFactory73;
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.JavaLanguage javaLanguage86 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory87 = null;
        javaLanguage86.objectFactory = objectFactory87;
        cuke4duke.internal.java.JavaLanguage javaLanguage89 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory90 = null;
        javaLanguage89.objectFactory = objectFactory90;
        cuke4duke.internal.java.ObjectFactory objectFactory92 = null;
        javaLanguage89.objectFactory = objectFactory92;
        java.lang.Class<?> wildcardClass94 = javaLanguage89.getClass();
        javaLanguage86.registerStepDefinitionsFor((java.lang.Class) wildcardClass94);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass94);
        java.lang.Class<?> wildcardClass97 = javaLanguage11.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1217");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage0.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage28.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass32 = javaLanguage31.getClass();
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class42 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1218");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
    }

    @Test
    public void test1219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1219");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        java.lang.reflect.Method method22 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1220");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList28 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
    }

    @Test
    public void test1221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1221");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList22 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test1222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1222");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList32 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
    }

    @Test
    public void test1223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1223");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage0.objectFactory = objectFactory42;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList46 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin44);
    }

    @Test
    public void test1224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1224");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage21.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass25 = javaLanguage24.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage21.languageMixin = languageMixin27;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage21.languageMixin = languageMixin29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage31.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass45 = javaLanguage44.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage48.objectFactory = objectFactory49;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass52 = javaLanguage51.getClass();
        javaLanguage48.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.language.LanguageMixin languageMixin54 = null;
        javaLanguage48.languageMixin = languageMixin54;
        java.lang.Class<?> wildcardClass56 = javaLanguage48.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList60 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1225");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
    }

    @Test
    public void test1226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1226");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass30 = objectFactory29.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1227");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage0.languageMixin = languageMixin24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList31 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
    }

    @Test
    public void test1228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1228");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage9.languageMixin = languageMixin10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage9.objectFactory = objectFactory12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage9.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage16.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass20 = javaLanguage19.getClass();
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = null;
        javaLanguage22.languageMixin = languageMixin23;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage22.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = javaLanguage22.objectFactory;
        java.lang.Class<?> wildcardClass28 = javaLanguage22.getClass();
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage9.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage33.languageMixin = languageMixin34;
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage33.objectFactory = objectFactory36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage33.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage40.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass44 = javaLanguage43.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage46.languageMixin = languageMixin47;
        cuke4duke.internal.language.LanguageMixin languageMixin49 = null;
        javaLanguage46.languageMixin = languageMixin49;
        cuke4duke.internal.java.ObjectFactory objectFactory51 = javaLanguage46.objectFactory;
        java.lang.Class<?> wildcardClass52 = javaLanguage46.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = javaLanguage33.objectFactory;
        java.lang.Class<?> wildcardClass56 = javaLanguage33.getClass();
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        cuke4duke.internal.language.StepDefinition stepDefinition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1229");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition25 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
    }

    @Test
    public void test1230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1230");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method5 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test1231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1231");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        java.lang.reflect.Method method29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1232");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList27 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
    }

    @Test
    public void test1233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1233");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test1234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1234");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
    }

    @Test
    public void test1235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1235");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        java.lang.Class<?> wildcardClass23 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1236");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test1237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1237");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage0.objectFactory = objectFactory15;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
    }

    @Test
    public void test1238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1238");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage31.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage44.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass48 = javaLanguage47.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        cuke4duke.internal.java.ObjectFactory objectFactory50 = javaLanguage44.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin51 = javaLanguage44.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage44.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage54.objectFactory = objectFactory55;
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass58 = javaLanguage57.getClass();
        javaLanguage54.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage44.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory63 = null;
        javaLanguage62.objectFactory = objectFactory63;
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass66 = javaLanguage65.getClass();
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass66);
        cuke4duke.internal.java.ObjectFactory objectFactory68 = javaLanguage62.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin69 = javaLanguage62.languageMixin;
        java.lang.Class<?> wildcardClass70 = javaLanguage62.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass70);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass70);
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin74 = null;
        javaLanguage73.languageMixin = languageMixin74;
        cuke4duke.internal.language.LanguageMixin languageMixin76 = null;
        javaLanguage73.languageMixin = languageMixin76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin79 = null;
        javaLanguage78.languageMixin = languageMixin79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        cuke4duke.internal.java.JavaLanguage javaLanguage83 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory84 = null;
        javaLanguage83.objectFactory = objectFactory84;
        cuke4duke.internal.java.JavaLanguage javaLanguage86 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass87 = javaLanguage86.getClass();
        javaLanguage83.registerStepDefinitionsFor((java.lang.Class) wildcardClass87);
        javaLanguage78.registerStepDefinitionsFor((java.lang.Class) wildcardClass87);
        javaLanguage73.registerStepDefinitionsFor((java.lang.Class) wildcardClass87);
        java.lang.Class<?> wildcardClass91 = javaLanguage73.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass91);
        cuke4duke.internal.java.ObjectFactory objectFactory93 = null;
        javaLanguage31.objectFactory = objectFactory93;
        java.lang.Class<?> wildcardClass95 = javaLanguage31.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass95);
        cuke4duke.internal.language.LanguageMixin languageMixin97 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition98 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin97);
    }

    @Test
    public void test1239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1239");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1240");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class41 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
    }

    @Test
    public void test1241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1241");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage0.languageMixin = languageMixin19;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList22 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1242");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage0.languageMixin = languageMixin7;
        cuke4duke.internal.language.StepDefinition stepDefinition9 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
    }

    @Test
    public void test1243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1243");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1244");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class49 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
    }

    @Test
    public void test1245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1245");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory7);
    }

    @Test
    public void test1246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1246");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage0.objectFactory = objectFactory26;
        java.lang.reflect.Method method28 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1247");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
    }

    @Test
    public void test1248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1248");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = null;
        javaLanguage12.languageMixin = languageMixin13;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage12.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage12.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage25.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage25.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage25.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage25.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage35.objectFactory = objectFactory36;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass39 = javaLanguage38.getClass();
        javaLanguage35.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage25.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.java.ObjectFactory objectFactory49 = javaLanguage43.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin50 = javaLanguage43.languageMixin;
        java.lang.Class<?> wildcardClass51 = javaLanguage43.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage0.objectFactory = objectFactory55;
        java.lang.reflect.Method method57 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1249");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage14.languageMixin = languageMixin15;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage14.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage4.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage0.objectFactory = objectFactory35;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1250");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage24.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = null;
        javaLanguage37.languageMixin = languageMixin38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage37.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage37.objectFactory;
        java.lang.Class<?> wildcardClass43 = javaLanguage37.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage24.objectFactory = objectFactory46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage24.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin50 = null;
        javaLanguage49.languageMixin = languageMixin50;
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage49.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage54.objectFactory = objectFactory55;
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass58 = javaLanguage57.getClass();
        javaLanguage54.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage49.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass63 = javaLanguage62.getClass();
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.language.LanguageMixin languageMixin65 = null;
        javaLanguage49.languageMixin = languageMixin65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.JavaLanguage javaLanguage70 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass71 = javaLanguage70.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin74 = null;
        javaLanguage73.languageMixin = languageMixin74;
        cuke4duke.internal.language.LanguageMixin languageMixin76 = null;
        javaLanguage73.languageMixin = languageMixin76;
        cuke4duke.internal.java.ObjectFactory objectFactory78 = javaLanguage73.objectFactory;
        java.lang.Class<?> wildcardClass79 = javaLanguage73.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        java.lang.Class<?> wildcardClass84 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1251");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage0.languageMixin = languageMixin47;
        cuke4duke.internal.language.LanguageMixin languageMixin49 = null;
        javaLanguage0.languageMixin = languageMixin49;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList52 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1252");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage36.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        java.lang.reflect.Method method52 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1253");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage14.languageMixin = languageMixin15;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage14.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage4.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage0.languageMixin = languageMixin32;
        java.lang.reflect.Method method34 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1254");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage0.languageMixin = languageMixin14;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
    }

    @Test
    public void test1255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1255");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage0.languageMixin = languageMixin47;
        cuke4duke.internal.language.LanguageMixin languageMixin49 = null;
        javaLanguage0.languageMixin = languageMixin49;
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage0.objectFactory = objectFactory51;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class54 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1256");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage6.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass10 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage6.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage6.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage6.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage6.languageMixin;
        java.lang.Class<?> wildcardClass18 = javaLanguage6.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList23 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1257");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage26.languageMixin = languageMixin27;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage26.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage26.objectFactory;
        java.lang.Class<?> wildcardClass32 = javaLanguage26.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        java.lang.reflect.Method method36 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1258");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin21 = null;
        javaLanguage20.languageMixin = languageMixin21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage20.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage25.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.ObjectFactory objectFactory39 = javaLanguage33.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = javaLanguage33.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage33.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.java.ObjectFactory objectFactory50 = javaLanguage33.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage51.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass55 = javaLanguage54.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.ObjectFactory objectFactory57 = javaLanguage51.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin58 = javaLanguage51.languageMixin;
        java.lang.Class<?> wildcardClass59 = javaLanguage51.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass59);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass59);
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin63 = null;
        javaLanguage62.languageMixin = languageMixin63;
        cuke4duke.internal.language.LanguageMixin languageMixin65 = null;
        javaLanguage62.languageMixin = languageMixin65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin68 = null;
        javaLanguage67.languageMixin = languageMixin68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        cuke4duke.internal.java.JavaLanguage javaLanguage72 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage72.objectFactory = objectFactory73;
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass76 = javaLanguage75.getClass();
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass76);
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass76);
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass76);
        java.lang.Class<?> wildcardClass80 = javaLanguage62.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass80);
        cuke4duke.internal.java.ObjectFactory objectFactory82 = null;
        javaLanguage20.objectFactory = objectFactory82;
        cuke4duke.internal.java.JavaLanguage javaLanguage84 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory85 = null;
        javaLanguage84.objectFactory = objectFactory85;
        cuke4duke.internal.java.JavaLanguage javaLanguage87 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory88 = null;
        javaLanguage87.objectFactory = objectFactory88;
        cuke4duke.internal.java.ObjectFactory objectFactory90 = null;
        javaLanguage87.objectFactory = objectFactory90;
        java.lang.Class<?> wildcardClass92 = javaLanguage87.getClass();
        javaLanguage84.registerStepDefinitionsFor((java.lang.Class) wildcardClass92);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass92);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1259");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1260");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage5.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage5.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage15.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage15.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage5.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage5.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage5.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition34 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin33);
    }

    @Test
    public void test1261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1261");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class29 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
    }

    @Test
    public void test1262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1262");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        java.lang.Class<?> wildcardClass28 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1263");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1264");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage20.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage20.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage20.languageMixin;
        java.lang.Class<?> wildcardClass32 = javaLanguage20.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass35 = languageMixin34.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
    }

    @Test
    public void test1265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1265");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage20.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage20.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage20.languageMixin;
        java.lang.Class<?> wildcardClass32 = javaLanguage20.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage0.languageMixin = languageMixin34;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1266");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList24 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
    }

    @Test
    public void test1267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1267");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class38 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1268");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage0.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList15 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
    }

    @Test
    public void test1269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1269");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin46 = null;
        javaLanguage0.languageMixin = languageMixin46;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
    }

    @Test
    public void test1270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1270");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage0.languageMixin = languageMixin14;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test1271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1271");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage0.languageMixin = languageMixin7;
        java.lang.Class<?> wildcardClass9 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1272");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage7.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage7.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage20.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage20.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage20.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass42 = javaLanguage41.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage38.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage38.languageMixin;
        java.lang.Class<?> wildcardClass46 = javaLanguage38.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        java.lang.reflect.Method method50 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1273");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        java.lang.reflect.Method method35 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1274");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage0.languageMixin = languageMixin15;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage0.languageMixin = languageMixin17;
        java.lang.reflect.Method method19 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
    }

    @Test
    public void test1275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1275");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage0.languageMixin = languageMixin35;
        java.lang.reflect.Method method37 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1276");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage28.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass32 = javaLanguage31.getClass();
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage13.objectFactory = objectFactory37;
        java.lang.Class<?> wildcardClass39 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage0.languageMixin = languageMixin41;
        java.lang.reflect.Method method43 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1277");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        java.lang.Class<?> wildcardClass24 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1278");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        java.lang.reflect.Method method24 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1279");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage0.objectFactory = objectFactory31;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class34 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1280");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage0.objectFactory = objectFactory15;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList19 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test1281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1281");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test1282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1282");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage0.objectFactory = objectFactory22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage25.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage25.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage25.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass39 = javaLanguage38.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage25.languageMixin = languageMixin41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin50 = null;
        javaLanguage49.languageMixin = languageMixin50;
        cuke4duke.internal.language.LanguageMixin languageMixin52 = null;
        javaLanguage49.languageMixin = languageMixin52;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = javaLanguage49.objectFactory;
        java.lang.Class<?> wildcardClass55 = javaLanguage49.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        java.lang.Class<?> wildcardClass59 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1283");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage0.objectFactory = objectFactory75;
        cuke4duke.internal.language.LanguageMixin languageMixin77 = null;
        javaLanguage0.languageMixin = languageMixin77;
        cuke4duke.internal.java.ObjectFactory objectFactory79 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass80 = objectFactory79.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory79);
    }

    @Test
    public void test1284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1284");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
    }

    @Test
    public void test1285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1285");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test1286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1286");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1287");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
    }

    @Test
    public void test1288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1288");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage0.objectFactory = objectFactory46;
        cuke4duke.internal.language.StepDefinition stepDefinition48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
    }

    @Test
    public void test1289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1289");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1290");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        java.lang.Class<?> wildcardClass7 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1291");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1292");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage0.languageMixin = languageMixin47;
        java.lang.reflect.Method method49 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1293");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.java.JavaLanguage javaLanguage11 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage11.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass15 = javaLanguage14.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage11.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage11.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage11.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage21.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass25 = javaLanguage24.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage11.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage29.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage29.languageMixin;
        java.lang.Class<?> wildcardClass37 = javaLanguage29.getClass();
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage11.languageMixin = languageMixin39;
        cuke4duke.internal.language.LanguageMixin languageMixin41 = javaLanguage11.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage42.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage47.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass51 = javaLanguage50.getClass();
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage11.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        java.lang.Class<?> wildcardClass55 = javaLanguage11.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage0.languageMixin = languageMixin57;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = javaLanguage0.objectFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory59);
    }

    @Test
    public void test1294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1294");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        java.lang.Class class31 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionsFor(class31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
    }

    @Test
    public void test1295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1295");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class8 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1296");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage8.languageMixin = languageMixin20;
        java.lang.Class<?> wildcardClass22 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1297");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
    }

    @Test
    public void test1298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1298");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage8.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage8.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage8.objectFactory;
        java.lang.Class<?> wildcardClass15 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class19 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test1299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1299");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test1300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1300");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList11 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test1301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1301");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class11 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1302");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList20 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
    }

    @Test
    public void test1303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1303");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage30.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1304");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList22 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
    }

    @Test
    public void test1305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1305");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        java.lang.reflect.Method method7 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1306");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin46 = null;
        javaLanguage45.languageMixin = languageMixin46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage45.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage50.objectFactory = objectFactory51;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass54 = javaLanguage53.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage45.languageMixin = languageMixin57;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage45.objectFactory = objectFactory59;
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage45.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage45.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage63 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin64 = null;
        javaLanguage63.languageMixin = languageMixin64;
        cuke4duke.internal.java.ObjectFactory objectFactory66 = javaLanguage63.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory67 = javaLanguage63.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage68 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin69 = null;
        javaLanguage68.languageMixin = languageMixin69;
        cuke4duke.internal.java.ObjectFactory objectFactory71 = null;
        javaLanguage68.objectFactory = objectFactory71;
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory74 = null;
        javaLanguage73.objectFactory = objectFactory74;
        cuke4duke.internal.java.JavaLanguage javaLanguage76 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass77 = javaLanguage76.getClass();
        javaLanguage73.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage68.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage63.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass77);
        java.lang.reflect.Method method83 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1307");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = null;
        javaLanguage3.objectFactory = objectFactory4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        java.lang.Class<?> wildcardClass8 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage0.languageMixin = languageMixin10;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1308");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList24 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
    }

    @Test
    public void test1309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1309");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test1310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1310");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage19.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage19.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage19.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage37.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = javaLanguage37.languageMixin;
        java.lang.Class<?> wildcardClass45 = javaLanguage37.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage19.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage19.objectFactory = objectFactory48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage19.objectFactory = objectFactory50;
        java.lang.Class<?> wildcardClass52 = javaLanguage19.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.java.ObjectFactory objectFactory54 = null;
        javaLanguage0.objectFactory = objectFactory54;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1311");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage0.languageMixin = languageMixin10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList21 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1312");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
    }

    @Test
    public void test1313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1313");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
    }

    @Test
    public void test1314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1314");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory9 = null;
        javaLanguage8.objectFactory = objectFactory9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage13.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage25.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        java.lang.Class<?> wildcardClass34 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        java.lang.Class<?> wildcardClass36 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1315");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage33.languageMixin = languageMixin34;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage33.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage33.objectFactory;
        java.lang.Class<?> wildcardClass39 = javaLanguage33.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1316");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
    }

    @Test
    public void test1317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1317");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
    }

    @Test
    public void test1318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1318");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1319");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class14 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
    }

    @Test
    public void test1320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1320");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1321");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage0.objectFactory = objectFactory42;
        cuke4duke.internal.language.StepDefinition stepDefinition44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1322");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
    }

    @Test
    public void test1323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1323");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method13 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
    }

    @Test
    public void test1324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1324");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass27 = languageMixin26.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
    }

    @Test
    public void test1325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1325");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage0.languageMixin = languageMixin15;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList18 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
    }

    @Test
    public void test1326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1326");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        java.lang.Class<?> wildcardClass7 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1327");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method32 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
    }

    @Test
    public void test1328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1328");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage0.languageMixin = languageMixin11;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList14 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1329");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass23 = objectFactory22.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
    }

    @Test
    public void test1330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1330");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage4.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage4.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage9.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass13 = javaLanguage12.getClass();
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass13);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass13);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage4.languageMixin = languageMixin16;
        java.lang.Class<?> wildcardClass18 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        java.lang.reflect.Method method20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1331");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1332");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage30.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage38.languageMixin = languageMixin39;
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage38.languageMixin = languageMixin41;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage38.objectFactory;
        java.lang.Class<?> wildcardClass44 = javaLanguage38.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        java.lang.reflect.Method method48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1333");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage0.objectFactory = objectFactory25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage29.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage29.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage29.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage39.objectFactory = objectFactory40;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass43 = javaLanguage42.getClass();
        javaLanguage39.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.java.ObjectFactory objectFactory46 = javaLanguage29.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage47.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass51 = javaLanguage50.getClass();
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        cuke4duke.internal.java.ObjectFactory objectFactory53 = javaLanguage47.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin54 = javaLanguage47.languageMixin;
        java.lang.Class<?> wildcardClass55 = javaLanguage47.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage29.languageMixin = languageMixin57;
        cuke4duke.internal.language.LanguageMixin languageMixin59 = javaLanguage29.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage60 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin61 = null;
        javaLanguage60.languageMixin = languageMixin61;
        cuke4duke.internal.java.ObjectFactory objectFactory63 = null;
        javaLanguage60.objectFactory = objectFactory63;
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory66 = null;
        javaLanguage65.objectFactory = objectFactory66;
        cuke4duke.internal.java.JavaLanguage javaLanguage68 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass69 = javaLanguage68.getClass();
        javaLanguage65.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        javaLanguage60.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        java.lang.Class<?> wildcardClass73 = javaLanguage29.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass73);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class76 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1334");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test1335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1335");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin14);
    }

    @Test
    public void test1336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1336");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage13.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage26.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass30 = javaLanguage29.getClass();
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = javaLanguage26.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin33 = javaLanguage26.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage26.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage26.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage44.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass48 = javaLanguage47.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        cuke4duke.internal.java.ObjectFactory objectFactory50 = javaLanguage44.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin51 = javaLanguage44.languageMixin;
        java.lang.Class<?> wildcardClass52 = javaLanguage44.getClass();
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass52);
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin56 = null;
        javaLanguage55.languageMixin = languageMixin56;
        cuke4duke.internal.language.LanguageMixin languageMixin58 = null;
        javaLanguage55.languageMixin = languageMixin58;
        cuke4duke.internal.java.JavaLanguage javaLanguage60 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin61 = null;
        javaLanguage60.languageMixin = languageMixin61;
        cuke4duke.internal.java.ObjectFactory objectFactory63 = null;
        javaLanguage60.objectFactory = objectFactory63;
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory66 = null;
        javaLanguage65.objectFactory = objectFactory66;
        cuke4duke.internal.java.JavaLanguage javaLanguage68 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass69 = javaLanguage68.getClass();
        javaLanguage65.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        javaLanguage60.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        javaLanguage55.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        java.lang.Class<?> wildcardClass73 = javaLanguage55.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass73);
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage13.objectFactory = objectFactory75;
        cuke4duke.internal.java.JavaLanguage javaLanguage77 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory78 = null;
        javaLanguage77.objectFactory = objectFactory78;
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage80.objectFactory = objectFactory81;
        cuke4duke.internal.java.ObjectFactory objectFactory83 = null;
        javaLanguage80.objectFactory = objectFactory83;
        java.lang.Class<?> wildcardClass85 = javaLanguage80.getClass();
        javaLanguage77.registerStepDefinitionsFor((java.lang.Class) wildcardClass85);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass85);
        cuke4duke.internal.java.JavaLanguage javaLanguage88 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory89 = null;
        javaLanguage88.objectFactory = objectFactory89;
        cuke4duke.internal.java.JavaLanguage javaLanguage91 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory92 = null;
        javaLanguage91.objectFactory = objectFactory92;
        cuke4duke.internal.java.ObjectFactory objectFactory94 = null;
        javaLanguage91.objectFactory = objectFactory94;
        java.lang.Class<?> wildcardClass96 = javaLanguage91.getClass();
        javaLanguage88.registerStepDefinitionsFor((java.lang.Class) wildcardClass96);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass96);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1337");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        java.lang.reflect.Method method42 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1338");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage0.languageMixin = languageMixin15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage17.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage17.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage17.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage27.languageMixin = languageMixin28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage27.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage40.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage40.objectFactory;
        java.lang.Class<?> wildcardClass44 = javaLanguage40.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory47 = null;
        javaLanguage46.objectFactory = objectFactory47;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass50 = javaLanguage49.getClass();
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = javaLanguage46.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin53 = javaLanguage46.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = null;
        javaLanguage46.objectFactory = objectFactory54;
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage56.languageMixin = languageMixin57;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage56.objectFactory = objectFactory59;
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage61.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass65 = javaLanguage64.getClass();
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        javaLanguage56.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        cuke4duke.internal.language.LanguageMixin languageMixin69 = javaLanguage46.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin70 = javaLanguage46.languageMixin;
        java.lang.Class<?> wildcardClass71 = javaLanguage46.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1339");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1340");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage0.languageMixin = languageMixin15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage17.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage17.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage17.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage27.languageMixin = languageMixin28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage27.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = javaLanguage40.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage40.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage40.objectFactory;
        java.lang.Class<?> wildcardClass44 = javaLanguage40.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory47 = null;
        javaLanguage46.objectFactory = objectFactory47;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass50 = javaLanguage49.getClass();
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = javaLanguage46.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin53 = javaLanguage46.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = null;
        javaLanguage46.objectFactory = objectFactory54;
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage56.languageMixin = languageMixin57;
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage56.objectFactory = objectFactory59;
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage61.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass65 = javaLanguage64.getClass();
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        javaLanguage56.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        cuke4duke.internal.language.LanguageMixin languageMixin69 = javaLanguage46.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin70 = javaLanguage46.languageMixin;
        java.lang.Class<?> wildcardClass71 = javaLanguage46.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage74.objectFactory = objectFactory75;
        cuke4duke.internal.java.JavaLanguage javaLanguage77 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass78 = javaLanguage77.getClass();
        javaLanguage74.registerStepDefinitionsFor((java.lang.Class) wildcardClass78);
        cuke4duke.internal.language.LanguageMixin languageMixin80 = null;
        javaLanguage74.languageMixin = languageMixin80;
        cuke4duke.internal.language.LanguageMixin languageMixin82 = null;
        javaLanguage74.languageMixin = languageMixin82;
        java.lang.Class<?> wildcardClass84 = javaLanguage74.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass84);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method87 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory86);
    }

    @Test
    public void test1341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1341");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage29.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage29.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage29.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage39.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage39.objectFactory = objectFactory42;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage44.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass48 = javaLanguage47.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        javaLanguage39.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage29.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin53 = javaLanguage29.languageMixin;
        java.lang.Class<?> wildcardClass54 = javaLanguage29.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1342");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage20.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage20.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage20.languageMixin;
        java.lang.Class<?> wildcardClass32 = javaLanguage20.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin35 = javaLanguage0.languageMixin;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin35);
    }

    @Test
    public void test1343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1343");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage0.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin44 = null;
        javaLanguage43.languageMixin = languageMixin44;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage43.objectFactory = objectFactory46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage43.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage50.objectFactory = objectFactory51;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass54 = javaLanguage53.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage56.languageMixin = languageMixin57;
        cuke4duke.internal.language.LanguageMixin languageMixin59 = null;
        javaLanguage56.languageMixin = languageMixin59;
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage56.objectFactory;
        java.lang.Class<?> wildcardClass62 = javaLanguage56.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage43.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin68 = null;
        javaLanguage67.languageMixin = languageMixin68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        cuke4duke.internal.java.ObjectFactory objectFactory72 = null;
        javaLanguage67.objectFactory = objectFactory72;
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage74.objectFactory = objectFactory75;
        cuke4duke.internal.java.JavaLanguage javaLanguage77 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass78 = javaLanguage77.getClass();
        javaLanguage74.registerStepDefinitionsFor((java.lang.Class) wildcardClass78);
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin81 = null;
        javaLanguage80.languageMixin = languageMixin81;
        cuke4duke.internal.language.LanguageMixin languageMixin83 = null;
        javaLanguage80.languageMixin = languageMixin83;
        cuke4duke.internal.java.ObjectFactory objectFactory85 = javaLanguage80.objectFactory;
        java.lang.Class<?> wildcardClass86 = javaLanguage80.getClass();
        javaLanguage74.registerStepDefinitionsFor((java.lang.Class) wildcardClass86);
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass86);
        cuke4duke.internal.java.ObjectFactory objectFactory89 = javaLanguage67.objectFactory;
        java.lang.Class<?> wildcardClass90 = javaLanguage67.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1344");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage0.languageMixin = languageMixin11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage13.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage25.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1345");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage5.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage5.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage15.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage15.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage5.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage5.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage5.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory32);
    }

    @Test
    public void test1346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1346");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage0.objectFactory = objectFactory46;
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage0.languageMixin = languageMixin48;
        cuke4duke.internal.language.LanguageMixin languageMixin50 = javaLanguage0.languageMixin;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin50);
    }

    @Test
    public void test1347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1347");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class25 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
    }

    @Test
    public void test1348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1348");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage0.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method43 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
    }

    @Test
    public void test1349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1349");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass48 = objectFactory47.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
    }

    @Test
    public void test1350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1350");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
    }

    @Test
    public void test1351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1351");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
    }

    @Test
    public void test1352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1352");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1353");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1354");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = null;
        javaLanguage12.languageMixin = languageMixin13;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage12.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage12.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage25.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage25.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage25.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage25.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage35.objectFactory = objectFactory36;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass39 = javaLanguage38.getClass();
        javaLanguage35.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage25.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.java.ObjectFactory objectFactory49 = javaLanguage43.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin50 = javaLanguage43.languageMixin;
        java.lang.Class<?> wildcardClass51 = javaLanguage43.getClass();
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage0.objectFactory = objectFactory55;
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage0.languageMixin = languageMixin57;
        cuke4duke.internal.language.StepDefinition stepDefinition59 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test1355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1355");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage0.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = javaLanguage27.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage27.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage27.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage27.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage45.objectFactory = objectFactory46;
        cuke4duke.internal.java.JavaLanguage javaLanguage48 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass49 = javaLanguage48.getClass();
        javaLanguage45.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.java.ObjectFactory objectFactory51 = javaLanguage45.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage45.languageMixin;
        java.lang.Class<?> wildcardClass53 = javaLanguage45.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        java.lang.reflect.Method method56 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1356");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList7 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1357");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage14.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        java.lang.Class<?> wildcardClass40 = javaLanguage32.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.language.LanguageMixin languageMixin42 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage14.objectFactory = objectFactory43;
        java.lang.Class<?> wildcardClass45 = javaLanguage14.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        java.lang.reflect.Method method47 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1358");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList15 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1359");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList36 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
    }

    @Test
    public void test1360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1360");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage0.languageMixin = languageMixin27;
        java.lang.reflect.Method method29 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
    }

    @Test
    public void test1361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1361");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test1362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1362");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage24.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = null;
        javaLanguage37.languageMixin = languageMixin38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage37.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage37.objectFactory;
        java.lang.Class<?> wildcardClass43 = javaLanguage37.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage24.objectFactory = objectFactory46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage24.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin50 = null;
        javaLanguage49.languageMixin = languageMixin50;
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage49.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage54.objectFactory = objectFactory55;
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass58 = javaLanguage57.getClass();
        javaLanguage54.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage49.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass63 = javaLanguage62.getClass();
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.language.LanguageMixin languageMixin65 = null;
        javaLanguage49.languageMixin = languageMixin65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.JavaLanguage javaLanguage70 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass71 = javaLanguage70.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin74 = null;
        javaLanguage73.languageMixin = languageMixin74;
        cuke4duke.internal.language.LanguageMixin languageMixin76 = null;
        javaLanguage73.languageMixin = languageMixin76;
        cuke4duke.internal.java.ObjectFactory objectFactory78 = javaLanguage73.objectFactory;
        java.lang.Class<?> wildcardClass79 = javaLanguage73.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList85 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1363");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        java.lang.reflect.Method method40 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
    }

    @Test
    public void test1364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1364");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage14.languageMixin = languageMixin15;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage14.objectFactory = objectFactory17;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage19.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass23 = javaLanguage22.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass23);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage4.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage4.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage0.objectFactory = objectFactory32;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
    }

    @Test
    public void test1365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1365");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage16.objectFactory = objectFactory19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage16.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage29.languageMixin = languageMixin30;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage29.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage29.objectFactory;
        java.lang.Class<?> wildcardClass35 = javaLanguage29.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage13.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage41.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage41.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage44.languageMixin = languageMixin45;
        cuke4duke.internal.java.ObjectFactory objectFactory47 = null;
        javaLanguage44.objectFactory = objectFactory47;
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage44.objectFactory = objectFactory49;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage51.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass55 = javaLanguage54.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin58 = null;
        javaLanguage57.languageMixin = languageMixin58;
        cuke4duke.internal.language.LanguageMixin languageMixin60 = null;
        javaLanguage57.languageMixin = languageMixin60;
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage57.objectFactory;
        java.lang.Class<?> wildcardClass63 = javaLanguage57.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        javaLanguage41.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.language.LanguageMixin languageMixin69 = null;
        javaLanguage0.languageMixin = languageMixin69;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1366");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory87 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class89 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory87);
    }

    @Test
    public void test1367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1367");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage28.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass32 = javaLanguage31.getClass();
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage13.objectFactory = objectFactory37;
        java.lang.Class<?> wildcardClass39 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        java.lang.reflect.Method method41 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test1368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1368");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1369");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        java.lang.Class class20 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionsFor(class20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1370");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage4.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage22.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass26 = javaLanguage25.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage22.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage22.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage22.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage4.languageMixin = languageMixin32;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage35.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage35.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage40.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass44 = javaLanguage43.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage35.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage0.objectFactory = objectFactory49;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList52 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1371");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage0.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage24.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin38 = null;
        javaLanguage37.languageMixin = languageMixin38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage37.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage37.objectFactory;
        java.lang.Class<?> wildcardClass43 = javaLanguage37.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage24.objectFactory = objectFactory46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage24.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin50 = null;
        javaLanguage49.languageMixin = languageMixin50;
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage49.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage54.objectFactory = objectFactory55;
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass58 = javaLanguage57.getClass();
        javaLanguage54.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage49.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass63 = javaLanguage62.getClass();
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.language.LanguageMixin languageMixin65 = null;
        javaLanguage49.languageMixin = languageMixin65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.JavaLanguage javaLanguage70 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass71 = javaLanguage70.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass71);
        cuke4duke.internal.java.JavaLanguage javaLanguage73 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin74 = null;
        javaLanguage73.languageMixin = languageMixin74;
        cuke4duke.internal.language.LanguageMixin languageMixin76 = null;
        javaLanguage73.languageMixin = languageMixin76;
        cuke4duke.internal.java.ObjectFactory objectFactory78 = javaLanguage73.objectFactory;
        java.lang.Class<?> wildcardClass79 = javaLanguage73.getClass();
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage49.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass79);
        cuke4duke.internal.java.ObjectFactory objectFactory84 = null;
        javaLanguage0.objectFactory = objectFactory84;
        java.lang.reflect.Method method86 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1372");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin21 = null;
        javaLanguage0.languageMixin = languageMixin21;
        cuke4duke.internal.language.StepDefinition stepDefinition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1373");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = javaLanguage30.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class46 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1374");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = null;
        javaLanguage22.languageMixin = languageMixin23;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage22.languageMixin = languageMixin25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage27.languageMixin = languageMixin28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage27.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage22.languageMixin = languageMixin40;
        java.lang.Class<?> wildcardClass42 = javaLanguage22.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1375");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin31 = null;
        javaLanguage30.languageMixin = languageMixin31;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage30.objectFactory = objectFactory33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage30.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin44 = null;
        javaLanguage43.languageMixin = languageMixin44;
        cuke4duke.internal.language.LanguageMixin languageMixin46 = null;
        javaLanguage43.languageMixin = languageMixin46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage43.objectFactory;
        java.lang.Class<?> wildcardClass49 = javaLanguage43.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = javaLanguage30.objectFactory;
        java.lang.Class<?> wildcardClass53 = javaLanguage30.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = null;
        javaLanguage0.objectFactory = objectFactory55;
        java.lang.Class<?> wildcardClass57 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1376");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin21 = null;
        javaLanguage0.languageMixin = languageMixin21;
        java.lang.reflect.Method method23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1377");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass40 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition46 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
    }

    @Test
    public void test1378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1378");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        java.lang.Class<?> wildcardClass23 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1379");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage0.languageMixin = languageMixin14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage16.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage21.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass25 = javaLanguage24.getClass();
        javaLanguage21.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        javaLanguage16.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage16.objectFactory = objectFactory28;
        java.lang.Class<?> wildcardClass30 = javaLanguage16.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class33 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1380");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage0.objectFactory = objectFactory15;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test1381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1381");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class5 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
    }

    @Test
    public void test1382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1382");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage2 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage2.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass6 = javaLanguage5.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass6);
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage8.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage8.objectFactory;
        java.lang.Class<?> wildcardClass14 = javaLanguage8.getClass();
        javaLanguage2.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1383");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage0.objectFactory = objectFactory30;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList33 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1384");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class7 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1385");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin41 = null;
        javaLanguage40.languageMixin = languageMixin41;
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage40.objectFactory = objectFactory43;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage40.objectFactory = objectFactory45;
        java.lang.Class<?> wildcardClass47 = javaLanguage40.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1386");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
    }

    @Test
    public void test1387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1387");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.language.StepDefinition stepDefinition23 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1388");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin14);
    }

    @Test
    public void test1389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1389");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage6.languageMixin = languageMixin7;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage6.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage6.languageMixin = languageMixin10;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage6.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage6.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage6.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        java.lang.Class<?> wildcardClass25 = javaLanguage6.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
    }

    @Test
    public void test1390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1390");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method10 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
    }

    @Test
    public void test1391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1391");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1392");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage27.languageMixin = languageMixin33;
        java.lang.Class<?> wildcardClass35 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage0.objectFactory = objectFactory38;
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage0.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin44 = null;
        javaLanguage43.languageMixin = languageMixin44;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage43.objectFactory = objectFactory46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage43.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage50.objectFactory = objectFactory51;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass54 = javaLanguage53.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin57 = null;
        javaLanguage56.languageMixin = languageMixin57;
        cuke4duke.internal.language.LanguageMixin languageMixin59 = null;
        javaLanguage56.languageMixin = languageMixin59;
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage56.objectFactory;
        java.lang.Class<?> wildcardClass62 = javaLanguage56.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage43.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin68 = null;
        javaLanguage67.languageMixin = languageMixin68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        cuke4duke.internal.java.ObjectFactory objectFactory72 = null;
        javaLanguage67.objectFactory = objectFactory72;
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage74.objectFactory = objectFactory75;
        cuke4duke.internal.java.JavaLanguage javaLanguage77 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass78 = javaLanguage77.getClass();
        javaLanguage74.registerStepDefinitionsFor((java.lang.Class) wildcardClass78);
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin81 = null;
        javaLanguage80.languageMixin = languageMixin81;
        cuke4duke.internal.language.LanguageMixin languageMixin83 = null;
        javaLanguage80.languageMixin = languageMixin83;
        cuke4duke.internal.java.ObjectFactory objectFactory85 = javaLanguage80.objectFactory;
        java.lang.Class<?> wildcardClass86 = javaLanguage80.getClass();
        javaLanguage74.registerStepDefinitionsFor((java.lang.Class) wildcardClass86);
        javaLanguage67.registerStepDefinitionsFor((java.lang.Class) wildcardClass86);
        cuke4duke.internal.java.ObjectFactory objectFactory89 = javaLanguage67.objectFactory;
        java.lang.Class<?> wildcardClass90 = javaLanguage67.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass90);
        cuke4duke.internal.language.StepDefinition stepDefinition93 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1393");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList5 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
    }

    @Test
    public void test1394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1394");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage0.objectFactory = objectFactory33;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1395");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        java.lang.Class class6 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionsFor(class6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1396");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage0.languageMixin = languageMixin7;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
    }

    @Test
    public void test1397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1397");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage25.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage25.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage0.languageMixin = languageMixin39;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class42 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
    }

    @Test
    public void test1398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1398");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList18 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1399");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1400");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage0.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage28.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage28.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage31.languageMixin = languageMixin32;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage31.objectFactory = objectFactory34;
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage31.objectFactory = objectFactory36;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass42 = javaLanguage41.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage44.languageMixin = languageMixin45;
        cuke4duke.internal.language.LanguageMixin languageMixin47 = null;
        javaLanguage44.languageMixin = languageMixin47;
        cuke4duke.internal.java.ObjectFactory objectFactory49 = javaLanguage44.objectFactory;
        java.lang.Class<?> wildcardClass50 = javaLanguage44.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.language.LanguageMixin languageMixin55 = null;
        javaLanguage0.languageMixin = languageMixin55;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1401");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass20 = languageMixin19.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
    }

    @Test
    public void test1402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1402");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
    }

    @Test
    public void test1403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1403");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage0.objectFactory = objectFactory75;
        cuke4duke.internal.language.LanguageMixin languageMixin77 = null;
        javaLanguage0.languageMixin = languageMixin77;
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage0.objectFactory = objectFactory79;
        java.lang.reflect.Method method81 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1404");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage0.objectFactory = objectFactory25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage0.languageMixin = languageMixin27;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1405");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method15 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
    }

    @Test
    public void test1406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1406");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.language.LanguageMixin languageMixin75 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin76 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method77 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin76);
    }

    @Test
    public void test1407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1407");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
    }

    @Test
    public void test1408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1408");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.ObjectFactory objectFactory64 = null;
        javaLanguage0.objectFactory = objectFactory64;
        cuke4duke.internal.language.LanguageMixin languageMixin66 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin67 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class69 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin67);
    }

    @Test
    public void test1409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1409");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1410");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList21 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
    }

    @Test
    public void test1411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1411");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method30 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1412");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList24 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin22);
    }

    @Test
    public void test1413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1413");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.ObjectFactory objectFactory14 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin15 = null;
        javaLanguage0.languageMixin = languageMixin15;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method18 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
    }

    @Test
    public void test1414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1414");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList32 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
    }

    @Test
    public void test1415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1415");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        java.lang.Class<?> wildcardClass31 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1416");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.language.LanguageMixin languageMixin75 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin76 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList78 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin76);
    }

    @Test
    public void test1417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1417");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList8 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1418");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage33.languageMixin = languageMixin34;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage33.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage33.objectFactory;
        java.lang.Class<?> wildcardClass39 = javaLanguage33.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        java.lang.Class<?> wildcardClass41 = javaLanguage27.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
    }

    @Test
    public void test1419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1419");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1420");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
    }

    @Test
    public void test1421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1421");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage0.languageMixin = languageMixin10;
        cuke4duke.internal.language.StepDefinition stepDefinition12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test1422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1422");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage0.objectFactory = objectFactory16;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method21 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
    }

    @Test
    public void test1423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1423");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
    }

    @Test
    public void test1424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1424");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage0.languageMixin = languageMixin14;
        cuke4duke.internal.language.StepDefinition stepDefinition16 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin13);
    }

    @Test
    public void test1425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1425");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage25.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage25.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage0.languageMixin = languageMixin39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage41.objectFactory = objectFactory42;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass45 = javaLanguage44.getClass();
        javaLanguage41.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.java.ObjectFactory objectFactory47 = javaLanguage41.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin48 = javaLanguage41.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage41.objectFactory = objectFactory49;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage51.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass55 = javaLanguage54.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        javaLanguage41.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.ObjectFactory objectFactory58 = javaLanguage41.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage59 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory60 = null;
        javaLanguage59.objectFactory = objectFactory60;
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass63 = javaLanguage62.getClass();
        javaLanguage59.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.java.ObjectFactory objectFactory65 = javaLanguage59.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin66 = javaLanguage59.languageMixin;
        java.lang.Class<?> wildcardClass67 = javaLanguage59.getClass();
        javaLanguage41.registerStepDefinitionsFor((java.lang.Class) wildcardClass67);
        cuke4duke.internal.language.LanguageMixin languageMixin69 = null;
        javaLanguage41.languageMixin = languageMixin69;
        cuke4duke.internal.language.LanguageMixin languageMixin71 = javaLanguage41.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory72 = javaLanguage41.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage41.objectFactory = objectFactory73;
        java.lang.Class<?> wildcardClass75 = javaLanguage41.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1426");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
    }

    @Test
    public void test1427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1427");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class12 = javaLanguage0.loadClass("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin10);
    }

    @Test
    public void test1428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1428");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList10 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
    }

    @Test
    public void test1429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1429");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage10.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage10.languageMixin = languageMixin14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage10.objectFactory = objectFactory16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage10.objectFactory = objectFactory18;
        java.lang.Class<?> wildcardClass20 = javaLanguage10.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass20);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1430");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
    }

    @Test
    public void test1431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1431");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage0.languageMixin = languageMixin22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage29.languageMixin = languageMixin30;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage29.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage34.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass38 = javaLanguage37.getClass();
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass38);
        cuke4duke.internal.java.ObjectFactory objectFactory40 = javaLanguage34.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage41.objectFactory = objectFactory42;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass45 = javaLanguage44.getClass();
        javaLanguage41.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1432");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage7.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage7.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage7.languageMixin = languageMixin19;
        java.lang.Class<?> wildcardClass21 = javaLanguage7.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = null;
        javaLanguage0.languageMixin = languageMixin23;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList26 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1433");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage4.languageMixin = languageMixin5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage4.languageMixin = languageMixin7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage9.languageMixin = languageMixin10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage9.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage9.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory23 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage0.languageMixin = languageMixin24;
        cuke4duke.internal.language.StepDefinition stepDefinition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory23);
    }

    @Test
    public void test1434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1434");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
    }

    @Test
    public void test1435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1435");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = null;
        javaLanguage0.objectFactory = objectFactory17;
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.language.StepDefinition stepDefinition22 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
    }

    @Test
    public void test1436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1436");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1437");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage0.languageMixin = languageMixin10;
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1438");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = null;
        javaLanguage3.objectFactory = objectFactory4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        java.lang.Class<?> wildcardClass8 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1439");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin7 = null;
        javaLanguage6.languageMixin = languageMixin7;
        cuke4duke.internal.java.ObjectFactory objectFactory9 = javaLanguage6.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage6.languageMixin = languageMixin10;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage6.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage6.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage6.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        java.lang.Class<?> wildcardClass25 = javaLanguage6.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass25);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
    }

    @Test
    public void test1440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1440");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList30 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
    }

    @Test
    public void test1441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1441");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory87 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory87);
    }

    @Test
    public void test1442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1442");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = objectFactory20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
    }

    @Test
    public void test1443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1443");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
    }

    @Test
    public void test1444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1444");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage0.languageMixin = languageMixin12;
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage0.objectFactory = objectFactory14;
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage18.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage18.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage23.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage23.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage28.objectFactory = objectFactory29;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass32 = javaLanguage31.getClass();
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage37.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin44 = javaLanguage37.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage37.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage47.objectFactory = objectFactory48;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass51 = javaLanguage50.getClass();
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass51);
        cuke4duke.internal.java.ObjectFactory objectFactory54 = javaLanguage37.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory56 = null;
        javaLanguage55.objectFactory = objectFactory56;
        cuke4duke.internal.java.JavaLanguage javaLanguage58 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass59 = javaLanguage58.getClass();
        javaLanguage55.registerStepDefinitionsFor((java.lang.Class) wildcardClass59);
        cuke4duke.internal.java.ObjectFactory objectFactory61 = javaLanguage55.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin62 = javaLanguage55.languageMixin;
        java.lang.Class<?> wildcardClass63 = javaLanguage55.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        cuke4duke.internal.language.LanguageMixin languageMixin65 = javaLanguage37.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory66 = javaLanguage37.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin67 = null;
        javaLanguage37.languageMixin = languageMixin67;
        java.lang.Class<?> wildcardClass69 = javaLanguage37.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass69);
        java.lang.reflect.Method method71 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1445");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage0.objectFactory = objectFactory75;
        cuke4duke.internal.java.ObjectFactory objectFactory77 = null;
        javaLanguage0.objectFactory = objectFactory77;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList80 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1446");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage20.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage20.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage20.languageMixin;
        java.lang.Class<?> wildcardClass32 = javaLanguage20.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage0.languageMixin = languageMixin34;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage0.languageMixin = languageMixin36;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class39 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1447");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage4 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage4.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass8 = javaLanguage7.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.java.ObjectFactory objectFactory10 = javaLanguage4.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage4.objectFactory = objectFactory12;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage4.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage22.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass26 = javaLanguage25.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage22.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage22.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage22.getClass();
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage4.languageMixin = languageMixin32;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = javaLanguage4.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin36 = null;
        javaLanguage35.languageMixin = languageMixin36;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage35.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage40.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass44 = javaLanguage43.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage35.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage4.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.ObjectFactory objectFactory49 = null;
        javaLanguage0.objectFactory = objectFactory49;
        java.lang.reflect.Method method51 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1448");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage5.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage5.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage15.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage15.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage5.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage5.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage5.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin33 = null;
        javaLanguage32.languageMixin = languageMixin33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage32.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage37.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage44.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass48 = javaLanguage47.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage32.objectFactory = objectFactory52;
        cuke4duke.internal.language.LanguageMixin languageMixin54 = null;
        javaLanguage32.languageMixin = languageMixin54;
        cuke4duke.internal.java.ObjectFactory objectFactory56 = javaLanguage32.objectFactory;
        java.lang.Class<?> wildcardClass57 = javaLanguage32.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test1449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1449");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage5.languageMixin = languageMixin11;
        cuke4duke.internal.language.LanguageMixin languageMixin13 = null;
        javaLanguage5.languageMixin = languageMixin13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage15.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage15.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.ObjectFactory objectFactory27 = javaLanguage15.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass29 = javaLanguage28.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass29);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1450");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage0.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory46 = null;
        javaLanguage0.objectFactory = objectFactory46;
        java.lang.reflect.Method method48 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
    }

    @Test
    public void test1451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1451");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage0.objectFactory = objectFactory24;
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage0.objectFactory = objectFactory29;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = null;
        javaLanguage0.languageMixin = languageMixin31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage33.languageMixin = languageMixin34;
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage33.objectFactory = objectFactory36;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass42 = javaLanguage41.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.java.ObjectFactory objectFactory45 = javaLanguage33.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory47 = null;
        javaLanguage46.objectFactory = objectFactory47;
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass50 = javaLanguage49.getClass();
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = javaLanguage46.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin53 = javaLanguage46.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = null;
        javaLanguage46.objectFactory = objectFactory54;
        cuke4duke.internal.java.JavaLanguage javaLanguage56 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory57 = null;
        javaLanguage56.objectFactory = objectFactory57;
        cuke4duke.internal.java.JavaLanguage javaLanguage59 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass60 = javaLanguage59.getClass();
        javaLanguage56.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory63 = javaLanguage46.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass68 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass68);
        cuke4duke.internal.java.ObjectFactory objectFactory70 = javaLanguage64.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin71 = javaLanguage64.languageMixin;
        java.lang.Class<?> wildcardClass72 = javaLanguage64.getClass();
        javaLanguage46.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin76 = null;
        javaLanguage75.languageMixin = languageMixin76;
        cuke4duke.internal.language.LanguageMixin languageMixin78 = null;
        javaLanguage75.languageMixin = languageMixin78;
        cuke4duke.internal.java.JavaLanguage javaLanguage80 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin81 = null;
        javaLanguage80.languageMixin = languageMixin81;
        cuke4duke.internal.java.ObjectFactory objectFactory83 = null;
        javaLanguage80.objectFactory = objectFactory83;
        cuke4duke.internal.java.JavaLanguage javaLanguage85 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory86 = null;
        javaLanguage85.objectFactory = objectFactory86;
        cuke4duke.internal.java.JavaLanguage javaLanguage88 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass89 = javaLanguage88.getClass();
        javaLanguage85.registerStepDefinitionsFor((java.lang.Class) wildcardClass89);
        javaLanguage80.registerStepDefinitionsFor((java.lang.Class) wildcardClass89);
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass89);
        java.lang.Class<?> wildcardClass93 = javaLanguage75.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass93);
        cuke4duke.internal.java.ObjectFactory objectFactory95 = null;
        javaLanguage33.objectFactory = objectFactory95;
        java.lang.Class<?> wildcardClass97 = javaLanguage33.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass97);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1452");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        java.lang.Class<?> wildcardClass20 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1453");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = null;
        javaLanguage0.objectFactory = objectFactory86;
        cuke4duke.internal.java.ObjectFactory objectFactory88 = null;
        javaLanguage0.objectFactory = objectFactory88;
        java.lang.reflect.Method method90 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1454");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.JavaLanguage javaLanguage62 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory63 = null;
        javaLanguage62.objectFactory = objectFactory63;
        cuke4duke.internal.java.JavaLanguage javaLanguage65 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass66 = javaLanguage65.getClass();
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass66);
        cuke4duke.internal.java.ObjectFactory objectFactory68 = javaLanguage62.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin69 = javaLanguage62.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage62.objectFactory = objectFactory70;
        cuke4duke.internal.java.JavaLanguage javaLanguage72 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory73 = null;
        javaLanguage72.objectFactory = objectFactory73;
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass76 = javaLanguage75.getClass();
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass76);
        cuke4duke.internal.java.ObjectFactory objectFactory78 = javaLanguage72.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage79 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory80 = null;
        javaLanguage79.objectFactory = objectFactory80;
        cuke4duke.internal.java.JavaLanguage javaLanguage82 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass83 = javaLanguage82.getClass();
        javaLanguage79.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage72.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage62.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory88 = null;
        javaLanguage0.objectFactory = objectFactory88;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class91 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1455");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test1456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1456");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = null;
        javaLanguage0.objectFactory = objectFactory86;
        cuke4duke.internal.language.LanguageMixin languageMixin88 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin88);
    }

    @Test
    public void test1457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1457");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage7.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage7.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage7.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage20.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage20.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage20.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage20.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage38 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage38.objectFactory = objectFactory39;
        cuke4duke.internal.java.JavaLanguage javaLanguage41 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass42 = javaLanguage41.getClass();
        javaLanguage38.registerStepDefinitionsFor((java.lang.Class) wildcardClass42);
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage38.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = javaLanguage38.languageMixin;
        java.lang.Class<?> wildcardClass46 = javaLanguage38.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage50.objectFactory = objectFactory51;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass54 = javaLanguage53.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.java.ObjectFactory objectFactory56 = null;
        javaLanguage50.objectFactory = objectFactory56;
        java.lang.Class<?> wildcardClass58 = javaLanguage50.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        java.lang.reflect.Method method60 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1458");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage0.languageMixin = languageMixin18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage20.languageMixin = languageMixin26;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage20.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage20.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage20.languageMixin;
        java.lang.Class<?> wildcardClass32 = javaLanguage20.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass32);
        java.lang.reflect.Method method34 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1459");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin24 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage0.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage0.languageMixin = languageMixin27;
        java.lang.Class<?> wildcardClass29 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1460");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage0.objectFactory = objectFactory25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage0.objectFactory = objectFactory27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage0.objectFactory = objectFactory30;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1461");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.ObjectFactory objectFactory64 = null;
        javaLanguage0.objectFactory = objectFactory64;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class67 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1462");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage6.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass10 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage6.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage6.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage6.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage6.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage19.languageMixin = languageMixin20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage19.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage24.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage24.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage34.languageMixin = languageMixin35;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage34.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage39.objectFactory = objectFactory40;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass43 = javaLanguage42.getClass();
        javaLanguage39.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage24.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin48 = javaLanguage24.languageMixin;
        java.lang.Class<?> wildcardClass49 = javaLanguage24.getClass();
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class54 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1463");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage24.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage24.objectFactory;
        java.lang.Class<?> wildcardClass30 = javaLanguage24.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.java.ObjectFactory objectFactory33 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory34 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin35 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.begin_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin35);
    }

    @Test
    public void test1464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1464");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList24 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1465");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        java.lang.Class<?> wildcardClass26 = javaLanguage18.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = null;
        javaLanguage0.languageMixin = languageMixin28;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin30);
    }

    @Test
    public void test1466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1466");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage0.languageMixin = languageMixin10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage0.languageMixin = languageMixin19;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class class24 = javaLanguage0.loadClass("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
    }

    @Test
    public void test1467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1467");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method30 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1468");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory11 = javaLanguage5.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin12 = javaLanguage5.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage5.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage15.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage15.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage20.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage20.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage5.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage5.languageMixin;
        java.lang.Class<?> wildcardClass30 = javaLanguage5.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass30);
        cuke4duke.internal.language.LanguageMixin languageMixin32 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.StepDefinition stepDefinition33 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin32);
    }

    @Test
    public void test1469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1469");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage0.languageMixin = languageMixin30;
        cuke4duke.internal.language.StepDefinition stepDefinition32 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
    }

    @Test
    public void test1470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1470");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
    }

    @Test
    public void test1471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1471");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass24 = javaLanguage23.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass24);
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin31 = null;
        javaLanguage30.languageMixin = languageMixin31;
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage30.objectFactory = objectFactory33;
        cuke4duke.internal.java.ObjectFactory objectFactory35 = null;
        javaLanguage30.objectFactory = objectFactory35;
        cuke4duke.internal.java.JavaLanguage javaLanguage37 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage37.objectFactory = objectFactory38;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass41 = javaLanguage40.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass41);
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin44 = null;
        javaLanguage43.languageMixin = languageMixin44;
        cuke4duke.internal.language.LanguageMixin languageMixin46 = null;
        javaLanguage43.languageMixin = languageMixin46;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = javaLanguage43.objectFactory;
        java.lang.Class<?> wildcardClass49 = javaLanguage43.getClass();
        javaLanguage37.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass49);
        cuke4duke.internal.java.ObjectFactory objectFactory52 = javaLanguage30.objectFactory;
        java.lang.Class<?> wildcardClass53 = javaLanguage30.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass53);
        cuke4duke.internal.java.ObjectFactory objectFactory55 = javaLanguage0.objectFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory55);
    }

    @Test
    public void test1472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1472");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory19 = null;
        javaLanguage18.objectFactory = objectFactory19;
        cuke4duke.internal.java.JavaLanguage javaLanguage21 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass22 = javaLanguage21.getClass();
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage18.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin25 = javaLanguage18.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage18.objectFactory = objectFactory26;
        cuke4duke.internal.java.JavaLanguage javaLanguage28 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin29 = null;
        javaLanguage28.languageMixin = languageMixin29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage28.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage28.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage18.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.ObjectFactory objectFactory42 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin43 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method45 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
    }

    @Test
    public void test1473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1473");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin5);
    }

    @Test
    public void test1474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1474");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage6.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass10 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.language.LanguageMixin languageMixin12 = null;
        javaLanguage6.languageMixin = languageMixin12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage6.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = javaLanguage6.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin17 = javaLanguage6.languageMixin;
        java.lang.Class<?> wildcardClass18 = javaLanguage6.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage0.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage22.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass26 = javaLanguage25.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage22.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin29 = javaLanguage22.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage22.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory39 = javaLanguage22.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage40 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage40.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass44 = javaLanguage43.getClass();
        javaLanguage40.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        cuke4duke.internal.java.ObjectFactory objectFactory46 = javaLanguage40.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage40.languageMixin;
        java.lang.Class<?> wildcardClass48 = javaLanguage40.getClass();
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        cuke4duke.internal.language.LanguageMixin languageMixin50 = null;
        javaLanguage22.languageMixin = languageMixin50;
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage22.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin54 = null;
        javaLanguage53.languageMixin = languageMixin54;
        cuke4duke.internal.java.ObjectFactory objectFactory56 = null;
        javaLanguage53.objectFactory = objectFactory56;
        cuke4duke.internal.java.JavaLanguage javaLanguage58 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory59 = null;
        javaLanguage58.objectFactory = objectFactory59;
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass62 = javaLanguage61.getClass();
        javaLanguage58.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        javaLanguage53.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass62);
        java.lang.reflect.Method method67 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1475");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage8.languageMixin = languageMixin20;
        java.lang.Class<?> wildcardClass22 = javaLanguage8.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList25 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1476");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin18 = null;
        javaLanguage17.languageMixin = languageMixin18;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage17.languageMixin = languageMixin20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = null;
        javaLanguage22.languageMixin = languageMixin23;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage22.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.java.ObjectFactory objectFactory36 = null;
        javaLanguage0.objectFactory = objectFactory36;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.end_scenario();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1477");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage8.languageMixin = languageMixin9;
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage8.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage8.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage0.objectFactory = objectFactory21;
        cuke4duke.internal.java.ObjectFactory objectFactory23 = null;
        javaLanguage0.objectFactory = objectFactory23;
        cuke4duke.internal.java.JavaLanguage javaLanguage25 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage25.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage25.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage30.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass34 = javaLanguage33.getClass();
        javaLanguage30.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage25.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass34);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = null;
        javaLanguage0.languageMixin = languageMixin39;
        cuke4duke.internal.language.StepDefinition stepDefinition41 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
    }

    @Test
    public void test1478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1478");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = javaLanguage23.objectFactory;
        java.lang.Class<?> wildcardClass27 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.java.ObjectFactory objectFactory35 = javaLanguage29.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin36 = javaLanguage29.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage29.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage39.languageMixin = languageMixin40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage39.objectFactory = objectFactory42;
        cuke4duke.internal.java.JavaLanguage javaLanguage44 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory45 = null;
        javaLanguage44.objectFactory = objectFactory45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass48 = javaLanguage47.getClass();
        javaLanguage44.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        javaLanguage39.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass48);
        cuke4duke.internal.language.LanguageMixin languageMixin52 = javaLanguage29.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin53 = javaLanguage29.languageMixin;
        java.lang.Class<?> wildcardClass54 = javaLanguage29.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.language.StepDefinition stepDefinition56 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1479");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList9 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory7);
    }

    @Test
    public void test1480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1480");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        cuke4duke.internal.language.LanguageMixin languageMixin14 = javaLanguage0.languageMixin;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList16 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin14);
    }

    @Test
    public void test1481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1481");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory16 = null;
        javaLanguage15.objectFactory = objectFactory16;
        cuke4duke.internal.java.JavaLanguage javaLanguage18 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass19 = javaLanguage18.getClass();
        javaLanguage15.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.language.LanguageMixin languageMixin23 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage24.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin31 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage24.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin35 = null;
        javaLanguage34.languageMixin = languageMixin35;
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage34.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage39.objectFactory = objectFactory40;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass43 = javaLanguage42.getClass();
        javaLanguage39.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage34.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass43);
        cuke4duke.internal.language.LanguageMixin languageMixin47 = javaLanguage24.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory48 = null;
        javaLanguage24.objectFactory = objectFactory48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = javaLanguage24.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage51 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory52 = null;
        javaLanguage51.objectFactory = objectFactory52;
        cuke4duke.internal.java.JavaLanguage javaLanguage54 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass55 = javaLanguage54.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.JavaLanguage javaLanguage57 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin58 = null;
        javaLanguage57.languageMixin = languageMixin58;
        cuke4duke.internal.language.LanguageMixin languageMixin60 = null;
        javaLanguage57.languageMixin = languageMixin60;
        cuke4duke.internal.java.ObjectFactory objectFactory62 = javaLanguage57.objectFactory;
        java.lang.Class<?> wildcardClass63 = javaLanguage57.getClass();
        javaLanguage51.registerStepDefinitionsFor((java.lang.Class) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = javaLanguage51.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass65);
        cuke4duke.internal.language.StepDefinition stepDefinition68 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test1482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1482");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        java.lang.reflect.Method method86 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1483");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage0.languageMixin = languageMixin16;
        java.lang.Class<?> wildcardClass18 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1484");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage5.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage5.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory16 = javaLanguage10.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.language.StepDefinition stepDefinition26 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.addStepDefinition(stepDefinition26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1485");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.java.ObjectFactory objectFactory6 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin7 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage0.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.ObjectFactory objectFactory17 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin18 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage19.languageMixin = languageMixin20;
        cuke4duke.internal.language.LanguageMixin languageMixin22 = null;
        javaLanguage19.languageMixin = languageMixin22;
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage19.objectFactory;
        java.lang.Class<?> wildcardClass26 = javaLanguage19.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass26);
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage0.objectFactory = objectFactory30;
        java.lang.reflect.Method method32 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerStepDefinitionMaybe(method32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1486");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList12 = javaLanguage0.step_definitions_for("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory8);
    }

    @Test
    public void test1487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1487");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.JavaLanguage javaLanguage1 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin2 = null;
        javaLanguage1.languageMixin = languageMixin2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = null;
        javaLanguage1.objectFactory = objectFactory4;
        cuke4duke.internal.java.JavaLanguage javaLanguage6 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage6.objectFactory = objectFactory7;
        cuke4duke.internal.java.JavaLanguage javaLanguage9 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass10 = javaLanguage9.getClass();
        javaLanguage6.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass10);
        cuke4duke.internal.java.ObjectFactory objectFactory13 = javaLanguage1.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage14 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage14.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass18 = javaLanguage17.getClass();
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass18);
        cuke4duke.internal.java.ObjectFactory objectFactory20 = javaLanguage14.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin21 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage14.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin25 = null;
        javaLanguage24.languageMixin = languageMixin25;
        cuke4duke.internal.java.ObjectFactory objectFactory27 = null;
        javaLanguage24.objectFactory = objectFactory27;
        cuke4duke.internal.java.JavaLanguage javaLanguage29 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory30 = null;
        javaLanguage29.objectFactory = objectFactory30;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass33 = javaLanguage32.getClass();
        javaLanguage29.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        javaLanguage14.registerStepDefinitionsFor((java.lang.Class) wildcardClass33);
        cuke4duke.internal.language.LanguageMixin languageMixin37 = javaLanguage14.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory38 = null;
        javaLanguage14.objectFactory = objectFactory38;
        java.lang.Class<?> wildcardClass40 = javaLanguage14.getClass();
        javaLanguage1.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass40);
        cuke4duke.internal.java.ObjectFactory objectFactory43 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method44 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory43);
    }

    @Test
    public void test1488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1488");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.ObjectFactory objectFactory7 = null;
        javaLanguage0.objectFactory = objectFactory7;
        cuke4duke.internal.language.LanguageMixin languageMixin9 = null;
        javaLanguage0.languageMixin = languageMixin9;
        cuke4duke.internal.language.LanguageMixin languageMixin11 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage12.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = javaLanguage12.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory20 = null;
        javaLanguage12.objectFactory = objectFactory20;
        cuke4duke.internal.java.JavaLanguage javaLanguage22 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin23 = null;
        javaLanguage22.languageMixin = languageMixin23;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage22.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage27.objectFactory = objectFactory28;
        cuke4duke.internal.java.JavaLanguage javaLanguage30 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass31 = javaLanguage30.getClass();
        javaLanguage27.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage22.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass31);
        cuke4duke.internal.language.LanguageMixin languageMixin35 = javaLanguage12.languageMixin;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory37 = null;
        javaLanguage36.objectFactory = objectFactory37;
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage39.objectFactory = objectFactory40;
        cuke4duke.internal.java.ObjectFactory objectFactory42 = null;
        javaLanguage39.objectFactory = objectFactory42;
        java.lang.Class<?> wildcardClass44 = javaLanguage39.getClass();
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1489");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.JavaLanguage javaLanguage75 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory76 = null;
        javaLanguage75.objectFactory = objectFactory76;
        cuke4duke.internal.java.JavaLanguage javaLanguage78 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory79 = null;
        javaLanguage78.objectFactory = objectFactory79;
        cuke4duke.internal.java.ObjectFactory objectFactory81 = null;
        javaLanguage78.objectFactory = objectFactory81;
        java.lang.Class<?> wildcardClass83 = javaLanguage78.getClass();
        javaLanguage75.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.ObjectFactory objectFactory86 = null;
        javaLanguage0.objectFactory = objectFactory86;
        cuke4duke.internal.language.LanguageMixin languageMixin88 = javaLanguage0.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory89 = javaLanguage0.objectFactory;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory89);
    }

    @Test
    public void test1490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1490");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.JavaLanguage javaLanguage5 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage5.objectFactory = objectFactory6;
        cuke4duke.internal.java.JavaLanguage javaLanguage8 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass9 = javaLanguage8.getClass();
        javaLanguage5.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass9);
        cuke4duke.internal.java.ObjectFactory objectFactory12 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory14 = null;
        javaLanguage13.objectFactory = objectFactory14;
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass17 = javaLanguage16.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass17);
        cuke4duke.internal.java.ObjectFactory objectFactory19 = javaLanguage13.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin20 = javaLanguage13.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = null;
        javaLanguage13.objectFactory = objectFactory21;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = null;
        javaLanguage23.objectFactory = objectFactory24;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass27 = javaLanguage26.getClass();
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass27);
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage13.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage31 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory32 = null;
        javaLanguage31.objectFactory = objectFactory32;
        cuke4duke.internal.java.JavaLanguage javaLanguage34 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass35 = javaLanguage34.getClass();
        javaLanguage31.registerStepDefinitionsFor((java.lang.Class) wildcardClass35);
        cuke4duke.internal.java.ObjectFactory objectFactory37 = javaLanguage31.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin38 = javaLanguage31.languageMixin;
        java.lang.Class<?> wildcardClass39 = javaLanguage31.getClass();
        javaLanguage13.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass39);
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin43 = null;
        javaLanguage42.languageMixin = languageMixin43;
        cuke4duke.internal.language.LanguageMixin languageMixin45 = null;
        javaLanguage42.languageMixin = languageMixin45;
        cuke4duke.internal.java.JavaLanguage javaLanguage47 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin48 = null;
        javaLanguage47.languageMixin = languageMixin48;
        cuke4duke.internal.java.ObjectFactory objectFactory50 = null;
        javaLanguage47.objectFactory = objectFactory50;
        cuke4duke.internal.java.JavaLanguage javaLanguage52 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory53 = null;
        javaLanguage52.objectFactory = objectFactory53;
        cuke4duke.internal.java.JavaLanguage javaLanguage55 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass56 = javaLanguage55.getClass();
        javaLanguage52.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage47.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass56);
        java.lang.Class<?> wildcardClass60 = javaLanguage42.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass60);
        cuke4duke.internal.java.ObjectFactory objectFactory62 = null;
        javaLanguage0.objectFactory = objectFactory62;
        cuke4duke.internal.java.JavaLanguage javaLanguage64 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory65 = null;
        javaLanguage64.objectFactory = objectFactory65;
        cuke4duke.internal.java.JavaLanguage javaLanguage67 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory68 = null;
        javaLanguage67.objectFactory = objectFactory68;
        cuke4duke.internal.java.ObjectFactory objectFactory70 = null;
        javaLanguage67.objectFactory = objectFactory70;
        java.lang.Class<?> wildcardClass72 = javaLanguage67.getClass();
        javaLanguage64.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass72);
        cuke4duke.internal.java.ObjectFactory objectFactory75 = null;
        javaLanguage0.objectFactory = objectFactory75;
        cuke4duke.internal.language.LanguageMixin languageMixin77 = javaLanguage0.languageMixin;
        java.lang.reflect.Method method78 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin77);
    }

    @Test
    public void test1491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1491");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass4 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass4);
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        java.lang.reflect.Method method12 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerBeforeMaybe(method12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1492");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin27 = javaLanguage0.languageMixin;
        cuke4duke.internal.language.LanguageMixin languageMixin28 = javaLanguage0.languageMixin;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin28);
    }

    @Test
    public void test1493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1493");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = null;
        javaLanguage0.objectFactory = objectFactory2;
        cuke4duke.internal.java.ObjectFactory objectFactory4 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory4);
    }

    @Test
    public void test1494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1494");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<cuke4duke.internal.language.StepDefinition> stepDefinitionList24 = javaLanguage0.step_definitions_for("");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -5");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
    }

    @Test
    public void test1495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1495");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.language.LanguageMixin languageMixin6 = null;
        javaLanguage0.languageMixin = languageMixin6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin11 = null;
        javaLanguage10.languageMixin = languageMixin11;
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage10.objectFactory = objectFactory13;
        java.lang.Class<?> wildcardClass15 = javaLanguage10.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass15);
        java.lang.Class<?> wildcardClass17 = javaLanguage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1496");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = null;
        javaLanguage0.objectFactory = objectFactory1;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory4 = null;
        javaLanguage3.objectFactory = objectFactory4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        java.lang.Class<?> wildcardClass8 = javaLanguage3.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass8);
        cuke4duke.internal.language.LanguageMixin languageMixin10 = null;
        javaLanguage0.languageMixin = languageMixin10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin13 = null;
        javaLanguage12.languageMixin = languageMixin13;
        cuke4duke.internal.java.ObjectFactory objectFactory15 = null;
        javaLanguage12.objectFactory = objectFactory15;
        cuke4duke.internal.java.JavaLanguage javaLanguage17 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory18 = null;
        javaLanguage17.objectFactory = objectFactory18;
        cuke4duke.internal.java.JavaLanguage javaLanguage20 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass21 = javaLanguage20.getClass();
        javaLanguage17.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass21);
        cuke4duke.internal.language.LanguageMixin languageMixin24 = null;
        javaLanguage12.languageMixin = languageMixin24;
        cuke4duke.internal.java.ObjectFactory objectFactory26 = null;
        javaLanguage12.objectFactory = objectFactory26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = javaLanguage12.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = javaLanguage12.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin30 = null;
        javaLanguage12.languageMixin = languageMixin30;
        cuke4duke.internal.language.LanguageMixin languageMixin32 = null;
        javaLanguage12.languageMixin = languageMixin32;
        cuke4duke.internal.language.LanguageMixin languageMixin34 = null;
        javaLanguage12.languageMixin = languageMixin34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin37 = null;
        javaLanguage36.languageMixin = languageMixin37;
        cuke4duke.internal.java.ObjectFactory objectFactory39 = null;
        javaLanguage36.objectFactory = objectFactory39;
        cuke4duke.internal.java.ObjectFactory objectFactory41 = null;
        javaLanguage36.objectFactory = objectFactory41;
        cuke4duke.internal.java.JavaLanguage javaLanguage43 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory44 = null;
        javaLanguage43.objectFactory = objectFactory44;
        cuke4duke.internal.java.JavaLanguage javaLanguage46 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass47 = javaLanguage46.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass47);
        cuke4duke.internal.java.JavaLanguage javaLanguage49 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin50 = null;
        javaLanguage49.languageMixin = languageMixin50;
        cuke4duke.internal.language.LanguageMixin languageMixin52 = null;
        javaLanguage49.languageMixin = languageMixin52;
        cuke4duke.internal.java.ObjectFactory objectFactory54 = javaLanguage49.objectFactory;
        java.lang.Class<?> wildcardClass55 = javaLanguage49.getClass();
        javaLanguage43.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass55);
        cuke4duke.internal.java.ObjectFactory objectFactory58 = null;
        javaLanguage36.objectFactory = objectFactory58;
        cuke4duke.internal.java.ObjectFactory objectFactory60 = javaLanguage36.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage61 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin62 = null;
        javaLanguage61.languageMixin = languageMixin62;
        cuke4duke.internal.java.ObjectFactory objectFactory64 = null;
        javaLanguage61.objectFactory = objectFactory64;
        cuke4duke.internal.java.JavaLanguage javaLanguage66 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory67 = null;
        javaLanguage66.objectFactory = objectFactory67;
        cuke4duke.internal.java.JavaLanguage javaLanguage69 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass70 = javaLanguage69.getClass();
        javaLanguage66.registerStepDefinitionsFor((java.lang.Class) wildcardClass70);
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass70);
        cuke4duke.internal.java.ObjectFactory objectFactory73 = javaLanguage61.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage74 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass75 = javaLanguage74.getClass();
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass75);
        cuke4duke.internal.language.LanguageMixin languageMixin77 = null;
        javaLanguage61.languageMixin = languageMixin77;
        cuke4duke.internal.java.JavaLanguage javaLanguage79 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory80 = null;
        javaLanguage79.objectFactory = objectFactory80;
        cuke4duke.internal.java.JavaLanguage javaLanguage82 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass83 = javaLanguage82.getClass();
        javaLanguage79.registerStepDefinitionsFor((java.lang.Class) wildcardClass83);
        cuke4duke.internal.java.JavaLanguage javaLanguage85 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin86 = null;
        javaLanguage85.languageMixin = languageMixin86;
        cuke4duke.internal.language.LanguageMixin languageMixin88 = null;
        javaLanguage85.languageMixin = languageMixin88;
        cuke4duke.internal.java.ObjectFactory objectFactory90 = javaLanguage85.objectFactory;
        java.lang.Class<?> wildcardClass91 = javaLanguage85.getClass();
        javaLanguage79.registerStepDefinitionsFor((java.lang.Class) wildcardClass91);
        javaLanguage61.registerStepDefinitionsFor((java.lang.Class) wildcardClass91);
        javaLanguage36.registerStepDefinitionsFor((java.lang.Class) wildcardClass91);
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass91);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass91);
        cuke4duke.internal.language.LanguageMixin languageMixin97 = null;
        javaLanguage0.languageMixin = languageMixin97;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1497");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = javaLanguage0.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage0.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage0.objectFactory = objectFactory6;
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage0.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage0.objectFactory = objectFactory10;
        cuke4duke.internal.java.ObjectFactory objectFactory12 = null;
        javaLanguage0.objectFactory = objectFactory12;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory3);
    }

    @Test
    public void test1498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1498");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory1 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory2 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage3 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin4 = null;
        javaLanguage3.languageMixin = languageMixin4;
        cuke4duke.internal.java.ObjectFactory objectFactory6 = null;
        javaLanguage3.objectFactory = objectFactory6;
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage3.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory11 = null;
        javaLanguage10.objectFactory = objectFactory11;
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass14 = javaLanguage13.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass14);
        cuke4duke.internal.java.JavaLanguage javaLanguage16 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin17 = null;
        javaLanguage16.languageMixin = languageMixin17;
        cuke4duke.internal.language.LanguageMixin languageMixin19 = null;
        javaLanguage16.languageMixin = languageMixin19;
        cuke4duke.internal.java.ObjectFactory objectFactory21 = javaLanguage16.objectFactory;
        java.lang.Class<?> wildcardClass22 = javaLanguage16.getClass();
        javaLanguage10.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage3.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass22);
        cuke4duke.internal.language.LanguageMixin languageMixin26 = null;
        javaLanguage0.languageMixin = languageMixin26;
        cuke4duke.internal.java.ObjectFactory objectFactory28 = null;
        javaLanguage0.objectFactory = objectFactory28;
        cuke4duke.internal.java.ObjectFactory objectFactory30 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage0.objectFactory;
        java.lang.reflect.Method method32 = null;
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.registerAfterMaybe(method32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
    }

    @Test
    public void test1499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1499");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.language.LanguageMixin languageMixin3 = null;
        javaLanguage0.languageMixin = languageMixin3;
        cuke4duke.internal.language.LanguageMixin languageMixin5 = null;
        javaLanguage0.languageMixin = languageMixin5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin8 = null;
        javaLanguage7.languageMixin = languageMixin8;
        cuke4duke.internal.java.ObjectFactory objectFactory10 = null;
        javaLanguage7.objectFactory = objectFactory10;
        cuke4duke.internal.java.JavaLanguage javaLanguage12 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory13 = null;
        javaLanguage12.objectFactory = objectFactory13;
        cuke4duke.internal.java.JavaLanguage javaLanguage15 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass16 = javaLanguage15.getClass();
        javaLanguage12.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass16);
        cuke4duke.internal.java.JavaLanguage javaLanguage19 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin20 = null;
        javaLanguage19.languageMixin = languageMixin20;
        cuke4duke.internal.java.ObjectFactory objectFactory22 = null;
        javaLanguage19.objectFactory = objectFactory22;
        cuke4duke.internal.java.JavaLanguage javaLanguage24 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory25 = null;
        javaLanguage24.objectFactory = objectFactory25;
        cuke4duke.internal.java.JavaLanguage javaLanguage27 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass28 = javaLanguage27.getClass();
        javaLanguage24.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass28);
        cuke4duke.internal.java.ObjectFactory objectFactory31 = javaLanguage19.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage32 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory33 = null;
        javaLanguage32.objectFactory = objectFactory33;
        cuke4duke.internal.java.JavaLanguage javaLanguage35 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass36 = javaLanguage35.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass36);
        cuke4duke.internal.java.ObjectFactory objectFactory38 = javaLanguage32.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin39 = javaLanguage32.languageMixin;
        cuke4duke.internal.java.ObjectFactory objectFactory40 = null;
        javaLanguage32.objectFactory = objectFactory40;
        cuke4duke.internal.java.JavaLanguage javaLanguage42 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory43 = null;
        javaLanguage42.objectFactory = objectFactory43;
        cuke4duke.internal.java.JavaLanguage javaLanguage45 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass46 = javaLanguage45.getClass();
        javaLanguage42.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass46);
        cuke4duke.internal.java.ObjectFactory objectFactory49 = javaLanguage32.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage50 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory51 = null;
        javaLanguage50.objectFactory = objectFactory51;
        cuke4duke.internal.java.JavaLanguage javaLanguage53 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass54 = javaLanguage53.getClass();
        javaLanguage50.registerStepDefinitionsFor((java.lang.Class) wildcardClass54);
        cuke4duke.internal.java.ObjectFactory objectFactory56 = javaLanguage50.objectFactory;
        cuke4duke.internal.language.LanguageMixin languageMixin57 = javaLanguage50.languageMixin;
        java.lang.Class<?> wildcardClass58 = javaLanguage50.getClass();
        javaLanguage32.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage19.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass58);
        // The following exception was thrown during execution in test generation
        try {
            javaLanguage0.load("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.StringIndexOutOfBoundsException; message: String index out of range: -2");
        } catch (java.lang.StringIndexOutOfBoundsException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest2.test1500");
        cuke4duke.internal.java.JavaLanguage javaLanguage0 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin1 = null;
        javaLanguage0.languageMixin = languageMixin1;
        cuke4duke.internal.java.ObjectFactory objectFactory3 = null;
        javaLanguage0.objectFactory = objectFactory3;
        cuke4duke.internal.java.ObjectFactory objectFactory5 = null;
        javaLanguage0.objectFactory = objectFactory5;
        cuke4duke.internal.java.JavaLanguage javaLanguage7 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory8 = null;
        javaLanguage7.objectFactory = objectFactory8;
        cuke4duke.internal.java.JavaLanguage javaLanguage10 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass11 = javaLanguage10.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass11);
        cuke4duke.internal.java.JavaLanguage javaLanguage13 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin14 = null;
        javaLanguage13.languageMixin = languageMixin14;
        cuke4duke.internal.language.LanguageMixin languageMixin16 = null;
        javaLanguage13.languageMixin = languageMixin16;
        cuke4duke.internal.java.ObjectFactory objectFactory18 = javaLanguage13.objectFactory;
        java.lang.Class<?> wildcardClass19 = javaLanguage13.getClass();
        javaLanguage7.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass19);
        cuke4duke.internal.java.ObjectFactory objectFactory22 = javaLanguage0.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage23 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory24 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.ObjectFactory objectFactory25 = javaLanguage23.objectFactory;
        cuke4duke.internal.java.JavaLanguage javaLanguage26 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin27 = null;
        javaLanguage26.languageMixin = languageMixin27;
        cuke4duke.internal.java.ObjectFactory objectFactory29 = null;
        javaLanguage26.objectFactory = objectFactory29;
        cuke4duke.internal.java.ObjectFactory objectFactory31 = null;
        javaLanguage26.objectFactory = objectFactory31;
        cuke4duke.internal.java.JavaLanguage javaLanguage33 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.java.ObjectFactory objectFactory34 = null;
        javaLanguage33.objectFactory = objectFactory34;
        cuke4duke.internal.java.JavaLanguage javaLanguage36 = new cuke4duke.internal.java.JavaLanguage();
        java.lang.Class<?> wildcardClass37 = javaLanguage36.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass37);
        cuke4duke.internal.java.JavaLanguage javaLanguage39 = new cuke4duke.internal.java.JavaLanguage();
        cuke4duke.internal.language.LanguageMixin languageMixin40 = null;
        javaLanguage39.languageMixin = languageMixin40;
        cuke4duke.internal.language.LanguageMixin languageMixin42 = null;
        javaLanguage39.languageMixin = languageMixin42;
        cuke4duke.internal.java.ObjectFactory objectFactory44 = javaLanguage39.objectFactory;
        java.lang.Class<?> wildcardClass45 = javaLanguage39.getClass();
        javaLanguage33.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage26.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        javaLanguage23.registerStepDefinitionsFor((java.lang.Class) wildcardClass45);
        cuke4duke.internal.language.LanguageMixin languageMixin49 = javaLanguage23.languageMixin;
        java.lang.Class<?> wildcardClass50 = javaLanguage23.getClass();
        javaLanguage0.registerStepDefinitionsFor((java.lang.Class) wildcardClass50);
        cuke4duke.internal.language.LanguageMixin languageMixin52 = null;
        javaLanguage0.languageMixin = languageMixin52;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(objectFactory44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(languageMixin49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }
}

