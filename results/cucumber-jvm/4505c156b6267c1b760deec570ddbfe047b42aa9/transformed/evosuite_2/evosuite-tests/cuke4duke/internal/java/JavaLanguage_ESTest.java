/*
 * This file was automatically generated by EvoSuite
 * Mon May 25 19:20:40 GMT 2020
 */

package cuke4duke.internal.java;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import cuke4duke.internal.groovy.GroovyLanguage;
import cuke4duke.internal.groovy.GroovyStepDefinition;
import cuke4duke.internal.java.JavaLanguage;
import cuke4duke.internal.java.ObjectFactory;
import cuke4duke.internal.java.PicoFactory;
import cuke4duke.internal.java.SpringFactory;
import cuke4duke.internal.language.LanguageMixin;
import cuke4duke.internal.language.StepDefinition;
import java.lang.reflect.Method;
import java.util.List;
import java.util.regex.Pattern;
import org.codehaus.groovy.runtime.CurriedClosure;
import org.codehaus.groovy.runtime.IteratorClosureAdapter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaLanguage_ESTest extends JavaLanguage_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Class<Object> class0 = Object.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      // Undeclared exception!
      try { 
        javaLanguage0.end_scenario();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = "/S0RxE`U3Q";
      try { 
        javaLanguage0.load(string0);
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: /S0RxE`U3Q
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Class<Integer> class0 = Integer.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      LanguageMixin languageMixin0 = null;
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Class<PicoFactory> class0 = PicoFactory.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Class<PicoFactory> class0 = PicoFactory.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      PicoFactory picoFactory0 = new PicoFactory();
      javaLanguage0.objectFactory = (ObjectFactory) picoFactory0;
      // Undeclared exception!
      try { 
        javaLanguage0.end_scenario();
      } catch(NoClassDefFoundError e) {
         //
         // org/picocontainer/MutablePicoContainer
         //
         verifyException("cuke4duke.internal.java.PicoFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      // Undeclared exception!
      try { 
        javaLanguage0.end_scenario();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = "/S0RxEU3u";
      try { 
        javaLanguage0.load(string0);
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: /S0RxEU3u
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = "";
      // Undeclared exception!
      try { 
        javaLanguage0.load(string0);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = "ART";
      // Undeclared exception!
      try { 
        javaLanguage0.loadClass(string0);
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = "cZ7|L/";
      try { 
        javaLanguage0.load(string0);
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: cZ7|L/
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.loadClass(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      String string0 = "iyROeE+iP\\6=C!k9m";
      try { 
        javaLanguage0.loadClass(string0);
      } catch(ClassNotFoundException e) {
         //
         // Couldn't determine class from file: iyROeE+iP\\6=C!k9m
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Method method0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerBeforeMaybe(method0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Method method0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerStepDefinitionMaybe(method0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Class<Integer> class0 = Integer.class;
      javaLanguage0.registerStepDefinitionsFor(class0);
      Method method0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerAfterMaybe(method0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      PicoFactory picoFactory0 = new PicoFactory();
      javaLanguage0.objectFactory = (ObjectFactory) picoFactory0;
      // Undeclared exception!
      try { 
        javaLanguage0.begin_scenario();
      } catch(NoClassDefFoundError e) {
         //
         // org/picocontainer/PicoBuilder
         //
         verifyException("cuke4duke.internal.java.PicoFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      javaLanguage0.languageMixin = languageMixin0;
      String string0 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.load(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      PicoFactory picoFactory0 = new PicoFactory();
      javaLanguage0.objectFactory = (ObjectFactory) picoFactory0;
      Class<Object> class0 = Object.class;
      // Undeclared exception!
      try { 
        javaLanguage0.getTarget(class0);
      } catch(NoClassDefFoundError e) {
         //
         // org/picocontainer/MutablePicoContainer
         //
         verifyException("cuke4duke.internal.java.PicoFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      JavaLanguage javaLanguage0 = new JavaLanguage();
      Class<Object> class0 = Object.class;
      Class<Object> class1 = null;
      // Undeclared exception!
      try { 
        javaLanguage0.registerStepDefinitionsFor(class1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.util.ReflectionUtils", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      Class<String> class0 = String.class;
      String string0 = "";
      Class<PicoFactory> class1 = PicoFactory.class;
      LanguageMixin languageMixin0 = mock(LanguageMixin.class, new ViolatedAssumptionAnswer());
      JavaLanguage javaLanguage0 = null;
      try {
        javaLanguage0 = new JavaLanguage(languageMixin0);
      } catch(RuntimeException e) {
         //
         // Missing system property: cuke4duke.objectFactory
         //
         verifyException("cuke4duke.internal.java.JavaLanguage", e);
      }
  }
}
