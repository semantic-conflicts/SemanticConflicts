import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.COMPONENTS_REF;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "#/components/schemas/" + "'", str0.equals("#/components/schemas/"));
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "#/components/schemas/";
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        org.slf4j.Logger logger0 = null;
        io.swagger.jaxrs2.OperationParser.LOGGER = logger0;
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        io.swagger.jaxrs2.OperationParser.COMMA = "#/components/schemas/";
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "";
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        org.slf4j.Logger logger0 = io.swagger.jaxrs2.OperationParser.LOGGER;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNull(logger0);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        io.swagger.jaxrs2.OperationParser.COMMA = "hi!";
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.MEDIA_TYPE;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "#/components/schemas/" + "'", str0.equals("#/components/schemas/"));
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        io.swagger.jaxrs2.OperationParser.COMMA = "";
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.COMMA;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "" + "'", str0.equals(""));
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        java.lang.String str0 = io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION;
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "" + "'", str0.equals(""));
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "";
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        io.swagger.oas.annotations.servers.Server server0 = null;
        java.util.Optional<io.swagger.oas.models.servers.Server> serverOptional1 = io.swagger.jaxrs2.OperationParser.getServer(server0);
        java.lang.Class<?> wildcardClass2 = serverOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "hi!";
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        io.swagger.oas.annotations.parameters.RequestBody requestBody0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.parameters.RequestBody> requestBodyOptional2 = io.swagger.jaxrs2.OperationParser.getRequestBody(requestBody0, components1);
        java.lang.Class<?> wildcardClass3 = requestBodyOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(requestBodyOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "#/components/schemas/";
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        io.swagger.jaxrs2.OperationParser.DEFAULT_DESCRIPTION = "#/components/schemas/";
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        io.swagger.oas.annotations.responses.ApiResponse apiResponse0 = null;
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray1 = new io.swagger.oas.annotations.responses.ApiResponse[] { apiResponse0 };
        javax.ws.rs.Produces produces2 = null;
        javax.ws.rs.Produces produces3 = null;
        io.swagger.oas.models.Components components4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional5 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray1, produces2, produces3, components4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray1);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        io.swagger.oas.annotations.media.Content content0 = null;
        io.swagger.oas.annotations.media.Content[] contentArray1 = new io.swagger.oas.annotations.media.Content[] { content0 };
        io.swagger.oas.models.Components components2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.Optional<io.swagger.oas.models.media.Content> contentOptional3 = io.swagger.jaxrs2.OperationParser.getContents(contentArray1, components2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray1);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        io.swagger.oas.annotations.media.Content content0 = null;
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContent(content0, produces1, produces2, components3);
        java.lang.Class<?> wildcardClass5 = contentOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "";
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        java.lang.Class<?> wildcardClass4 = parameterListOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        io.swagger.jaxrs2.OperationParser.COMPONENTS_REF = "hi!";
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass4 = strMap3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.parameters.Parameter> parameterOptional2 = io.swagger.jaxrs2.OperationParser.getParameter(parameter0, components1);
        java.lang.Class<?> wildcardClass3 = parameterOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass4 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass10 = tagSetOptional9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        io.swagger.jaxrs2.OperationParser.MEDIA_TYPE = "hi!";
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        io.swagger.oas.annotations.media.ArraySchema arraySchema0 = null;
        java.util.Optional<io.swagger.oas.models.media.ArraySchema> arraySchemaOptional1 = io.swagger.jaxrs2.OperationParser.getArraySchema(arraySchema0);
        java.lang.Class<?> wildcardClass2 = arraySchemaOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(arraySchemaOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        java.lang.Class<?> wildcardClass5 = parameterListOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass4 = serverListOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        java.lang.Class<?> wildcardClass12 = parameterListOptional11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass6 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass3 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass3 = serverListOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        java.lang.Class<?> wildcardClass9 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        java.lang.Class<?> wildcardClass11 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass4 = strMap3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass6 = serverListOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass5 = serverListOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        io.swagger.oas.annotations.info.Info info0 = null;
        java.util.Optional<io.swagger.oas.models.info.Info> infoOptional1 = io.swagger.jaxrs2.OperationParser.getInfo(info0);
        java.lang.Class<?> wildcardClass2 = infoOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(infoOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass15 = tagSetOptional14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass4 = serverListOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass2 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass5 = strMap4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        java.lang.Class<?> wildcardClass9 = apiResponsesOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        java.lang.Class<?> wildcardClass18 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        java.lang.Class<?> wildcardClass3 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        io.swagger.oas.models.media.MediaType mediaType0 = null;
        io.swagger.oas.annotations.media.ExampleObject exampleObject1 = null;
        java.util.Optional<io.swagger.oas.models.media.MediaType> mediaTypeOptional2 = io.swagger.jaxrs2.OperationParser.getMediaType(mediaType0, exampleObject1);
        java.lang.Class<?> wildcardClass3 = mediaTypeOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(mediaTypeOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass7 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass5 = tagSetOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        java.lang.Class<?> wildcardClass8 = parameterListOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass6 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        java.lang.Class<?> wildcardClass20 = parameterListOptional19.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        java.lang.Class<?> wildcardClass16 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass4 = tagSetOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass9 = serverListOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        java.lang.Class<?> wildcardClass25 = apiResponsesOptional24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass6 = serverListOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        java.lang.Class<?> wildcardClass9 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        java.lang.Class<?> wildcardClass3 = contentOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        java.lang.Class<?> wildcardClass5 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        io.swagger.oas.annotations.info.License license0 = null;
        java.util.Optional<io.swagger.oas.models.info.License> licenseOptional1 = io.swagger.jaxrs2.OperationParser.getLicense(license0);
        java.lang.Class<?> wildcardClass2 = licenseOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(licenseOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        io.swagger.oas.annotations.ExternalDocumentation externalDocumentation0 = null;
        java.util.Optional<io.swagger.oas.models.ExternalDocumentation> externalDocumentationOptional1 = io.swagger.jaxrs2.OperationParser.getExternalDocumentation(externalDocumentation0);
        java.lang.Class<?> wildcardClass2 = externalDocumentationOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(externalDocumentationOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass3 = strMap2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        java.lang.Class<?> wildcardClass7 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        io.swagger.oas.annotations.links.Link link0 = null;
        java.util.Optional<io.swagger.oas.models.links.Link> linkOptional1 = io.swagger.jaxrs2.OperationParser.getLink(link0);
        java.lang.Class<?> wildcardClass2 = linkOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        io.swagger.oas.annotations.links.Link[] linkArray0 = null;
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass2 = strMap1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass2 = strMap1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass3 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass16 = tagSetOptional15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass12 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass7 = serverListOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        java.lang.Class<?> wildcardClass17 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        java.lang.Class<?> wildcardClass7 = contentOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass10 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass5 = serverListOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass6 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass17 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass2 = serverListOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass7 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass7 = serverListOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass3 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass5 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        java.lang.Class<?> wildcardClass16 = parameterListOptional15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass11 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass7 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        java.lang.Class<?> wildcardClass9 = parameterListOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        java.lang.Class<?> wildcardClass22 = parameterListOptional21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "hi!", "#/components/schemas/", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass7 = tagSetOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass11 = tagSetOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass7 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        java.lang.Class<?> wildcardClass13 = apiResponsesOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        java.lang.Class<?> wildcardClass21 = apiResponsesOptional20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        java.lang.Class<?> wildcardClass15 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        java.lang.Class<?> wildcardClass12 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        java.lang.Class<?> wildcardClass37 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        java.lang.Class<?> wildcardClass17 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass8 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass3 = strMap2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        java.lang.Class<?> wildcardClass33 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass7 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = null;
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        java.lang.Class<?> wildcardClass5 = apiResponsesOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass5 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass7 = tagSetOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        java.lang.Class<?> wildcardClass30 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        java.lang.Class<?> wildcardClass25 = contentOptional24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass4 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass4 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        java.lang.String[] strArray0 = null;
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass2 = tagSetOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        java.lang.Class<?> wildcardClass11 = parameterListOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass20 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        java.lang.Class<?> wildcardClass27 = contentOptional26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass18 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        java.lang.Class<?> wildcardClass24 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass6 = strMap5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass13 = tagSetOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        java.lang.Class<?> wildcardClass3 = parameterListOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass4 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        java.lang.Class<?> wildcardClass3 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        java.lang.Class<?> wildcardClass29 = apiResponsesOptional28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass14 = serverListOptional13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass19 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        java.lang.Class<?> wildcardClass19 = parameterListOptional18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass13 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        java.lang.Class<?> wildcardClass26 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass3 = tagSetOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass10 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass22 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass6 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        io.swagger.jaxrs2.OperationParser operationParser0 = new io.swagger.jaxrs2.OperationParser();
        java.lang.Class<?> wildcardClass1 = operationParser0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        java.lang.Class<?> wildcardClass28 = parameterListOptional27.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        java.lang.Class<?> wildcardClass17 = apiResponsesOptional16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        java.lang.Class<?> wildcardClass33 = apiResponsesOptional32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass5 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        java.lang.Class<?> wildcardClass10 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        java.lang.Class<?> wildcardClass21 = contentOptional20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass9 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        java.lang.Class<?> wildcardClass13 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        io.swagger.oas.annotations.media.Schema schema0 = null;
        java.util.Optional<io.swagger.oas.models.media.Schema> schemaOptional1 = io.swagger.jaxrs2.OperationParser.getSchemaFromAnnotation(schema0);
        java.lang.Class<?> wildcardClass2 = schemaOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(schemaOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        java.lang.Class<?> wildcardClass11 = contentOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass13 = serverListOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass2 = serverListOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        java.lang.Class<?> wildcardClass40 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass12 = strMap11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass21 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        java.lang.Class<?> wildcardClass23 = parameterListOptional22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass7 = tagSetOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass12 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass7 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass11 = serverListOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass13 = strMap12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        java.lang.Class<?> wildcardClass49 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass10 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass7 = strMap6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        java.lang.Class<?> wildcardClass25 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass9 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass3 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass2 = strArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        java.lang.Class<?> wildcardClass38 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass14 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        java.lang.Class<?> wildcardClass61 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        java.lang.Class<?> wildcardClass13 = parameterListOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass4 = tagSetOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass8 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        java.lang.Class<?> wildcardClass13 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = null;
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        java.lang.Class<?> wildcardClass3 = parameterListOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass5 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        java.lang.Class<?> wildcardClass29 = parameterListOptional28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        java.lang.Class<?> wildcardClass4 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        java.lang.Class<?> wildcardClass37 = apiResponsesOptional36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass15 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        java.lang.Class<?> wildcardClass9 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass6 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass10 = strMap9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        java.lang.Class<?> wildcardClass11 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        java.lang.Class<?> wildcardClass7 = parameterListOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        java.lang.Class<?> wildcardClass13 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        java.lang.Class<?> wildcardClass7 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        java.lang.Class<?> wildcardClass43 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        java.lang.Class<?> wildcardClass41 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass4 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass9 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass3 = tagSetOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass13 = serverListOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        java.lang.Class<?> wildcardClass29 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass10 = tagSetOptional9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass12 = serverListOptional11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass17 = strMap16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        java.lang.Class<?> wildcardClass17 = parameterListOptional16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass12 = tagSetOptional11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        java.lang.Class<?> wildcardClass41 = contentOptional40.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        java.lang.Class<?> wildcardClass31 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass14 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass3 = tagSetOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass12 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass3 = tagSetOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass23 = tagSetOptional22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass13 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass16 = strMap15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass8 = serverListOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        java.lang.Class<?> wildcardClass8 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        java.lang.Class<?> wildcardClass5 = contentOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass26 = tagSetOptional25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass12 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        java.lang.Class<?> wildcardClass13 = contentOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass16 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        java.lang.Class<?> wildcardClass34 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        java.lang.Class<?> wildcardClass17 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass9 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass11 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        java.lang.Class<?> wildcardClass37 = parameterListOptional36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        java.lang.Class<?> wildcardClass34 = parameterListOptional33.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass9 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass27 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass6 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass7 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass9 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass19 = strMap18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass9 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass10 = strMap9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass10 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass18 = tagSetOptional17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass18 = serverListOptional17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        java.lang.Class<?> wildcardClass15 = contentOptional14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        io.swagger.oas.annotations.info.Contact contact0 = null;
        java.util.Optional<io.swagger.oas.models.info.Contact> contactOptional1 = io.swagger.jaxrs2.OperationParser.getContact(contact0);
        java.lang.Class<?> wildcardClass2 = contactOptional1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contactOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass11 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass16 = serverListOptional15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        java.lang.Class<?> wildcardClass37 = contentOptional36.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        java.lang.Class<?> wildcardClass32 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass10 = tagSetOptional9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        java.lang.Class<?> wildcardClass65 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass11 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        java.lang.Class<?> wildcardClass81 = apiResponsesOptional80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        java.lang.Class<?> wildcardClass44 = parameterListOptional43.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass12 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass7 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass3 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass16 = serverListOptional15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass17 = serverListOptional16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        java.lang.Class<?> wildcardClass42 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        java.lang.Class<?> wildcardClass45 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass13 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass28 = tagSetOptional27.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        java.lang.Class<?> wildcardClass15 = parameterListOptional14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass11 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        java.lang.Class<?> wildcardClass77 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass13 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass4 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass6 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        javax.ws.rs.Produces produces81 = null;
        javax.ws.rs.Produces produces82 = null;
        io.swagger.oas.models.Components components83 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional84 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces81, produces82, components83);
        javax.ws.rs.Produces produces85 = null;
        javax.ws.rs.Produces produces86 = null;
        io.swagger.oas.models.Components components87 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional88 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces85, produces86, components87);
        javax.ws.rs.Produces produces89 = null;
        javax.ws.rs.Produces produces90 = null;
        io.swagger.oas.models.Components components91 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional92 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces89, produces90, components91);
        java.lang.Class<?> wildcardClass93 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        java.lang.Class<?> wildcardClass25 = parameterListOptional24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        java.lang.Class<?> wildcardClass25 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass22 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "hi!", "#/components/schemas/", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass9 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        java.lang.Class<?> wildcardClass47 = parameterListOptional46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        java.lang.Class<?> wildcardClass53 = apiResponsesOptional52.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass4 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        java.lang.Class<?> wildcardClass40 = parameterListOptional39.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass12 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        java.lang.Class<?> wildcardClass19 = contentOptional18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        java.lang.Class<?> wildcardClass6 = parameterListOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass26 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass16 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass21 = tagSetOptional20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass16 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        java.lang.Class<?> wildcardClass28 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass7 = tagSetOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass24 = tagSetOptional23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        java.lang.Class<?> wildcardClass49 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "hi!", "#/components/schemas/", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass5 = tagSetOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "#/components/schemas/", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass7 = tagSetOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        javax.ws.rs.Produces produces81 = null;
        javax.ws.rs.Produces produces82 = null;
        io.swagger.oas.models.Components components83 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional84 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces81, produces82, components83);
        javax.ws.rs.Produces produces85 = null;
        javax.ws.rs.Produces produces86 = null;
        io.swagger.oas.models.Components components87 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional88 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces85, produces86, components87);
        java.lang.Class<?> wildcardClass89 = apiResponsesOptional88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        java.lang.Class<?> wildcardClass51 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional45 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional47 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components46);
        io.swagger.oas.models.Components components48 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional49 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components48);
        java.lang.Class<?> wildcardClass50 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        java.lang.Class<?> wildcardClass53 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass5 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass5 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        java.lang.Class<?> wildcardClass29 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass11 = tagSetOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass16 = strMap15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        java.lang.Class<?> wildcardClass49 = parameterListOptional48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        java.lang.Class<?> wildcardClass37 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass6 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        java.lang.Class<?> wildcardClass49 = apiResponsesOptional48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass9 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass10 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        java.lang.Class<?> wildcardClass29 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass25 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass11 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass14 = tagSetOptional13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass20 = serverListOptional19.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        java.lang.Class<?> wildcardClass65 = apiResponsesOptional64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass14 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass28 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        java.lang.Class<?> wildcardClass35 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        java.lang.Class<?> wildcardClass57 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        javax.ws.rs.Produces produces81 = null;
        javax.ws.rs.Produces produces82 = null;
        io.swagger.oas.models.Components components83 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional84 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces81, produces82, components83);
        java.lang.Class<?> wildcardClass85 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional50 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components49);
        java.lang.Class<?> wildcardClass51 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass11 = serverListOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        java.lang.Class<?> wildcardClass69 = apiResponsesOptional68.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass4 = tagSetOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional50 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional52 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components51);
        java.lang.Class<?> wildcardClass53 = parameterListOptional52.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        java.lang.Class<?> wildcardClass19 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass17 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components55);
        java.lang.Class<?> wildcardClass57 = contentOptional56.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        java.lang.Class<?> wildcardClass35 = contentOptional34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass23 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass19 = strMap18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        java.lang.Class<?> wildcardClass51 = contentOptional50.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass11 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass5 = tagSetOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "#/components/schemas/", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass10 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass8 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass18 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass25 = strMap24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        java.lang.Class<?> wildcardClass55 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass9 = serverListOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components55);
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional58 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components57);
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional60 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components59);
        io.swagger.oas.models.Components components61 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional62 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components61);
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional64 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components63);
        java.lang.Class<?> wildcardClass65 = contentOptional64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        java.lang.Class<?> wildcardClass23 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass22 = tagSetOptional21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass20 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass8 = serverListOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass13 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        java.lang.Class<?> wildcardClass32 = parameterListOptional31.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        java.lang.Class<?> wildcardClass25 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        java.lang.Class<?> wildcardClass33 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass12 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass16 = tagSetOptional15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass8 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "hi!", "#/components/schemas/", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass7 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        java.lang.Class<?> wildcardClass39 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass25 = serverListOptional24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass8 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass21 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass14 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass12 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        java.lang.Class<?> wildcardClass6 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass6 = strMap5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        java.lang.Class<?> wildcardClass39 = contentOptional38.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass3 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        java.lang.Class<?> wildcardClass5 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        java.lang.Class<?> wildcardClass45 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        java.lang.String[] strArray6 = new java.lang.String[] { "#/components/schemas/", "", "", "hi!", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass6 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        java.lang.Class<?> wildcardClass36 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        javax.ws.rs.Produces produces81 = null;
        javax.ws.rs.Produces produces82 = null;
        io.swagger.oas.models.Components components83 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional84 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces81, produces82, components83);
        javax.ws.rs.Produces produces85 = null;
        javax.ws.rs.Produces produces86 = null;
        io.swagger.oas.models.Components components87 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional88 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces85, produces86, components87);
        javax.ws.rs.Produces produces89 = null;
        javax.ws.rs.Produces produces90 = null;
        io.swagger.oas.models.Components components91 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional92 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces89, produces90, components91);
        java.lang.Class<?> wildcardClass93 = apiResponsesOptional92.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        java.lang.Class<?> wildcardClass29 = contentOptional28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        java.lang.String[] strArray6 = new java.lang.String[] { "#/components/schemas/", "", "", "hi!", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass13 = strMap12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        java.lang.Class<?> wildcardClass21 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        java.lang.Class<?> wildcardClass31 = contentOptional30.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass11 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass25 = tagSetOptional24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass13 = tagSetOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "#/components/schemas/", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass10 = tagSetOptional9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass19 = tagSetOptional18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        java.lang.Class<?> wildcardClass33 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional28 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass29 = tagSetOptional28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass25 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass7 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        java.lang.Class<?> wildcardClass27 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass22 = strMap21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass20 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass26 = serverListOptional25.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        javax.ws.rs.Produces produces81 = null;
        javax.ws.rs.Produces produces82 = null;
        io.swagger.oas.models.Components components83 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional84 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces81, produces82, components83);
        javax.ws.rs.Produces produces85 = null;
        javax.ws.rs.Produces produces86 = null;
        io.swagger.oas.models.Components components87 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional88 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces85, produces86, components87);
        javax.ws.rs.Produces produces89 = null;
        javax.ws.rs.Produces produces90 = null;
        io.swagger.oas.models.Components components91 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional92 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces89, produces90, components91);
        javax.ws.rs.Produces produces93 = null;
        javax.ws.rs.Produces produces94 = null;
        io.swagger.oas.models.Components components95 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional96 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces93, produces94, components95);
        java.lang.Class<?> wildcardClass97 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass19 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass27 = serverListOptional26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        java.lang.Class<?> wildcardClass77 = apiResponsesOptional76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        java.lang.Class<?> wildcardClass23 = contentOptional22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        java.lang.Class<?> wildcardClass44 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass7 = tagSetOptional6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        java.lang.Class<?> wildcardClass17 = contentOptional16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        java.lang.Class<?> wildcardClass20 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass13 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass21 = serverListOptional20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass12 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass19 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass12 = tagSetOptional11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        java.lang.String[] strArray6 = new java.lang.String[] { "#/components/schemas/", "", "", "hi!", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass9 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass15 = strMap14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional28 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional29 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass30 = tagSetOptional29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "#/components/schemas/", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass11 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass8 = strMap7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional45 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional47 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components46);
        java.lang.Class<?> wildcardClass48 = parameterListOptional47.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        java.lang.String[] strArray1 = new java.lang.String[] { "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        java.lang.Class<?> wildcardClass53 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass18 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        java.lang.Class<?> wildcardClass41 = apiResponsesOptional40.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass7 = strArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        java.lang.Class<?> wildcardClass43 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        javax.ws.rs.Produces produces69 = null;
        javax.ws.rs.Produces produces70 = null;
        io.swagger.oas.models.Components components71 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional72 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces69, produces70, components71);
        javax.ws.rs.Produces produces73 = null;
        javax.ws.rs.Produces produces74 = null;
        io.swagger.oas.models.Components components75 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional76 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces73, produces74, components75);
        javax.ws.rs.Produces produces77 = null;
        javax.ws.rs.Produces produces78 = null;
        io.swagger.oas.models.Components components79 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional80 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces77, produces78, components79);
        javax.ws.rs.Produces produces81 = null;
        javax.ws.rs.Produces produces82 = null;
        io.swagger.oas.models.Components components83 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional84 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces81, produces82, components83);
        javax.ws.rs.Produces produces85 = null;
        javax.ws.rs.Produces produces86 = null;
        io.swagger.oas.models.Components components87 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional88 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces85, produces86, components87);
        java.lang.Class<?> wildcardClass89 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components55);
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional58 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components57);
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional60 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components59);
        io.swagger.oas.models.Components components61 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional62 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components61);
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional64 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components63);
        io.swagger.oas.models.Components components65 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional66 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components65);
        java.lang.Class<?> wildcardClass67 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass11 = tagSetOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass8 = strMap7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass27 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional45 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional47 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components46);
        io.swagger.oas.models.Components components48 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional49 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components48);
        io.swagger.oas.models.Components components50 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional51 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components50);
        io.swagger.oas.models.Components components52 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional53 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components52);
        java.lang.Class<?> wildcardClass54 = parameterListOptional53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        java.lang.Class<?> wildcardClass21 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        java.lang.Class<?> wildcardClass18 = parameterListOptional17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional27 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional28 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass29 = strArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass23 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass21 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap25 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass26 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional50 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components49);
        java.lang.Class<?> wildcardClass51 = parameterListOptional50.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass9 = strMap8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass25 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass6 = tagSetOptional5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional20 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional21 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional22 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional23 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional24 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional25 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional26 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass27 = tagSetOptional26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        java.lang.Class<?> wildcardClass35 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional45 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional47 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components46);
        io.swagger.oas.models.Components components48 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional49 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components48);
        io.swagger.oas.models.Components components50 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional51 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components50);
        java.lang.Class<?> wildcardClass52 = parameterListOptional51.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass16 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components55);
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional58 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components57);
        java.lang.Class<?> wildcardClass59 = contentOptional58.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass6 = strArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass23 = strMap22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass12 = tagSetOptional11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass15 = serverListOptional14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass5 = tagSetOptional4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        java.lang.Class<?> wildcardClass47 = contentOptional46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional50 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional52 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional54 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components53);
        java.lang.Class<?> wildcardClass55 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components55);
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional58 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components57);
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional60 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components59);
        java.lang.Class<?> wildcardClass61 = contentOptional60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass5 = strArray2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        java.lang.Class<?> wildcardClass45 = parameterListOptional44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass13 = strArray3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        java.lang.String[] strArray4 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass12 = tagSetOptional11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass11 = tagSetOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "", "#/components/schemas/", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass8 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional30 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass31 = serverListOptional30.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray2);
        java.lang.Class<?> wildcardClass14 = tagSetOptional13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass20 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass15 = serverListOptional14.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional17 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional18 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional19 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass20 = tagSetOptional19.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass24 = strMap23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass18 = strMap17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        java.lang.Class<?> wildcardClass37 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass17 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass15 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass8 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        java.lang.Class<?> wildcardClass45 = contentOptional44.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass21 = serverListOptional20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        java.lang.Class<?> wildcardClass24 = parameterListOptional23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass29 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass27 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass21 = strMap20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap25 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass27 = strMap26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        java.lang.Class<?> wildcardClass55 = contentOptional54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "#/components/schemas/", "", "hi!", "hi!", "" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional14 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional15 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional16 = io.swagger.jaxrs2.OperationParser.getTags(strArray6);
        java.lang.Class<?> wildcardClass17 = tagSetOptional16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional48 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional50 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional52 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional54 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components53);
        java.lang.Class<?> wildcardClass55 = parameterListOptional54.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        io.swagger.oas.annotations.responses.ApiResponse[] apiResponseArray0 = new io.swagger.oas.annotations.responses.ApiResponse[] {};
        javax.ws.rs.Produces produces1 = null;
        javax.ws.rs.Produces produces2 = null;
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional4 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces1, produces2, components3);
        javax.ws.rs.Produces produces5 = null;
        javax.ws.rs.Produces produces6 = null;
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional8 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces5, produces6, components7);
        javax.ws.rs.Produces produces9 = null;
        javax.ws.rs.Produces produces10 = null;
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional12 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces9, produces10, components11);
        javax.ws.rs.Produces produces13 = null;
        javax.ws.rs.Produces produces14 = null;
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional16 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces13, produces14, components15);
        javax.ws.rs.Produces produces17 = null;
        javax.ws.rs.Produces produces18 = null;
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional20 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces17, produces18, components19);
        javax.ws.rs.Produces produces21 = null;
        javax.ws.rs.Produces produces22 = null;
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional24 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces21, produces22, components23);
        javax.ws.rs.Produces produces25 = null;
        javax.ws.rs.Produces produces26 = null;
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional28 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces25, produces26, components27);
        javax.ws.rs.Produces produces29 = null;
        javax.ws.rs.Produces produces30 = null;
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional32 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces29, produces30, components31);
        javax.ws.rs.Produces produces33 = null;
        javax.ws.rs.Produces produces34 = null;
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional36 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces33, produces34, components35);
        javax.ws.rs.Produces produces37 = null;
        javax.ws.rs.Produces produces38 = null;
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional40 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces37, produces38, components39);
        javax.ws.rs.Produces produces41 = null;
        javax.ws.rs.Produces produces42 = null;
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional44 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces41, produces42, components43);
        javax.ws.rs.Produces produces45 = null;
        javax.ws.rs.Produces produces46 = null;
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional48 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces45, produces46, components47);
        javax.ws.rs.Produces produces49 = null;
        javax.ws.rs.Produces produces50 = null;
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional52 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces49, produces50, components51);
        javax.ws.rs.Produces produces53 = null;
        javax.ws.rs.Produces produces54 = null;
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional56 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces53, produces54, components55);
        javax.ws.rs.Produces produces57 = null;
        javax.ws.rs.Produces produces58 = null;
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional60 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces57, produces58, components59);
        javax.ws.rs.Produces produces61 = null;
        javax.ws.rs.Produces produces62 = null;
        io.swagger.oas.models.Components components63 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional64 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces61, produces62, components63);
        javax.ws.rs.Produces produces65 = null;
        javax.ws.rs.Produces produces66 = null;
        io.swagger.oas.models.Components components67 = null;
        java.util.Optional<io.swagger.oas.models.responses.ApiResponses> apiResponsesOptional68 = io.swagger.jaxrs2.OperationParser.getApiResponses(apiResponseArray0, produces65, produces66, components67);
        java.lang.Class<?> wildcardClass69 = apiResponseArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponseArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(apiResponsesOptional68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass29 = serverListOptional28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass11 = strArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass4 = tagSetOptional3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        java.lang.String[] strArray1 = new java.lang.String[] { "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass11 = tagSetOptional10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass22 = strMap21.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass24 = serverArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        java.lang.String[] strArray0 = new java.lang.String[] {};
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional1 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray0);
        java.lang.Class<?> wildcardClass3 = strArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass3 = serverListOptional2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass14 = strMap13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        java.lang.Class<?> wildcardClass33 = contentOptional32.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass18 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        java.lang.String[] strArray1 = new java.lang.String[] { "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional2 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional3 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray1);
        java.lang.Class<?> wildcardClass8 = tagSetOptional7.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        io.swagger.oas.annotations.Parameter[] parameterArray0 = new io.swagger.oas.annotations.Parameter[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional2 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional4 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional6 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional8 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional10 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional12 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional14 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional16 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional18 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional20 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional22 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional24 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional26 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional28 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional30 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional32 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional34 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional36 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional38 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional40 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional42 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional44 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional46 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray0, components45);
        java.lang.Class<?> wildcardClass47 = parameterArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass8 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        io.swagger.oas.annotations.Parameter parameter0 = null;
        io.swagger.oas.annotations.Parameter[] parameterArray1 = new io.swagger.oas.annotations.Parameter[] { parameter0 };
        io.swagger.oas.models.Components components2 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional3 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components2);
        io.swagger.oas.models.Components components4 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional5 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components4);
        io.swagger.oas.models.Components components6 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional7 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components6);
        io.swagger.oas.models.Components components8 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional9 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components8);
        io.swagger.oas.models.Components components10 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional11 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components10);
        io.swagger.oas.models.Components components12 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional13 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components12);
        io.swagger.oas.models.Components components14 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional15 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components14);
        io.swagger.oas.models.Components components16 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional17 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components16);
        io.swagger.oas.models.Components components18 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional19 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components18);
        io.swagger.oas.models.Components components20 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional21 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components20);
        io.swagger.oas.models.Components components22 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional23 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components22);
        io.swagger.oas.models.Components components24 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional25 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components24);
        io.swagger.oas.models.Components components26 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional27 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components26);
        io.swagger.oas.models.Components components28 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional29 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components28);
        io.swagger.oas.models.Components components30 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional31 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components30);
        io.swagger.oas.models.Components components32 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional33 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components32);
        io.swagger.oas.models.Components components34 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional35 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components34);
        io.swagger.oas.models.Components components36 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional37 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components36);
        io.swagger.oas.models.Components components38 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional39 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components38);
        io.swagger.oas.models.Components components40 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional41 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components40);
        io.swagger.oas.models.Components components42 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional43 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components42);
        io.swagger.oas.models.Components components44 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional45 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components44);
        io.swagger.oas.models.Components components46 = null;
        java.util.Optional<java.util.List<io.swagger.oas.models.parameters.Parameter>> parameterListOptional47 = io.swagger.jaxrs2.OperationParser.getParametersList(parameterArray1, components46);
        java.lang.Class<?> wildcardClass48 = parameterArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(parameterListOptional47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass8 = linkArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        io.swagger.oas.annotations.servers.Server server0 = null;
        io.swagger.oas.annotations.servers.Server[] serverArray1 = new io.swagger.oas.annotations.servers.Server[] { server0 };
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray1);
        java.lang.Class<?> wildcardClass24 = serverListOptional23.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        io.swagger.oas.annotations.media.Content[] contentArray0 = new io.swagger.oas.annotations.media.Content[] {};
        io.swagger.oas.models.Components components1 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional2 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components1);
        io.swagger.oas.models.Components components3 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional4 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components3);
        io.swagger.oas.models.Components components5 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional6 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components5);
        io.swagger.oas.models.Components components7 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional8 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components7);
        io.swagger.oas.models.Components components9 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional10 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components9);
        io.swagger.oas.models.Components components11 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional12 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components11);
        io.swagger.oas.models.Components components13 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional14 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components13);
        io.swagger.oas.models.Components components15 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional16 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components15);
        io.swagger.oas.models.Components components17 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional18 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components17);
        io.swagger.oas.models.Components components19 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional20 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components19);
        io.swagger.oas.models.Components components21 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional22 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components21);
        io.swagger.oas.models.Components components23 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional24 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components23);
        io.swagger.oas.models.Components components25 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional26 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components25);
        io.swagger.oas.models.Components components27 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional28 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components27);
        io.swagger.oas.models.Components components29 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional30 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components29);
        io.swagger.oas.models.Components components31 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional32 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components31);
        io.swagger.oas.models.Components components33 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional34 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components33);
        io.swagger.oas.models.Components components35 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional36 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components35);
        io.swagger.oas.models.Components components37 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional38 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components37);
        io.swagger.oas.models.Components components39 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional40 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components39);
        io.swagger.oas.models.Components components41 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional42 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components41);
        io.swagger.oas.models.Components components43 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional44 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components43);
        io.swagger.oas.models.Components components45 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional46 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components45);
        io.swagger.oas.models.Components components47 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional48 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components47);
        io.swagger.oas.models.Components components49 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional50 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components49);
        io.swagger.oas.models.Components components51 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional52 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components51);
        io.swagger.oas.models.Components components53 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional54 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components53);
        io.swagger.oas.models.Components components55 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional56 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components55);
        io.swagger.oas.models.Components components57 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional58 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components57);
        io.swagger.oas.models.Components components59 = null;
        java.util.Optional<io.swagger.oas.models.media.Content> contentOptional60 = io.swagger.jaxrs2.OperationParser.getContents(contentArray0, components59);
        java.lang.Class<?> wildcardClass61 = contentArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(contentOptional60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!", "", "", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass9 = tagSetOptional8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        io.swagger.oas.annotations.links.Link[] linkArray0 = new io.swagger.oas.annotations.links.Link[] {};
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap1 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap25 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap28 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray0);
        java.lang.Class<?> wildcardClass29 = strMap28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional21 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional22 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional23 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional24 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional25 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional26 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional27 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional28 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional29 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass30 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional15 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional16 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional17 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional18 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional19 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional20 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass21 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        io.swagger.oas.annotations.servers.Server[] serverArray0 = new io.swagger.oas.annotations.servers.Server[] {};
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional1 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional2 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional3 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional4 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional5 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional6 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional7 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional8 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional9 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional10 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional11 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional12 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional13 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.util.Optional<java.util.List<io.swagger.oas.models.servers.Server>> serverListOptional14 = io.swagger.jaxrs2.OperationParser.getServers(serverArray0);
        java.lang.Class<?> wildcardClass15 = serverArray0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverArray0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(serverListOptional14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        java.lang.String[] strArray5 = new java.lang.String[] { "#/components/schemas/", "hi!", "#/components/schemas/", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional13 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass14 = strArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass11 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        java.lang.String[] strArray3 = new java.lang.String[] { "", "#/components/schemas/", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional4 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray3);
        java.lang.Class<?> wildcardClass13 = tagSetOptional12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "#/components/schemas/", "hi!" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional5 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional10 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional11 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional12 = io.swagger.jaxrs2.OperationParser.getTags(strArray4);
        java.lang.Class<?> wildcardClass13 = strArray4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "hi!", "#/components/schemas/" };
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional6 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional7 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional8 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.util.Optional<java.util.Set<io.swagger.oas.models.tags.Tag>> tagSetOptional9 = io.swagger.jaxrs2.OperationParser.getTags(strArray5);
        java.lang.Class<?> wildcardClass10 = tagSetOptional9.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(tagSetOptional9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        io.swagger.oas.annotations.links.Link link0 = null;
        io.swagger.oas.annotations.links.Link[] linkArray1 = new io.swagger.oas.annotations.links.Link[] { link0 };
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap2 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap3 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap4 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap5 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap6 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap7 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap8 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap9 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap10 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap11 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap12 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap13 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap14 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap15 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap16 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap17 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap18 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap19 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap20 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap21 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap22 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap23 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap24 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap25 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap26 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap27 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap28 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap29 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.util.Map<java.lang.String, io.swagger.oas.models.links.Link> strMap30 = io.swagger.jaxrs2.OperationParser.getLinks(linkArray1);
        java.lang.Class<?> wildcardClass31 = linkArray1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(linkArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(strMap30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }
}

