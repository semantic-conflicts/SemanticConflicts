/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 01:38:29 GMT 2020
 */

package org.elasticsearch.index.query.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStream;
import java.util.List;
import java.util.Spliterator;
import java.util.function.Consumer;
import org.apache.lucene.index.LeafReaderContext;
import org.apache.lucene.search.DisjunctionMaxQuery;
import org.apache.lucene.search.IndexSearcher;
import org.apache.lucene.search.NumericRangeQuery;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.TermRangeQuery;
import org.apache.lucene.search.Weight;
import org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter;
import org.apache.lucene.search.join.BitDocIdSetFilter;
import org.elasticsearch.action.get.MultiGetRequest;
import org.elasticsearch.common.bytes.BytesReference;
import org.elasticsearch.common.unit.Fuzziness;
import org.elasticsearch.common.xcontent.XContentGenerator;
import org.elasticsearch.common.xcontent.XContentParser;
import org.elasticsearch.common.xcontent.cbor.CborXContent;
import org.elasticsearch.common.xcontent.json.JsonXContent;
import org.elasticsearch.index.Index;
import org.elasticsearch.index.mapper.Mapper;
import org.elasticsearch.index.mapper.MergeResult;
import org.elasticsearch.index.mapper.core.BooleanFieldMapper;
import org.elasticsearch.index.mapper.object.ObjectMapper;
import org.elasticsearch.index.query.MoreLikeThisQueryBuilder;
import org.elasticsearch.index.query.QueryBuilder;
import org.elasticsearch.index.query.QueryParseContext;
import org.elasticsearch.index.query.QueryShardContext;
import org.elasticsearch.index.query.TypeQueryBuilder;
import org.elasticsearch.index.query.support.NestedInnerQueryParseSupport;
import org.elasticsearch.indices.query.IndicesQueriesRegistry;
import org.elasticsearch.search.fetch.FetchSubPhase;
import org.elasticsearch.search.internal.SearchContext;
import org.elasticsearch.search.lookup.LeafIndexLookup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NestedInnerQueryParseSupport_ESTest extends NestedInnerQueryParseSupport_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "received ping request while not started";
      String string1 = "routing is required for [";
      String string2 = "\"$>";
      boolean boolean0 = false;
      TermRangeQuery termRangeQuery0 = TermRangeQuery.newStringRange(string0, string1, string2, boolean0, nestedInnerQueryParseSupport0.queryParsed);
      String string3 = termRangeQuery0.toString();
      nestedInnerQueryParseSupport0.innerFilter = (Query) termRangeQuery0;
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      nestedInnerQueryParseSupport0.nestedObjectMapper = objectMapper0;
      TypeQueryBuilder typeQueryBuilder0 = new TypeQueryBuilder(objectMapper0.CONTENT_TYPE);
      boolean boolean1 = termRangeQuery0.equals(typeQueryBuilder0);
      nestedInnerQueryParseSupport0.innerQuery = (Query) termRangeQuery0;
      boolean boolean2 = nestedInnerQueryParseSupport0.filterFound();
      ObjectMapper objectMapper1 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      boolean boolean3 = false;
      nestedInnerQueryParseSupport0.queryParsed = boolean3;
      String string4 = "aH]+a$N\"#A;O^!J";
      String string5 = termRangeQuery0.toString(string4);
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      IndicesQueriesRegistry indicesQueriesRegistry0 = null;
      JsonXContent jsonXContent0 = JsonXContent.jsonXContent;
      byte[] byteArray0 = new byte[6];
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      byte byte0 = (byte)23;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-22);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-112);
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-1);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-76);
      byteArray0[5] = byte5;
      XContentParser xContentParser0 = jsonXContent0.createParser(byteArray0);
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = null;
      try {
        nestedInnerQueryParseSupport1 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      String string0 = "";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      String string0 = nestedInnerQueryParseSupport0.getPath();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      float float0 = 0.0F;
      DisjunctionMaxQuery disjunctionMaxQuery0 = new DisjunctionMaxQuery(float0);
      DisjunctionMaxQuery disjunctionMaxQuery1 = disjunctionMaxQuery0.clone();
      nestedInnerQueryParseSupport0.innerFilter = (Query) disjunctionMaxQuery1;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = false;
      boolean boolean2 = false;
      boolean boolean3 = true;
      boolean boolean4 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean1, boolean2, boolean3);
      boolean boolean5 = nestedInnerQueryParseSupport0.queryFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = nestedInnerQueryParseSupport0.getPath();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean0, boolean1, boolean0);
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "alde";
      Index index0 = new Index(string0);
      IndicesQueriesRegistry indicesQueriesRegistry0 = null;
      QueryParseContext queryParseContext0 = new QueryParseContext(index0, indicesQueriesRegistry0);
      nestedInnerQueryParseSupport0.parseContext = queryParseContext0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean1;
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean2 = true;
      boolean boolean3 = true;
      boolean boolean4 = false;
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-56);
      byteArray0[0] = byte0;
      byte byte1 = (byte)81;
      byteArray0[1] = byte1;
      byte byte2 = (byte)40;
      byteArray0[2] = byte2;
      byte byte3 = (byte)14;
      byteArray0[3] = byte3;
      byte byte4 = (byte)1;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-6);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-108);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-16);
      byteArray0[7] = byte7;
      boolean boolean5 = FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      String string1 = "";
      Query query1 = nestedInnerQueryParseSupport0.getInnerFilter();
      long long0 = (-2287L);
      System.setCurrentTimeMillis(long0);
      System.setCurrentTimeMillis(byteArray0[6]);
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "org.elasticsearch.discovery.DiscoverySettings";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      QueryParseContext queryParseContext0 = null;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "u\"DX~yDj!*\\";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      MoreLikeThisQueryBuilder.Item moreLikeThisQueryBuilder_Item0 = new MoreLikeThisQueryBuilder.Item(nestedInnerQueryParseSupport0.path);
      QueryParseContext queryParseContext0 = nestedInnerQueryParseSupport0.parseContext;
      nestedInnerQueryParseSupport0.parseContext = queryParseContext0;
      BytesReference bytesReference0 = moreLikeThisQueryBuilder_Item0.doc();
      String string0 = "[nested] nested object under path [";
      MultiGetRequest.Item multiGetRequest_Item0 = moreLikeThisQueryBuilder_Item0.routing(string0);
      nestedInnerQueryParseSupport0.source = bytesReference0;
      String string1 = nestedInnerQueryParseSupport0.getPath();
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BooleanFieldMapper.BooleanFieldType booleanFieldMapper_BooleanFieldType0 = new BooleanFieldMapper.BooleanFieldType();
      Object object0 = null;
      Fuzziness fuzziness0 = null;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      String string0 = "";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      XContentParser xContentParser0 = null;
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      CborXContent cborXContent0 = CborXContent.cborXContent;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)15;
      byteArray0[0] = byte0;
      byte byte1 = (byte)47;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-8);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-40);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)127;
      byteArray0[5] = byte5;
      String string0 = "MergeInfo must not be null if context is MERGE";
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(string0);
      XContentGenerator xContentGenerator0 = cborXContent0.createGenerator((OutputStream) mockFileOutputStream0);
      int int0 = 1833;
      XContentParser xContentParser0 = cborXContent0.createParser(byteArray0, int0, (int) byteArray0[3]);
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "";
      String string1 = "%";
      int int0 = 0;
      Integer integer0 = new Integer(int0);
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      boolean boolean1 = true;
      boolean boolean2 = false;
      NumericRangeQuery<Integer> numericRangeQuery0 = NumericRangeQuery.newIntRange(string1, integer0, integer0, boolean1, boolean2);
      nestedInnerQueryParseSupport0.innerFilter = (Query) numericRangeQuery0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      boolean boolean1 = new Boolean(nestedInnerQueryParseSupport0.path);
      String string0 = nestedInnerQueryParseSupport0.getPath();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      float float0 = 0.0F;
      DisjunctionMaxQuery disjunctionMaxQuery0 = new DisjunctionMaxQuery(float0);
      DisjunctionMaxQuery disjunctionMaxQuery1 = disjunctionMaxQuery0.clone();
      nestedInnerQueryParseSupport0.innerFilter = (Query) disjunctionMaxQuery1;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(nestedInnerQueryParseSupport0.path);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean1;
      EvoSuiteFile evoSuiteFile1 = null;
      boolean boolean2 = false;
      boolean boolean3 = false;
      boolean boolean4 = false;
      boolean boolean5 = FileSystemHandling.setPermissions(evoSuiteFile1, boolean2, boolean3, boolean4);
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      boolean boolean6 = FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte) (-56);
      byteArray0[0] = byte0;
      byte byte1 = (byte)81;
      byteArray0[1] = byte1;
      byte byte2 = (byte)40;
      byteArray0[2] = byte2;
      byte byte3 = (byte)14;
      byteArray0[3] = byte3;
      byte byte4 = (byte)1;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-6);
      byteArray0[5] = byte5;
      byte byte6 = (byte) (-108);
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-16);
      byteArray0[7] = byte7;
      boolean boolean7 = FileSystemHandling.appendDataToFile(evoSuiteFile1, byteArray0);
      String string1 = "";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }
}
