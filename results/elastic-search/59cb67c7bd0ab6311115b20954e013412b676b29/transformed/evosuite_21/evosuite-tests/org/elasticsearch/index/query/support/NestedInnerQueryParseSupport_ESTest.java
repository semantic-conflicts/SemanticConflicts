/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 00:45:01 GMT 2020
 */

package org.elasticsearch.index.query.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableList;
import java.io.InputStream;
import java.util.Spliterator;
import org.apache.lucene.index.FilterLeafReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.LeafReader;
import org.apache.lucene.index.Term;
import org.apache.lucene.search.MultiPhraseQuery;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.RegexpQuery;
import org.apache.lucene.search.join.BitDocIdSetFilter;
import org.apache.lucene.util.BytesRef;
import org.apache.lucene.util.automaton.AutomatonProvider;
import org.elasticsearch.cache.recycler.PageCacheRecycler;
import org.elasticsearch.common.bytes.BytesArray;
import org.elasticsearch.common.bytes.BytesReference;
import org.elasticsearch.common.bytes.ReleasablePagedBytesReference;
import org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput;
import org.elasticsearch.common.io.stream.StreamInput;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.text.StringText;
import org.elasticsearch.common.unit.ByteSizeValue;
import org.elasticsearch.common.unit.Fuzziness;
import org.elasticsearch.common.util.BigArrays;
import org.elasticsearch.common.xcontent.XContentParser;
import org.elasticsearch.common.xcontent.cbor.CborXContent;
import org.elasticsearch.common.xcontent.json.JsonXContent;
import org.elasticsearch.common.xcontent.yaml.YamlXContent;
import org.elasticsearch.index.Index;
import org.elasticsearch.index.analysis.AnalyzerScope;
import org.elasticsearch.index.analysis.NamedAnalyzer;
import org.elasticsearch.index.mapper.FieldMapper;
import org.elasticsearch.index.mapper.Mapper;
import org.elasticsearch.index.mapper.SourceToParse;
import org.elasticsearch.index.mapper.core.BooleanFieldMapper;
import org.elasticsearch.index.mapper.core.CompletionFieldMapper;
import org.elasticsearch.index.mapper.internal.AllFieldMapper;
import org.elasticsearch.index.mapper.ip.IpFieldMapper;
import org.elasticsearch.index.mapper.object.ObjectMapper;
import org.elasticsearch.index.query.ExistsQueryBuilder;
import org.elasticsearch.index.query.QueryBuilder;
import org.elasticsearch.index.query.QueryParseContext;
import org.elasticsearch.index.query.QueryShardContext;
import org.elasticsearch.index.query.support.NestedInnerQueryParseSupport;
import org.elasticsearch.indices.breaker.HierarchyCircuitBreakerService;
import org.elasticsearch.indices.query.IndicesQueriesRegistry;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.search.fetch.FetchSubPhase;
import org.elasticsearch.search.internal.SearchContext;
import org.elasticsearch.threadpool.ThreadPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NestedInnerQueryParseSupport_ESTest extends NestedInnerQueryParseSupport_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      nestedInnerQueryParseSupport0.filterFound = nestedInnerQueryParseSupport0.queryFound;
      nestedInnerQueryParseSupport0.parentFilter = nestedInnerQueryParseSupport0.childFilter;
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      String string0 = nestedInnerQueryParseSupport0.getPath();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)6;
      byteArray0[0] = byte0;
      byte byte1 = (byte)69;
      byteArray0[1] = byteArray0[0];
      byte byte2 = (byte)1;
      BytesArray bytesArray0 = new BytesArray(byteArray0);
      SourceToParse sourceToParse0 = SourceToParse.source((BytesReference) bytesArray0);
      XContentParser xContentParser0 = sourceToParse0.parser();
      SourceToParse sourceToParse1 = SourceToParse.source((BytesReference) bytesArray0);
      SourceToParse sourceToParse2 = SourceToParse.source(xContentParser0);
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      boolean boolean2 = true;
      boolean boolean3 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean3;
      nestedInnerQueryParseSupport0.queryParsed = boolean3;
      Boolean boolean4 = new Boolean(nestedInnerQueryParseSupport0.path);
      Query query0 = nestedInnerQueryParseSupport0.getInnerQuery();
      String string0 = "{hu2";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      Settings settings0 = Settings.Builder.EMPTY_SETTINGS;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport1 = null;
      try {
        nestedInnerQueryParseSupport1 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(nestedInnerQueryParseSupport0.path);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      String string0 = "X|-Bx||V.Y";
      long long0 = 0L;
      System.setCurrentTimeMillis(long0);
      String string1 = "background_is_superset";
      boolean boolean1 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string1);
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      CborXContent cborXContent0 = CborXContent.cborXContent;
      String string0 = "l9W";
      StringText stringText0 = new StringText(string0);
      BytesReference bytesReference0 = stringText0.bytes();
      XContentParser xContentParser0 = cborXContent0.createParser(bytesReference0);
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "|5[8@";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      XContentParser xContentParser0 = null;
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean1;
      Query query0 = nestedInnerQueryParseSupport0.getInnerQuery();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "src/test";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "n[?E`bd-4R";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "]";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean1 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean1;
      boolean boolean2 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean2;
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      boolean boolean3 = nestedInnerQueryParseSupport0.filterFound();
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = nestedInnerQueryParseSupport0.getPath();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      ObjectMapper objectMapper0 = null;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      boolean boolean2 = true;
      boolean boolean3 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean3;
      nestedInnerQueryParseSupport0.queryParsed = boolean2;
      MultiPhraseQuery multiPhraseQuery0 = new MultiPhraseQuery();
      IndexReader indexReader0 = null;
      Query query0 = multiPhraseQuery0.rewrite(indexReader0);
      nestedInnerQueryParseSupport0.innerQuery = query0;
      boolean boolean4 = nestedInnerQueryParseSupport0.filterFound();
      Query query1 = nestedInnerQueryParseSupport0.getInnerQuery();
      String string0 = "{hu2";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }
}
