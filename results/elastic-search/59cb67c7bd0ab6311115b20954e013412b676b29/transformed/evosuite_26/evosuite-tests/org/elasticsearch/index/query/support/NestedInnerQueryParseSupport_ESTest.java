/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 01:13:49 GMT 2020
 */

package org.elasticsearch.index.query.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import java.io.OutputStream;
import java.util.Iterator;
import java.util.List;
import org.apache.lucene.index.ExitableDirectoryReader;
import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.LeafReader;
import org.apache.lucene.index.LeafReaderContext;
import org.apache.lucene.index.QueryTimeoutImpl;
import org.apache.lucene.index.Term;
import org.apache.lucene.search.MultiPhraseQuery;
import org.apache.lucene.search.NGramPhraseQuery;
import org.apache.lucene.search.PrefixQuery;
import org.apache.lucene.search.Query;
import org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter;
import org.apache.lucene.search.join.BitDocIdSetFilter;
import org.elasticsearch.common.ParseField;
import org.elasticsearch.common.ParseFieldMatcher;
import org.elasticsearch.common.bytes.BytesArray;
import org.elasticsearch.common.bytes.BytesReference;
import org.elasticsearch.common.xcontent.XContentParser;
import org.elasticsearch.common.xcontent.json.JsonXContent;
import org.elasticsearch.index.mapper.Mapper;
import org.elasticsearch.index.mapper.object.ObjectMapper;
import org.elasticsearch.index.query.FuzzyQueryBuilder;
import org.elasticsearch.index.query.QueryParseContext;
import org.elasticsearch.index.query.QueryShardContext;
import org.elasticsearch.index.query.support.NestedInnerQueryParseSupport;
import org.elasticsearch.search.aggregations.Aggregator;
import org.elasticsearch.search.fetch.FetchSubPhase;
import org.elasticsearch.search.internal.SearchContext;
import org.elasticsearch.search.internal.SubSearchContext;
import org.elasticsearch.search.sort.SortParseElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.netty.buffer.ChannelBuffer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NestedInnerQueryParseSupport_ESTest extends NestedInnerQueryParseSupport_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean1 = FileSystemHandling.createFolder(evoSuiteFile0);
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      String string0 = "";
      FuzzyQueryBuilder fuzzyQueryBuilder0 = new FuzzyQueryBuilder(string0, boolean1);
      ChannelBuffer[] channelBufferArray0 = new ChannelBuffer[8];
      byte byte0 = (byte) (-65);
      byte byte1 = (byte) (-19);
      byte byte2 = (byte)32;
      byte byte3 = (byte) (-32);
      byte byte4 = (byte) (-123);
      byte byte5 = (byte)84;
      int int0 = 0;
      ObjectMapper objectMapper1 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      boolean boolean2 = nestedInnerQueryParseSupport0.filterFound();
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "y2^rep60p~l-fQ;%[e";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      MultiPhraseQuery multiPhraseQuery0 = new MultiPhraseQuery();
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      String string0 = nestedInnerQueryParseSupport0.getPath();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      nestedInnerQueryParseSupport0.childFilter = nestedInnerQueryParseSupport0.childFilter;
      String string0 = nestedInnerQueryParseSupport0.getPath();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      Query query0 = nestedInnerQueryParseSupport0.innerQuery;
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      String string0 = nestedInnerQueryParseSupport0.getPath();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      nestedInnerQueryParseSupport0.innerQuery = (Query) nestedInnerQueryParseSupport0.childFilter;
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      Query query0 = nestedInnerQueryParseSupport0.innerQuery;
      nestedInnerQueryParseSupport0.innerQuery = query0;
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      JsonXContent jsonXContent0 = JsonXContent.jsonXContent;
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)42;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)16;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-94);
      byteArray0[3] = byte3;
      XContentParser xContentParser0 = jsonXContent0.createParser(byteArray0);
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-6);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-7);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-96);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-22);
      byteArray0[3] = byte3;
      byte byte4 = (byte)1;
      byteArray0[4] = byte4;
      byte byte5 = (byte)55;
      byteArray0[5] = byte5;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      String string0 = ",99aI(dCvD2j";
      boolean boolean1 = true;
      BitDocIdSetFilter bitDocIdSetFilter0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = (-2839);
      float float0 = 0.45F;
      IndexReader indexReader0 = null;
      String string0 = "] but expected [";
      String string1 = "v^BdLw!n-|&oK=]im";
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      boolean boolean0 = true;
      int int0 = 0;
      NGramPhraseQuery nGramPhraseQuery0 = new NGramPhraseQuery(int0);
      nestedInnerQueryParseSupport0.innerQuery = (Query) nGramPhraseQuery0;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      boolean boolean2 = nestedInnerQueryParseSupport0.filterFound();
      Query query0 = nestedInnerQueryParseSupport0.getInnerQuery();
      long long0 = 1076L;
      System.setCurrentTimeMillis(long0);
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryShardContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = "X";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      QueryParseContext queryParseContext0 = nestedInnerQueryParseSupport0.parseContext;
      nestedInnerQueryParseSupport0.parseContext = queryParseContext0;
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      String string0 = "encoder";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.nestedObjectMapper;
      nestedInnerQueryParseSupport0.parentObjectMapper = objectMapper0;
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      boolean boolean1 = true;
      QueryParseContext queryParseContext0 = nestedInnerQueryParseSupport0.parseContext;
      nestedInnerQueryParseSupport0.parseContext = queryParseContext0;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      nestedInnerQueryParseSupport0.queryFound = boolean1;
      boolean boolean2 = nestedInnerQueryParseSupport0.queryFound();
      String string0 = "j2pZt:NOYn{GSzGlYu";
      SearchContext searchContext0 = null;
      SubSearchContext subSearchContext0 = new SubSearchContext(searchContext0);
      // Undeclared exception!
      try { 
        subSearchContext0.queryParserService();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.search.internal.FilteredSearchContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      String string0 = nestedInnerQueryParseSupport0.getPath();
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      int int0 = 0;
      NGramPhraseQuery nGramPhraseQuery0 = new NGramPhraseQuery(int0);
      nestedInnerQueryParseSupport0.innerQuery = (Query) nGramPhraseQuery0;
      nestedInnerQueryParseSupport0.queryParsed = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      boolean boolean2 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean2;
      long long0 = 2879L;
      System.setCurrentTimeMillis(long0);
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.resetPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.childFilter;
      nestedInnerQueryParseSupport0.childFilter = bitDocIdSetFilter0;
      boolean boolean0 = true;
      int int0 = 900099;
      NGramPhraseQuery nGramPhraseQuery0 = new NGramPhraseQuery(int0);
      nestedInnerQueryParseSupport0.innerQuery = (Query) nGramPhraseQuery0;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      boolean boolean2 = nestedInnerQueryParseSupport0.filterFound();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryShardException", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      QueryShardContext queryShardContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport();
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterParsed = boolean0;
      Query query0 = nestedInnerQueryParseSupport0.getInnerFilter();
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPathLevel();
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }
}
