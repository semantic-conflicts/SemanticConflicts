/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 22:20:32 GMT 2020
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import java.nio.Buffer;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.charset.Charset;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.ChannelBufferFactory;
import org.jboss.netty.buffer.CompositeChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ReadOnlyChannelBuffer;
import org.jboss.netty.buffer.SlicedChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelFuture;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelPipeline;
import org.jboss.netty.channel.ChannelState;
import org.jboss.netty.channel.DownstreamChannelStateEvent;
import org.jboss.netty.channel.FailedChannelFuture;
import org.jboss.netty.channel.UpstreamMessageEvent;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      int int0 = 4;
      int int1 = 3;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (4) must be equal to or greater than lengthFieldOffset (4) + lengthFieldLength (4).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn((ChannelPipeline) null).when(channel1).getPipeline();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel1).when(channelHandlerContext1).getChannel();
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int0 = 5;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(int0);
      long long0 = 1L;
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(lengthFieldBasedFrameDecoder0.lengthAdjustment);
      int int1 = (-1);
      long long1 = 185L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, long1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-114);
      byteArray0[1] = byte1;
      byte byte2 = (byte)38;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-1);
      byteArray0[3] = byte3;
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "sD;q7Oxfp^";
      boolean boolean0 = FileSystemHandling.appendLineToFile(evoSuiteFile0, string0);
      byteArray0[4] = byte0;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      int int0 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      int int0 = 0;
      lengthFieldBasedFrameDecoder0.lengthAdjustment = int0;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext1).getChannel();
      long long0 = (-1412L);
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long0;
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext1);
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      int int0 = 3;
      int int1 = (-4321);
      int int2 = (-872);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)13;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byteArray0[0] = byteArray0[0];
      byteArray0[3] = byte1;
      byte byte2 = (byte)8;
      byteArray0[4] = byte2;
      byte byte3 = (byte)0;
      byteArray0[5] = byte3;
      int int3 = (-71);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int4 = 601;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int4);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      String string0 = "negative pre-adjustment length field: ";
      boolean boolean0 = FileSystemHandling.appendStringToFile(evoSuiteFile0, string0);
      int int0 = 1179;
      int int1 = 1932;
      int int2 = (-568);
      int int3 = (-1535);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -1535
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      int int0 = 1200;
      int int1 = 6;
      int int2 = (-1119);
      int int3 = 3098;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int2, int3);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 6
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      Buffer buffer0 = byteBuffer0.rewind();
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer1);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, bigEndianHeapChannelBuffer0);
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, bigEndianHeapChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      int int0 = 1200;
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = 8;
      int int2 = (-1116);
      int int3 = 3098;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DirectChannelBufferFactory directChannelBufferFactory0 = null;
      try {
        directChannelBufferFactory0 = new DirectChannelBufferFactory(byteOrder0, lengthFieldBasedFrameDecoder0.lengthFieldEndOffset);
      } catch(IllegalArgumentException e) {
         //
         // preallocatedBufferCapacity must be greater than 0: 0
         //
         verifyException("org.jboss.netty.buffer.DirectChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      lengthFieldBasedFrameDecoder0.lengthAdjustment = (int) byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      Buffer buffer0 = byteBuffer0.rewind();
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = new Object();
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer1);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.nativeOrder();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory(byteOrder0);
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = byteArray0[0];
      byte byte0 = (byte)119;
      byteArray0[2] = byte0;
      byte byte1 = (byte) (-1);
      byteArray0[3] = byte1;
      byte byte2 = (byte)2;
      byteArray0[4] = byte2;
      byte byte3 = (byte)0;
      byteArray0[5] = byte3;
      byte byte4 = (byte) (-5);
      byteArray0[6] = byte4;
      byte byte5 = (byte)108;
      byteArray0[7] = byte5;
      byte byte6 = (byte)1;
      byteArray0[8] = byte6;
      int int0 = (-84);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 225;
      int int1 = (-53);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -53
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = 0;
      int int1 = 16;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      int int0 = 8;
      int int1 = (-463);
      int int2 = 1686;
      int int3 = 683;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int1);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -463
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      int int0 = 111;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 111
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 0;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.copy(int0, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      int int1 = 0;
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int1, int0);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      int int0 = (-63);
      int int1 = 8;
      int int2 = 3935;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int0, int2, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -63
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      int int0 = (-1262);
      int int1 = 1;
      int int2 = (-1660);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int2, int2);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -1262
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelBuffer channelBuffer0 = null;
      int int0 = (-1);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int0, int0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      int int0 = 2632;
      int int1 = 533;
      int int2 = (-1);
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int0, int2, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -1
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      long long0 = 0L;
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean0;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = 0L;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      ChannelHandlerContext channelHandlerContext0 = null;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)8;
      byteArray0[0] = byte0;
      byte byte1 = (byte)111;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte)12;
      byteArray0[3] = byte3;
      byte byte4 = (byte)8;
      byteArray0[4] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, littleEndianHeapChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = null;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = 3;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(byteOrder0, int0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int0, directChannelBufferFactory0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-13);
      byteArray0[0] = byte0;
      byte byte1 = (byte)6;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-121);
      byteArray0[2] = byte2;
      byte byte3 = (byte)18;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-16);
      byteArray0[4] = byte4;
      byte byte5 = (byte)0;
      byteArray0[5] = byte5;
      byte byte6 = (byte)0;
      byteArray0[6] = byte6;
      byte byte7 = (byte)76;
      byteArray0[7] = byte7;
      byte byte8 = (byte) (-125);
      byteArray0[8] = byte8;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.copy(lengthFieldBasedFrameDecoder0.lengthFieldEndOffset, (int) byte6);
      int int0 = 2;
      int int1 = (-762);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int0, int1);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      long long0 = 1L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-114);
      byteArray0[1] = byte1;
      byte byte2 = (byte)38;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-1);
      byteArray0[3] = byte3;
      byte byte4 = (byte)30;
      byteArray0[4] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      long long0 = (-1412L);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = (-1662);
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      int int0 = 2;
      int int1 = 0;
      int int2 = 64;
      int int3 = 4182;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int3, boolean0);
      int int4 = 1129;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(int4);
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.duplicate();
      int int5 = 4;
      int int6 = 1309;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int5, int6);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      int int0 = 303;
      int int1 = 0;
      int int2 = 8;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int3 = (-903);
      int int4 = (-477);
      DirectChannelBufferFactory directChannelBufferFactory0 = null;
      try {
        directChannelBufferFactory0 = new DirectChannelBufferFactory(int4);
      } catch(IllegalArgumentException e) {
         //
         // preallocatedBufferCapacity must be greater than 0: -477
         //
         verifyException("org.jboss.netty.buffer.DirectChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = 1908L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-114);
      byte byte2 = (byte)38;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = (int) byteArray0[0];
      byteArray0[2] = byte2;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      byte byte3 = (byte) (-1);
      byte byte4 = (byte)30;
      byteArray0[4] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      int int0 = 2908;
      int int1 = 4;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int0, boolean0);
      int int2 = 1370;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = int2;
      long long0 = (-4384L);
      int int3 = (-304);
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int3;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = int0;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int1;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      ChannelHandlerContext channelHandlerContext1 = null;
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext1);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, int0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = 1908L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long0;
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-114);
      byte byte2 = (byte)38;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = (int) byteArray0[0];
      lengthFieldBasedFrameDecoder0.lengthFieldLength = (int) byte2;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      byte byte3 = (byte) (-1);
      byte byte4 = (byte)30;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      int int0 = 1775;
      int int1 = 8;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-114);
      byteArray0[1] = byte1;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      byte byte2 = (byte)38;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-1);
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = (int) byte3;
      byte byte4 = (byte)30;
      byteArray0[4] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      String string0 = "n-}!AgTp<";
      MockThrowable mockThrowable0 = new MockThrowable(string0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable(string0, mockThrowable1);
      int int0 = 5;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(int0);
      long long0 = 1L;
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(lengthFieldBasedFrameDecoder0.lengthAdjustment);
      int int1 = (-1);
      long long1 = 185L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, long1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelBuffer channelBuffer0 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-114);
      byteArray0[1] = byte1;
      byte byte2 = (byte)38;
      int int0 = 2941;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-1);
      byteArray0[3] = byte3;
      byte byte4 = (byte)30;
      byteArray0[4] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, littleEndianHeapChannelBuffer0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      int int0 = 47;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, int0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean0;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      String string0 = "n-}!AgTp<";
      MockThrowable mockThrowable0 = new MockThrowable(string0);
      MockThrowable mockThrowable1 = new MockThrowable(mockThrowable0);
      MockThrowable mockThrowable2 = new MockThrowable(string0, mockThrowable1);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      FailedChannelFuture failedChannelFuture0 = new FailedChannelFuture(channel2, mockThrowable0);
      ChannelFuture channelFuture0 = failedChannelFuture0.await();
      ChannelState channelState0 = ChannelState.OPEN;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, lengthFieldBasedFrameDecoder0.initialBytesToStrip, heapChannelBufferFactory0);
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel3, dynamicChannelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      Buffer buffer0 = byteBuffer0.rewind();
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer1);
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = (int) byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer1);
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(lengthFieldBasedFrameDecoder0.lengthFieldLength);
      ReadOnlyChannelBuffer readOnlyChannelBuffer0 = new ReadOnlyChannelBuffer(littleEndianHeapChannelBuffer0);
      ByteOrder byteOrder0 = readOnlyChannelBuffer0.order();
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(byteOrder0);
      int int0 = 1630;
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(byteOrder0, int0);
      int int1 = 96;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int1, int0);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)12;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      lengthFieldBasedFrameDecoder0.bytesToDiscard = (long) int1;
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.ByteBufferBackedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)10;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      Buffer buffer0 = byteBuffer0.rewind();
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte2, byte1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, bigEndianHeapChannelBuffer0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, bigEndianHeapChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)0;
      byteArray0[1] = byte0;
      byte byte1 = (byte)0;
      byteArray0[2] = byte1;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ByteBuffer byteBuffer0 = bigEndianHeapChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      Buffer buffer0 = byteBuffer0.rewind();
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byte1, byte0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      byte byte2 = channelBuffer0.readByte();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer1);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, bigEndianHeapChannelBuffer0);
  }
}
