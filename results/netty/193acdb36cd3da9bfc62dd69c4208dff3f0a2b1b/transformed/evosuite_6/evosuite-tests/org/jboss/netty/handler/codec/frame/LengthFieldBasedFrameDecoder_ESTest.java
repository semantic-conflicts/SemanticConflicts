/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 22:09:03 GMT 2020
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetSocketAddress;
import java.net.SocketAddress;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.GatheringByteChannel;
import java.nio.channels.SocketChannel;
import java.nio.file.LinkOption;
import java.nio.file.OpenOption;
import java.nio.file.Path;
import java.nio.file.StandardOpenOption;
import java.util.LinkedHashSet;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.ChannelBufferFactory;
import org.jboss.netty.buffer.CompositeChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelFuture;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelPipeline;
import org.jboss.netty.channel.ChannelState;
import org.jboss.netty.channel.DefaultChannelFuture;
import org.jboss.netty.channel.DefaultChildChannelStateEvent;
import org.jboss.netty.channel.DownstreamChannelStateEvent;
import org.jboss.netty.channel.DownstreamMessageEvent;
import org.jboss.netty.channel.UpstreamChannelStateEvent;
import org.jboss.netty.channel.UpstreamMessageEvent;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      int int0 = 1928;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = null;
      byte[] byteArray0 = new byte[11];
      byte byte0 = (byte)123;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-7);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-64);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-7);
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-96);
      byteArray0[5] = byte5;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      int int0 = 2145;
      int int1 = 1902;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel0, littleEndianHeapChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)48;
      byteArray0[0] = byte0;
      byte byte1 = (byte)122;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, byte2, byte2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, byteArray0[0]);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)48;
      byteArray0[0] = byte0;
      byte byte1 = (byte)122;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean0;
      lengthFieldBasedFrameDecoder0.initialBytesToStrip = (int) byte2;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, byte2, byte2);
      Channel channel0 = null;
      ChannelHandlerContext channelHandlerContext0 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      EvoSuiteFile evoSuiteFile0 = null;
      int int0 = (-1762);
      int int1 = 1928;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int1;
      int int2 = 450;
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      int int0 = 4;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int1, int1);
      int int2 = (-2756);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)3;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-74);
      byteArray0[1] = byte1;
      byte byte2 = (byte)124;
      byteArray0[2] = byte2;
      byte byte3 = (byte)56;
      byteArray0[3] = byte3;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel0, littleEndianHeapChannelBuffer0);
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DefaultChannelFuture defaultChannelFuture0 = new DefaultChannelFuture(channel1, lengthFieldBasedFrameDecoder0.discardingTooLongFrame);
      ChannelState channelState0 = ChannelState.INTEREST_OPS;
      boolean boolean0 = defaultChannelFuture0.cancel();
      lengthFieldBasedFrameDecoder0.lengthFieldLength = int1;
      DownstreamChannelStateEvent downstreamChannelStateEvent0 = new DownstreamChannelStateEvent(channel1, defaultChannelFuture0, channelState0, lengthFieldBasedFrameDecoder0);
      boolean boolean1 = defaultChannelFuture0.await((long) lengthFieldBasedFrameDecoder0.maxFrameLength);
      String string0 = downstreamChannelStateEvent0.toString();
      String string1 = downstreamChannelStateEvent0.toString();
      String string2 = downstreamChannelStateEvent0.toString();
      lengthFieldBasedFrameDecoder0.channelDisconnected(channelHandlerContext0, downstreamChannelStateEvent0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext2, int1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 0;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int0;
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      lengthFieldBasedFrameDecoder0.bytesToDiscard = (long) lengthFieldBasedFrameDecoder0.lengthFieldOffset;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      int int0 = 0;
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.slice(int0, lengthFieldBasedFrameDecoder0.maxFrameLength);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = 0L;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      int int0 = 0;
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.slice(int0, lengthFieldBasedFrameDecoder0.maxFrameLength);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      int int0 = 46;
      int int1 = 8;
      int int2 = 360;
      int int3 = 2878;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, littleEndianHeapChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 2517;
      int int1 = (-1);
      int int2 = 15;
      int int3 = (-1827);
      boolean boolean1 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int2, boolean1);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -1
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = 186;
      int int1 = 0;
      int int2 = (-1349);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -1349
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = (-3832);
      int int1 = 347;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -3832
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelBuffer channelBuffer0 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      int int0 = 2174;
      int int1 = (-3311);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: -3311
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      int int0 = 1294;
      int int1 = (-318);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -318
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      long long0 = 255L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      int int0 = 3;
      int int1 = (-834);
      int int2 = (-756);
      int int3 = 0;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int2, int3, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -834
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      long long0 = 430L;
      int int0 = 8;
      lengthFieldBasedFrameDecoder0.initialBytesToStrip = int0;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = (-1001L);
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext1);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext2, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      int int0 = (-2);
      int int1 = 2;
      int int2 = 1316;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int2);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -2
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      String string0 = "";
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved(string0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      UpstreamMessageEvent upstreamMessageEvent0 = new UpstreamMessageEvent(channel0, lengthFieldBasedFrameDecoder0, inetSocketAddress0);
      lengthFieldBasedFrameDecoder0.messageReceived(channelHandlerContext0, upstreamMessageEvent0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory(byteOrder0);
      int int0 = 3;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(byteOrder0, int0);
      int int1 = 981;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int1, int1);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      int int0 = 8;
      int int1 = 64;
      int int2 = (-739);
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int2, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -739
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      int int0 = 1276;
      int int1 = 8;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      int int0 = 8;
      int int1 = 615;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (615) + lengthFieldLength (8).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelBuffer channelBuffer0 = null;
      int int0 = (-77);
      lengthFieldBasedFrameDecoder0.lengthAdjustment = int0;
      int int1 = (-1785);
      int int2 = 220;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int1, int2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.OPEN;
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, channelHandlerContext1);
      ChannelFuture channelFuture0 = upstreamChannelStateEvent0.getFuture();
      lengthFieldBasedFrameDecoder0.handleUpstream(channelHandlerContext1, upstreamChannelStateEvent0);
      int int0 = 32;
      lengthFieldBasedFrameDecoder0.maxFrameLength = int0;
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 2;
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      long long0 = 318L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      char[] charArray0 = new char[4];
      char char0 = 'Q';
      charArray0[0] = char0;
      char char1 = 'Z';
      charArray0[1] = char1;
      char char2 = 'U';
      charArray0[2] = char2;
      char char3 = '[';
      charArray0[3] = char3;
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(byteOrder0);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)8;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-77);
      byteArray0[3] = byte3;
      int int0 = 2473;
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(byteOrder1, byteArray0, int0, (int) byte2);
      int int1 = (-537);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, byteArray0[1], int1);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = (-1165);
      int int1 = 4;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = (long) int1;
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn((ChannelPipeline) null).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.OPEN;
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, channelHandlerContext1);
      ChannelFuture channelFuture0 = upstreamChannelStateEvent0.getFuture();
      lengthFieldBasedFrameDecoder0.handleUpstream(channelHandlerContext1, upstreamChannelStateEvent0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      lengthFieldBasedFrameDecoder0.channelDisconnected(channelHandlerContext2, upstreamChannelStateEvent0);
      lengthFieldBasedFrameDecoder0.maxFrameLength = lengthFieldBasedFrameDecoder0.lengthFieldOffset;
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel1).getPipeline();
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel1).when(channelHandlerContext3).getChannel();
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext3);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext4).getChannel();
      long long0 = 335L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext4, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      long long0 = (-1L);
      ChannelHandlerContext channelHandlerContext1 = null;
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)124;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-46);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-5);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-38);
      byteArray0[3] = byte3;
      byte byte4 = (byte)1;
      byteArray0[4] = byte4;
      byte byte5 = (byte)4;
      byteArray0[5] = byte5;
      byte byte6 = (byte)58;
      byteArray0[6] = byte6;
      byte byte7 = (byte) (-1);
      byteArray0[7] = byte7;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, littleEndianHeapChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 1555;
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.OPEN;
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, channelHandlerContext1);
      ChannelFuture channelFuture0 = upstreamChannelStateEvent0.getFuture();
      ChannelFuture channelFuture1 = upstreamChannelStateEvent0.getFuture();
      lengthFieldBasedFrameDecoder0.handleUpstream(channelHandlerContext1, upstreamChannelStateEvent0);
      int int1 = 32;
      lengthFieldBasedFrameDecoder0.maxFrameLength = int1;
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext2, int1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 0;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int0;
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(lengthFieldBasedFrameDecoder0.lengthFieldLength);
      ChannelBuffer channelBuffer0 = littleEndianHeapChannelBuffer0.duplicate();
      int int1 = 1550;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int1, int0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ByteOrder byteOrder0 = null;
      LinkedHashSet<ChannelBuffer> linkedHashSet0 = new LinkedHashSet<ChannelBuffer>();
      LinkedList<ChannelBuffer> linkedList0 = new LinkedList<ChannelBuffer>(linkedHashSet0);
      CompositeChannelBuffer compositeChannelBuffer0 = new CompositeChannelBuffer(byteOrder0, linkedList0);
      ChannelBuffer channelBuffer0 = compositeChannelBuffer0.duplicate();
      int int0 = 1926;
      int int1 = (-5);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int0, int1);
      } catch(NullPointerException e) {
         //
         // endianness
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      int int0 = 2493;
      int int1 = 1006;
      int int2 = 3;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int0, boolean0);
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)122;
      byteArray0[1] = byte0;
      byte byte1 = (byte)0;
      byteArray0[2] = byte1;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, byte1, byte1);
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, byteArray0[0]);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext2).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext2);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 202;
      long long0 = 1081L;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int1 = (-1762);
      int int2 = 448;
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.OPEN;
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, channelHandlerContext1);
      ChannelFuture channelFuture0 = upstreamChannelStateEvent0.getFuture();
      ChannelFuture channelFuture1 = upstreamChannelStateEvent0.getFuture();
      lengthFieldBasedFrameDecoder0.handleUpstream(channelHandlerContext1, upstreamChannelStateEvent0);
      int int0 = 32;
      lengthFieldBasedFrameDecoder0.maxFrameLength = int0;
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = null;
      int int1 = 211;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(int1);
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      int int0 = 48;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = int0;
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)118;
      byteArray0[0] = byte0;
      byte byte1 = (byte)15;
      byteArray0[1] = byte1;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int1 = 3;
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.slice((int) byte0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = 0L;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = (long) lengthFieldBasedFrameDecoder0.lengthFieldLength;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      int int0 = 0;
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.slice(int0, lengthFieldBasedFrameDecoder0.maxFrameLength);
      int int1 = (-3111);
      lengthFieldBasedFrameDecoder0.lengthAdjustment = int1;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[3];
      int int0 = (-753);
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int0;
      byte byte0 = (byte)48;
      byteArray0[0] = byte0;
      byte byte1 = (byte)122;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      Channel channel0 = null;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, bigEndianHeapChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = 0L;
      int int0 = 1907;
      lengthFieldBasedFrameDecoder0.initialBytesToStrip = int0;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      int int1 = 0;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, byteBufferBackedChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)48;
      byteArray0[0] = byte0;
      byte byte1 = (byte)122;
      byteArray0[1] = byte1;
      byte byte2 = (byte)0;
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean0;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = (int) byte0;
      lengthFieldBasedFrameDecoder0.initialBytesToStrip = (int) byte2;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, byte2, byte2);
      Channel channel0 = null;
      ChannelHandlerContext channelHandlerContext0 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }
}
