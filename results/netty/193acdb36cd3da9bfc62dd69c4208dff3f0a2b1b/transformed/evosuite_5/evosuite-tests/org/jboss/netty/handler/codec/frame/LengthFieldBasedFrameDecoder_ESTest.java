/*
 * This file was automatically generated by EvoSuite
 * Wed Apr 29 22:07:08 GMT 2020
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.net.SocketAddress;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.channels.FileChannel;
import java.nio.channels.ScatteringByteChannel;
import java.nio.charset.Charset;
import java.nio.file.StandardOpenOption;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.ChannelBufferFactory;
import org.jboss.netty.buffer.CompositeChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ReadOnlyChannelBuffer;
import org.jboss.netty.buffer.SlicedChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelFuture;
import org.jboss.netty.channel.ChannelFutureListener;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelPipeline;
import org.jboss.netty.channel.ChannelState;
import org.jboss.netty.channel.DefaultExceptionEvent;
import org.jboss.netty.channel.DownstreamMessageEvent;
import org.jboss.netty.channel.SucceededChannelFuture;
import org.jboss.netty.channel.UpstreamChannelStateEvent;
import org.jboss.netty.channel.UpstreamMessageEvent;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(byteOrder0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      int int0 = 0;
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int0, int0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer1);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      int int0 = 2300;
      int int1 = 28;
      int int2 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      int int0 = 556;
      int int1 = 0;
      int int2 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int2);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      int int0 = 8;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (8).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      int int0 = 0;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = (-1178);
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.discardingTooLongFrame = boolean0;
      lengthFieldBasedFrameDecoder0.lengthAdjustment = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelFuture channelFuture0 = null;
      ChannelBuffer channelBuffer0 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, channel0, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = null;
      CharBuffer charBuffer0 = CharBuffer.allocate(lengthFieldBasedFrameDecoder0.lengthFieldLength);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      long long0 = 1000000L;
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      int int0 = 4;
      int int1 = (-1921);
      int int2 = (-433);
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int2, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -1921
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      int int0 = 2102;
      int int1 = 3;
      int int2 = 3;
      int int3 = 3;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int2, int3, boolean0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[9];
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.copy();
      ReadOnlyChannelBuffer readOnlyChannelBuffer0 = new ReadOnlyChannelBuffer(channelBuffer0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, readOnlyChannelBuffer0);
      byte byte0 = (byte)7;
      byteArray0[0] = byte0;
      byte byte1 = (byte)48;
      byteArray0[1] = byte1;
      byte byte2 = (byte)16;
      byteArray0[2] = byte2;
      byte byte3 = (byte)94;
      byteArray0[3] = byte3;
      byte byte4 = (byte) (-124);
      byteArray0[4] = byte4;
      byte byte5 = (byte) (-128);
      byteArray0[5] = byte5;
      byte byte6 = (byte)51;
      byteArray0[6] = byte6;
      byte byte7 = (byte)16;
      byteArray0[7] = byte7;
      byte byte8 = (byte)0;
      byteArray0[8] = byte8;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      int int4 = (-8);
      int int5 = 1377;
      // Undeclared exception!
      try { 
        littleEndianHeapChannelBuffer0.copy(int4, int5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.LittleEndianHeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      int int0 = 56;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.CONNECTED;
      StandardOpenOption standardOpenOption0 = StandardOpenOption.CREATE_NEW;
      StandardOpenOption[] standardOpenOptionArray0 = StandardOpenOption.values();
      StandardOpenOption[] standardOpenOptionArray1 = StandardOpenOption.values();
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, standardOpenOption0);
      ChannelFuture channelFuture0 = upstreamChannelStateEvent0.getFuture();
      lengthFieldBasedFrameDecoder0.channelDisconnected(channelHandlerContext0, upstreamChannelStateEvent0);
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel1).getPipeline();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel1).when(channelHandlerContext1).getChannel();
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, int0);
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-94);
      byteArray0[0] = byte0;
      byte byte1 = (byte)17;
      byteArray0[1] = byte1;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, littleEndianHeapChannelBuffer0);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext4).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext4);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      int int0 = 268;
      int int1 = (-721);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int1);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -721
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = (-400);
      int int1 = 1;
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 4;
      int int1 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (4) must be equal to or greater than lengthFieldOffset (4) + lengthFieldLength (4).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = 5239;
      int int1 = 1539;
      int int2 = 2;
      int int3 = 1;
      int int4 = 2372;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int4);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory(byteOrder0);
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(byteOrder0, lengthFieldBasedFrameDecoder0.lengthFieldLength);
      int int5 = (-949);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int3, int5);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      int int0 = 1313;
      int int1 = 0;
      int int2 = 8;
      int int3 = 2475;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int2, int3);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = null;
      int int4 = 2;
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int4);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      int int0 = 1;
      int int1 = (-551);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -551
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      int int0 = 0;
      int int1 = 565;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      int int0 = 145;
      int int1 = 2;
      int int2 = 1855;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int2, int0, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 1855
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      int int0 = 0;
      int int1 = 1199;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.BOUND;
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, channelState0);
      String string0 = upstreamChannelStateEvent0.toString();
      lengthFieldBasedFrameDecoder0.channelDisconnected(channelHandlerContext1, upstreamChannelStateEvent0);
      long long0 = 0L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelBuffer channelBuffer0 = null;
      int int0 = 4;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int0, int0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      int int0 = 7;
      int int1 = 74;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = null;
      long long0 = (-1L);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = 2415;
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength = boolean0;
      lengthFieldBasedFrameDecoder0.maxFrameLength = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      int int0 = 2;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-84);
      byteArray0[0] = byte0;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(littleEndianHeapChannelBuffer0);
      ByteBuffer byteBuffer0 = duplicatedChannelBuffer0.toByteBuffer();
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      double double0 = 0.0;
      // Undeclared exception!
      try { 
        byteBuffer0.putDouble(double0);
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      int int0 = 0;
      lengthFieldBasedFrameDecoder0.lengthFieldEndOffset = int0;
      long long0 = 1415L;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      int int0 = 1476;
      int int1 = (-2109);
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int1, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -2109
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(lengthFieldBasedFrameDecoder0.maxFrameLength);
      ChannelBuffer channelBuffer0 = dynamicChannelBuffer0.duplicate();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      int int0 = 56;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.CONNECTED;
      StandardOpenOption standardOpenOption0 = StandardOpenOption.CREATE_NEW;
      StandardOpenOption[] standardOpenOptionArray0 = StandardOpenOption.values();
      StandardOpenOption[] standardOpenOptionArray1 = StandardOpenOption.values();
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel0, channelState0, standardOpenOption0);
      lengthFieldBasedFrameDecoder0.channelDisconnected(channelHandlerContext0, upstreamChannelStateEvent0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, int0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      int int0 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (3) must be equal to or greater than lengthFieldOffset (3) + lengthFieldLength (3).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)76;
      byteArray0[0] = byte0;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int0 = 40;
      int int1 = 2054;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, int0, int1);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelBuffer channelBuffer0 = null;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      String string0 = mockInetSocketAddress0.getHostName();
      UpstreamMessageEvent upstreamMessageEvent0 = new UpstreamMessageEvent(channel1, lengthFieldBasedFrameDecoder0, mockInetSocketAddress0);
      lengthFieldBasedFrameDecoder0.messageReceived(channelHandlerContext1, upstreamMessageEvent0);
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      int int0 = 0;
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory(byteOrder0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int0, heapChannelBufferFactory0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int0, int0);
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int0 = 680;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(int0);
      int int1 = 4;
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.readSlice(int1);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      int int0 = 3757;
      int int1 = 0;
      int int2 = 1;
      int int3 = 0;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int0, int3, boolean0);
      ByteOrder byteOrder0 = null;
      LinkedList<ChannelBuffer> linkedList0 = new LinkedList<ChannelBuffer>();
      LinkedList<ChannelBuffer> linkedList1 = new LinkedList<ChannelBuffer>(linkedList0);
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)3;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)103;
      byteArray0[2] = byte2;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.copy();
      boolean boolean1 = linkedList0.add(channelBuffer0);
      ChannelBuffer channelBuffer1 = null;
      boolean boolean2 = linkedList1.add(channelBuffer1);
      CompositeChannelBuffer compositeChannelBuffer0 = null;
      try {
        compositeChannelBuffer0 = new CompositeChannelBuffer(byteOrder0, linkedList1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.CompositeChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-32);
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-25);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-2);
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-82);
      byteArray0[3] = byte3;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int0 = 0;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, byteArray0[3], int0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      long long0 = 1870L;
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext0, long0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = null;
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      SlicedChannelBuffer slicedChannelBuffer0 = new SlicedChannelBuffer(duplicatedChannelBuffer0, lengthFieldBasedFrameDecoder0.lengthAdjustment, lengthFieldBasedFrameDecoder0.lengthAdjustment);
      ByteOrder byteOrder0 = slicedChannelBuffer0.order();
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)39;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-47);
      byteArray0[1] = byte1;
      byte byte2 = (byte)55;
      byteArray0[2] = byte2;
      byte byte3 = (byte)8;
      byteArray0[3] = byte3;
      int int0 = 536;
      // Undeclared exception!
      try { 
        heapChannelBufferFactory0.getBuffer(byteOrder0, byteArray0, lengthFieldBasedFrameDecoder0.lengthFieldLength, int0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.TruncatedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      long long0 = (-3261L);
      lengthFieldBasedFrameDecoder0.bytesToDiscard = long0;
      Channel channel0 = null;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)5;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      byte byte2 = (byte)57;
      byteArray0[2] = byte2;
      byte byte3 = (byte)30;
      byteArray0[3] = byte3;
      byte byte4 = (byte)0;
      byteArray0[4] = byte4;
      byte byte5 = (byte)63;
      byteArray0[5] = byte5;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int0 = 114;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(bigEndianHeapChannelBuffer0, byteArray0[5], int0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      int int0 = 56;
      int int1 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelState channelState0 = ChannelState.CONNECTED;
      StandardOpenOption standardOpenOption0 = StandardOpenOption.CREATE_NEW;
      StandardOpenOption[] standardOpenOptionArray0 = StandardOpenOption.values();
      UpstreamChannelStateEvent upstreamChannelStateEvent0 = new UpstreamChannelStateEvent(channel1, channelState0, standardOpenOption0);
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel2).getPipeline();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel2).when(channelHandlerContext1).getChannel();
      lengthFieldBasedFrameDecoder0.fail(channelHandlerContext1, int0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(lengthFieldBasedFrameDecoder0.initialBytesToStrip);
      ChannelBuffer channelBuffer0 = bigEndianHeapChannelBuffer0.copy();
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, channelBuffer0);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel4 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = null;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer1 = null;
      try {
        bigEndianHeapChannelBuffer1 = new BigEndianHeapChannelBuffer(byteArray0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int0 = 1625;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = (long) int0;
      int int1 = (-980);
      int int2 = 124;
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)122;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      byteArray0[1] = byte1;
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength = boolean0;
      byte byte2 = (byte)4;
      byteArray0[2] = byte2;
      byte byte3 = (byte)119;
      byteArray0[3] = byte3;
      byte byte4 = (byte)58;
      byteArray0[4] = byte4;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      littleEndianHeapChannelBuffer0.readBytes(byteArray0);
      ChannelBufferFactory channelBufferFactory0 = littleEndianHeapChannelBuffer0.factory();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, littleEndianHeapChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      int int0 = 15;
      lengthFieldBasedFrameDecoder0.lengthFieldOffset = int0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ChannelBuffer channelBuffer0 = heapChannelBufferFactory0.getBuffer(byteOrder0, lengthFieldBasedFrameDecoder0.lengthFieldOffset);
      int int1 = 0;
      ChannelBuffer channelBuffer1 = lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int1, int1);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer1);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = (-1178);
      lengthFieldBasedFrameDecoder0.lengthAdjustment = int0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelFuture channelFuture0 = null;
      ChannelBuffer channelBuffer0 = null;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int1 = 675;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int1);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel1, littleEndianHeapChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      int int0 = (-1023);
      lengthFieldBasedFrameDecoder0.lengthFieldLength = int0;
      long long0 = 2385L;
      boolean boolean0 = true;
      lengthFieldBasedFrameDecoder0.lengthFieldIncludedInFrameLength = boolean0;
      long long1 = 0L;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long1;
      lengthFieldBasedFrameDecoder0.tooLongFrameLength = long0;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext0).getChannel();
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder();
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int0 = 1625;
      lengthFieldBasedFrameDecoder0.bytesToDiscard = (long) int0;
      int int1 = (-980);
      int int2 = 124;
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)122;
      byteArray0[0] = byte0;
      byte byte1 = (byte)0;
      lengthFieldBasedFrameDecoder0.lengthFieldLength = (int) byte1;
      byte byte2 = (byte)4;
      byteArray0[2] = byte2;
      byte byte3 = (byte)119;
      lengthFieldBasedFrameDecoder0.maxFrameLength = (int) byte3;
      byte byte4 = (byte)58;
      byteArray0[4] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      littleEndianHeapChannelBuffer0.readBytes(byteArray0);
      ChannelBufferFactory channelBufferFactory0 = littleEndianHeapChannelBuffer0.factory();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel1, littleEndianHeapChannelBuffer0);
      } catch(Error e) {
         //
         // should not reach here
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      int int0 = 2102;
      int int1 = 3;
      int int2 = 3;
      int int3 = 3;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int2, int3, boolean0);
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Charset charset0 = Charset.defaultCharset();
      String string0 = "!Gl|z?\"grJ!@";
      ByteBuffer byteBuffer0 = charset0.encode(string0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer0);
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      int int0 = 2102;
      int int1 = 3;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int1, int1, boolean0);
      ChannelPipeline channelPipeline0 = mock(ChannelPipeline.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn(channelPipeline0).when(channel0).getPipeline();
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel0).when(channelHandlerContext0).getChannel();
      lengthFieldBasedFrameDecoder0.failIfNecessary(channelHandlerContext0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Charset charset0 = Charset.defaultCharset();
      String string0 = "!Gl|z?\"grJ!@";
      ByteBuffer byteBuffer0 = charset0.encode(string0);
      ByteBufferBackedChannelBuffer byteBufferBackedChannelBuffer0 = new ByteBufferBackedChannelBuffer(byteBuffer0);
      ChannelBuffer channelBuffer0 = byteBufferBackedChannelBuffer0.duplicate();
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, channelBuffer0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
  }
}
