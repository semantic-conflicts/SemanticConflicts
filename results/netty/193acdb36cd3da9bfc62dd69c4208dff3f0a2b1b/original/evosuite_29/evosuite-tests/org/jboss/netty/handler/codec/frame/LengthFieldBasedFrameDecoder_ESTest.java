/*
 * This file was automatically generated by EvoSuite
 * Sun May 03 07:06:44 GMT 2020
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.file.StandardOpenOption;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.ChannelBufferFactory;
import org.jboss.netty.buffer.ChannelBufferIndexFinder;
import org.jboss.netty.buffer.CompositeChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ReadOnlyChannelBuffer;
import org.jboss.netty.buffer.SlicedChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelFuture;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelPipeline;
import org.jboss.netty.channel.ChannelState;
import org.jboss.netty.channel.ChannelStateEvent;
import org.jboss.netty.channel.DownstreamChannelStateEvent;
import org.jboss.netty.channel.FailedChannelFuture;
import org.jboss.netty.channel.UpstreamChannelStateEvent;
import org.jboss.netty.channel.UpstreamMessageEvent;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      int int0 = 8;
      int int1 = 3;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int1, int0, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (3).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int2 = 1218;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-127);
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byteArray0[2] = byteArray0[1];
      byte byte2 = (byte) (-22);
      byteArray0[3] = byte2;
      byte byte3 = (byte)113;
      byteArray0[4] = byte3;
      byte byte4 = (byte)17;
      byteArray0[5] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel1, littleEndianHeapChannelBuffer0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      ByteOrder byteOrder0 = duplicatedChannelBuffer0.order();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      int int3 = (-38);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.toByteBuffer(int2, int3);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      int int0 = 65535;
      int int1 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int1, int0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 65535
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      int int0 = 8;
      int int1 = 0;
      int int2 = 5765;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int1, boolean0);
      ChannelBuffer channelBuffer0 = null;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      String string0 = " OPEN";
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(string0, int1);
      int int3 = 0;
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      int int0 = 1617;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      int int1 = (-1190);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -1190
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      int int0 = 0;
      int int1 = 1;
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int1, int0, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      int int0 = 65535;
      int int1 = 0;
      int int2 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      StandardOpenOption standardOpenOption0 = StandardOpenOption.SYNC;
      int int3 = dynamicChannelBuffer0.arrayOffset();
      dynamicChannelBuffer0.writeZero(int1);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int1, int0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, channelBuffer0);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel4 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext4, channel4, channelBuffer0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte)56;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte)28;
      byteArray0[3] = byte3;
      byte byte4 = (byte)5;
      byteArray0[4] = byte4;
      byte byte5 = (byte)5;
      byteArray0[5] = byte5;
      byte byte6 = (byte)8;
      byteArray0[6] = byte6;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int4 = 293;
      int int5 = 31;
      // Undeclared exception!
      try { 
        bigEndianHeapChannelBuffer0.toByteBuffer(int4, int5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      int int0 = 65535;
      int int1 = 0;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      StandardOpenOption standardOpenOption0 = StandardOpenOption.SYNC;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(int0);
      UpstreamMessageEvent upstreamMessageEvent0 = new UpstreamMessageEvent(channel1, standardOpenOption0, mockInetSocketAddress0);
      lengthFieldBasedFrameDecoder0.handleUpstream(channelHandlerContext1, upstreamMessageEvent0);
      int int3 = dynamicChannelBuffer0.arrayOffset();
      dynamicChannelBuffer0.writeZero(int1);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int1, int0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, channelBuffer0);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel4 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext4, channel4, channelBuffer0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte)56;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte)28;
      byteArray0[3] = byte3;
      byte byte4 = (byte)5;
      byteArray0[4] = byte4;
      byte byte5 = (byte)5;
      byteArray0[5] = byte5;
      byte byte6 = (byte)8;
      byteArray0[6] = byte6;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int4 = 293;
      int int5 = 31;
      // Undeclared exception!
      try { 
        bigEndianHeapChannelBuffer0.toByteBuffer(int4, int5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      int int0 = 579;
      int int1 = (-1275);
      int int2 = (-520);
      int int3 = 5763;
      int int4 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int4);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -1275
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      int int0 = 1286;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int1 = 1150;
      int int2 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      int int3 = 1839;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(int3);
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(int2);
      int int4 = 1064;
      // Undeclared exception!
      try { 
        channelBuffer0.readFloat();
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int2 = 1218;
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      ByteOrder byteOrder0 = duplicatedChannelBuffer0.order();
      ChannelBufferFactory channelBufferFactory0 = HeapChannelBufferFactory.getInstance(byteOrder0);
      DynamicChannelBuffer dynamicChannelBuffer1 = new DynamicChannelBuffer(byteOrder0, int2, channelBufferFactory0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer1);
      ChannelHandlerContext channelHandlerContext1 = null;
      Channel channel1 = null;
      Object object1 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext1, channel1, duplicatedChannelBuffer0);
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, dynamicChannelBuffer0);
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, dynamicChannelBuffer1);
      Object object4 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, dynamicChannelBuffer1);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer1, int0, int1);
      int int3 = (-4201);
      SlicedChannelBuffer slicedChannelBuffer0 = null;
      try {
        slicedChannelBuffer0 = new SlicedChannelBuffer(dynamicChannelBuffer0, int2, int3);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.AbstractChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int2 = 1218;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-127);
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byteArray0[2] = byteArray0[1];
      byte byte2 = (byte) (-22);
      byteArray0[3] = byte2;
      byte byte3 = (byte)113;
      byteArray0[4] = byte3;
      byte byte4 = (byte)17;
      byteArray0[5] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel1, littleEndianHeapChannelBuffer0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      ByteOrder byteOrder0 = duplicatedChannelBuffer0.order();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn((Channel) null).when(channelHandlerContext1).getChannel();
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int3 = 128;
      ChannelBuffer channelBuffer0 = dynamicChannelBuffer0.slice((int) byteArray0[1], int3);
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel2, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 1765;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 1765
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = (-436);
      int int1 = 1217;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -436
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      int int0 = 579;
      int int1 = (-1279);
      int int2 = (-520);
      int int3 = 5763;
      int int4 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int4);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -1279
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      int int2 = (-906);
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int0, int2, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -906
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      int int0 = 3561;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 3561
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      int int0 = 0;
      int int1 = 255;
      int int2 = (-2209);
      int int3 = 0;
      int int4 = 2988;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int4, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      int int0 = 696;
      int int1 = (-1607);
      int int2 = (-2708);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int0, int2);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -2708
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      int int0 = 8;
      int int1 = 0;
      int int2 = 5765;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int1, boolean0);
      ChannelBuffer channelBuffer0 = null;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      String string0 = "A*| D";
      String string1 = " OPEN";
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(string1, int1);
      UpstreamMessageEvent upstreamMessageEvent0 = new UpstreamMessageEvent(channel0, string0, mockInetSocketAddress0);
      lengthFieldBasedFrameDecoder0.messageReceived(channelHandlerContext0, upstreamMessageEvent0);
      int int3 = 0;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int2, int3);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      int int0 = 65535;
      int int1 = 0;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int1);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      StandardOpenOption standardOpenOption0 = StandardOpenOption.SYNC;
      MockInetSocketAddress mockInetSocketAddress0 = new MockInetSocketAddress(int0);
      UpstreamMessageEvent upstreamMessageEvent0 = new UpstreamMessageEvent(channel1, standardOpenOption0, mockInetSocketAddress0);
      lengthFieldBasedFrameDecoder0.handleUpstream(channelHandlerContext1, upstreamMessageEvent0);
      int int3 = dynamicChannelBuffer0.arrayOffset();
      dynamicChannelBuffer0.writeZero(int1);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int1, int0);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      int int0 = 65535;
      int int1 = 0;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int1);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      String string0 = null;
      MockThrowable mockThrowable0 = new MockThrowable(string0);
      FailedChannelFuture failedChannelFuture0 = new FailedChannelFuture(channel2, mockThrowable0);
      ChannelFuture channelFuture0 = failedChannelFuture0.awaitUninterruptibly();
      ChannelState channelState0 = ChannelState.INTEREST_OPS;
      DownstreamChannelStateEvent downstreamChannelStateEvent0 = new DownstreamChannelStateEvent(channel2, channelFuture0, channelState0, channelState0);
      int int3 = (-2);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int3, int3);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      int int0 = 0;
      int int1 = 1;
      int int2 = 46;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = null;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory();
      int int3 = 0;
      int int4 = 2869;
      int int5 = 0;
      int int6 = 1677;
      ChannelBufferIndexFinder channelBufferIndexFinder0 = mock(ChannelBufferIndexFinder.class, new ViolatedAssumptionAnswer());
      long long0 = 2447L;
      int int7 = (-1691);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      int int8 = 4;
      int int9 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int6, int1, int8, int9, int8);
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      int int0 = 8;
      int int1 = 0;
      int int2 = 5765;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int1, boolean0);
      ChannelBuffer channelBuffer0 = null;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte)124;
      byteArray0[0] = byte0;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext1, channel1, littleEndianHeapChannelBuffer0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      int int0 = 1286;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int1 = 1150;
      int int2 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      int int3 = 1839;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(int3);
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(int2);
      int int4 = 1064;
      int int5 = 5;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int4, int5);
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int2 = 1218;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-127);
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte)48;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-22);
      byteArray0[3] = byte3;
      byte byte4 = (byte)113;
      byteArray0[4] = byte4;
      byte byte5 = (byte)17;
      byteArray0[5] = byte5;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, littleEndianHeapChannelBuffer0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      ByteOrder byteOrder0 = duplicatedChannelBuffer0.order();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      int int3 = (-38);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.toByteBuffer(int2, int3);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      int int0 = 1286;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int1 = 1150;
      int int2 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      int int3 = 1839;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(int3);
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(int2);
      int int4 = 1064;
      int int5 = (-6);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer0, int4, int5);
      } catch(IllegalArgumentException e) {
         //
         // capacity: -6
         //
         verifyException("org.jboss.netty.buffer.DirectChannelBufferFactory", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      int int0 = 65535;
      int int1 = 0;
      int int2 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      StandardOpenOption standardOpenOption0 = StandardOpenOption.SYNC;
      int int3 = dynamicChannelBuffer0.arrayOffset();
      dynamicChannelBuffer0.writeZero(int1);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int1, int0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, channelBuffer0);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel4 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext4, channel4, channelBuffer0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte)56;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte)28;
      byteArray0[3] = byte3;
      byte byte4 = (byte)5;
      byteArray0[4] = byte4;
      byte byte5 = (byte)5;
      byteArray0[5] = byte5;
      byte byte6 = (byte)8;
      byteArray0[6] = byte6;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int4 = 293;
      int int5 = 31;
      // Undeclared exception!
      try { 
        bigEndianHeapChannelBuffer0.toByteBuffer(int4, int5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int2 = 1218;
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-127);
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byte byte2 = (byte)48;
      byteArray0[2] = byte2;
      byte byte3 = (byte) (-22);
      byteArray0[3] = byte3;
      byte byte4 = (byte)113;
      byteArray0[4] = byte4;
      byte byte5 = (byte)17;
      byteArray0[5] = byte5;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(littleEndianHeapChannelBuffer0);
      ByteBuffer byteBuffer0 = duplicatedChannelBuffer0.toByteBuffer();
      littleEndianHeapChannelBuffer0.getBytes((int) byteArray0[1], byteBuffer0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, littleEndianHeapChannelBuffer0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer1 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      ByteOrder byteOrder0 = duplicatedChannelBuffer1.order();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      int int3 = (-38);
      // Undeclared exception!
      try { 
        dynamicChannelBuffer0.toByteBuffer(int2, int3);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      int int0 = 65535;
      int int1 = 0;
      int int2 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int2, int2);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      StandardOpenOption standardOpenOption0 = StandardOpenOption.SYNC;
      int int3 = dynamicChannelBuffer0.arrayOffset();
      dynamicChannelBuffer0.writeZero(int1);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, dynamicChannelBuffer0);
      ChannelBuffer channelBuffer0 = lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int1, int0);
      ChannelHandlerContext channelHandlerContext2 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel2, channelBuffer0);
      ChannelHandlerContext channelHandlerContext3 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object2 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext3, channel3, channelBuffer0);
      ChannelHandlerContext channelHandlerContext4 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel4 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object3 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext4, channel4, channelBuffer0);
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte) (-1);
      byteArray0[0] = byte0;
      byte byte1 = (byte)56;
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-1);
      byteArray0[2] = byte2;
      byte byte3 = (byte)28;
      byteArray0[3] = byte3;
      byte byte4 = (byte)5;
      byteArray0[4] = byte4;
      byte byte5 = (byte)5;
      byteArray0[5] = byte5;
      byte byte6 = (byte)8;
      byteArray0[6] = byte6;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(byteArray0);
      int int4 = 293;
      int int5 = 31;
      // Undeclared exception!
      try { 
        bigEndianHeapChannelBuffer0.toByteBuffer(int4, int5);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      int int0 = 1286;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int1 = 1150;
      int int2 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      int int3 = 1839;
      DirectChannelBufferFactory directChannelBufferFactory0 = new DirectChannelBufferFactory(int3);
      ChannelBuffer channelBuffer0 = directChannelBufferFactory0.getBuffer(int2);
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(int3);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      ChannelBuffer channelBuffer1 = heapChannelBufferFactory0.getBuffer(byteBuffer0);
      int int4 = 2130964543;
      // Undeclared exception!
      lengthFieldBasedFrameDecoder0.extractFrame(channelBuffer1, int1, int4);
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      int int0 = 1;
      int int1 = 0;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0);
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int2 = 1218;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-127);
      byteArray0[0] = byte0;
      byte byte1 = (byte)1;
      byteArray0[1] = byte1;
      byteArray0[2] = byteArray0[1];
      byte byte2 = (byte) (-22);
      byteArray0[3] = byte2;
      byte byte3 = (byte)113;
      byteArray0[4] = byte3;
      byte byte4 = (byte)17;
      byteArray0[5] = byte4;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(byteArray0);
      Object object0 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel1, littleEndianHeapChannelBuffer0);
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(dynamicChannelBuffer0);
      ByteOrder byteOrder0 = duplicatedChannelBuffer0.order();
      HeapChannelBufferFactory heapChannelBufferFactory0 = new HeapChannelBufferFactory();
      Channel channel2 = mock(Channel.class, new ViolatedAssumptionAnswer());
      doReturn((ChannelPipeline) null).when(channel2).getPipeline();
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      doReturn(channel2).when(channelHandlerContext1).getChannel();
      Channel channel3 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int3 = 128;
      ChannelBuffer channelBuffer0 = dynamicChannelBuffer0.slice((int) byteArray0[1], int3);
      ChannelHandlerContext channelHandlerContext2 = null;
      Channel channel4 = mock(Channel.class, new ViolatedAssumptionAnswer());
      DynamicChannelBuffer dynamicChannelBuffer1 = new DynamicChannelBuffer(int2);
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext2, channel4, dynamicChannelBuffer1);
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel3, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.channel.Channels", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      int int0 = 8;
      int int1 = 0;
      int int2 = 5765;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int0, int2, int1, boolean0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = null;
      ChannelState channelState0 = ChannelState.INTEREST_OPS;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ChannelBufferFactory channelBufferFactory0 = DirectChannelBufferFactory.getInstance();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int1, channelBufferFactory0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int0, int2);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }
}
