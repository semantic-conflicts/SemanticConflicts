/*
 * This file was automatically generated by EvoSuite
 * Sun May 03 07:08:49 GMT 2020
 */

package org.jboss.netty.handler.codec.frame;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.InetAddress;
import java.net.ProtocolFamily;
import java.net.SocketOption;
import java.net.StandardProtocolFamily;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.channels.DatagramChannel;
import java.nio.channels.ScatteringByteChannel;
import java.nio.charset.Charset;
import java.util.LinkedList;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.jboss.netty.buffer.BigEndianHeapChannelBuffer;
import org.jboss.netty.buffer.ByteBufferBackedChannelBuffer;
import org.jboss.netty.buffer.ChannelBuffer;
import org.jboss.netty.buffer.CompositeChannelBuffer;
import org.jboss.netty.buffer.DirectChannelBufferFactory;
import org.jboss.netty.buffer.DuplicatedChannelBuffer;
import org.jboss.netty.buffer.DynamicChannelBuffer;
import org.jboss.netty.buffer.HeapChannelBufferFactory;
import org.jboss.netty.buffer.LittleEndianHeapChannelBuffer;
import org.jboss.netty.buffer.SlicedChannelBuffer;
import org.jboss.netty.buffer.TruncatedChannelBuffer;
import org.jboss.netty.channel.Channel;
import org.jboss.netty.channel.ChannelFuture;
import org.jboss.netty.channel.ChannelHandlerContext;
import org.jboss.netty.channel.ChannelState;
import org.jboss.netty.channel.DownstreamMessageEvent;
import org.jboss.netty.channel.UpstreamChannelStateEvent;
import org.jboss.netty.channel.UpstreamMessageEvent;
import org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LengthFieldBasedFrameDecoder_ESTest extends LengthFieldBasedFrameDecoder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      int int0 = 1751;
      int int1 = 1701;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      int int3 = 8;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, channel0, truncatedChannelBuffer0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(duplicatedChannelBuffer0, int3, int0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.TruncatedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      int int0 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (3) must be equal to or greater than lengthFieldOffset (3) + lengthFieldLength (3).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      int int0 = (-88);
      int int1 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -88
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      int int0 = 1112;
      int int1 = (-2357);
      int int2 = 2446;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -2357
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      int int0 = 2937;
      int int1 = (-314);
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0, int1, int1, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // initialBytesToStrip must be a non-negative integer: -314
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      int int0 = 3;
      int int1 = 1;
      int int2 = (-1491);
      int int3 = 65;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int2, int3, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (3) must be equal to or greater than lengthFieldOffset (3) + lengthFieldLength (1).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      int int0 = 3141;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 3141
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      int int0 = 8;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (8) must be equal to or greater than lengthFieldOffset (8) + lengthFieldLength (8).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      int int0 = 2;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength (2) must be equal to or greater than lengthFieldOffset (2) + lengthFieldLength (2).
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      int int0 = 1751;
      int int1 = 1662;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int1, int2, int2, int0, int1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      int int3 = (-450);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, channel0, truncatedChannelBuffer0);
      DynamicChannelBuffer dynamicChannelBuffer1 = new DynamicChannelBuffer(byteOrder0, int0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      ChannelBuffer channelBuffer0 = null;
      try { 
        lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext1, channel1, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      int int0 = (-3616);
      int int1 = (-1401);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: -3616
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      int int0 = 686;
      int int1 = 0;
      int int2 = 1594;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 1594
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 0;
      int int1 = (-208);
      int int2 = (-2383);
      int int3 = 992;
      int int4 = 683;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int4, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // maxFrameLength must be a positive integer: 0
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      int int0 = 786;
      int int1 = 2830;
      int int2 = 3;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int0, int1, int2, int2);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: 2830
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      int int0 = 2;
      int int1 = 3141;
      int int2 = (-2924);
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldLength must be either 1, 2, 3, 4, or 8: -2924
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      int int0 = 1751;
      int int1 = 1709;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      int int3 = 8;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(duplicatedChannelBuffer0, int3, int0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.TruncatedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      int int0 = 56;
      int int1 = (-452);
      int int2 = 1395;
      int int3 = (-1189);
      boolean boolean0 = false;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = null;
      try {
        lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1, int2, int3, boolean0);
      } catch(IllegalArgumentException e) {
         //
         // lengthFieldOffset must be a non-negative integer: -452
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      int int3 = 3;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int3);
      int int4 = 0;
      int int5 = (-925);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(littleEndianHeapChannelBuffer0, int4, int5);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      int int0 = 24;
      int int1 = 0;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int2, int2, int0, int1);
      int int3 = 3;
      LittleEndianHeapChannelBuffer littleEndianHeapChannelBuffer0 = new LittleEndianHeapChannelBuffer(int3);
      int int4 = 16;
      int int5 = (-925);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(littleEndianHeapChannelBuffer0, int4, int5);
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.HeapChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      int int0 = 1751;
      int int1 = 1709;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(dynamicChannelBuffer0, int2, int2);
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      int int0 = 1751;
      int int1 = 1709;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      int int3 = 8;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, channel0, truncatedChannelBuffer0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(duplicatedChannelBuffer0, int3, int0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.TruncatedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      int int0 = 979;
      int int1 = 55;
      int int2 = 1;
      int int3 = 8;
      boolean boolean0 = true;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2, int3, int3, boolean0);
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      int int4 = 65535;
      BigEndianHeapChannelBuffer bigEndianHeapChannelBuffer0 = new BigEndianHeapChannelBuffer(int4);
      int int5 = (-372);
      int int6 = (-1024);
      SlicedChannelBuffer slicedChannelBuffer0 = null;
      try {
        slicedChannelBuffer0 = new SlicedChannelBuffer(bigEndianHeapChannelBuffer0, int5, int6);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.SlicedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = null;
      InetAddress inetAddress0 = MockInetAddress.getLoopbackAddress();
      ChannelBuffer channelBuffer0 = null;
      int int0 = 2892;
      int int1 = 1;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int1);
      try { 
        lengthFieldBasedFrameDecoder0.decode(channelHandlerContext0, channel0, channelBuffer0);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      int int0 = 1751;
      int int1 = 1709;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      String string0 = truncatedChannelBuffer0.toString();
      int int3 = 8;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, channel0, truncatedChannelBuffer0);
      ChannelHandlerContext channelHandlerContext1 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel1 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object1 = lengthFieldBasedFrameDecoder0.decode(channelHandlerContext1, channel1, truncatedChannelBuffer0);
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(duplicatedChannelBuffer0, int3, int0);
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.buffer.TruncatedChannelBuffer", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      int int0 = 1755;
      int int1 = 1701;
      int int2 = 4;
      LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder0 = new LengthFieldBasedFrameDecoder(int0, int1, int2);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      DynamicChannelBuffer dynamicChannelBuffer0 = new DynamicChannelBuffer(byteOrder0, int2);
      TruncatedChannelBuffer truncatedChannelBuffer0 = new TruncatedChannelBuffer(dynamicChannelBuffer0, int2);
      DuplicatedChannelBuffer duplicatedChannelBuffer0 = new DuplicatedChannelBuffer(truncatedChannelBuffer0);
      int int3 = 8;
      ChannelHandlerContext channelHandlerContext0 = mock(ChannelHandlerContext.class, new ViolatedAssumptionAnswer());
      Channel channel0 = mock(Channel.class, new ViolatedAssumptionAnswer());
      Object object0 = lengthFieldBasedFrameDecoder0.decodeLast(channelHandlerContext0, channel0, truncatedChannelBuffer0);
      DuplicatedChannelBuffer duplicatedChannelBuffer1 = null;
      // Undeclared exception!
      try { 
        lengthFieldBasedFrameDecoder0.extractFrame(duplicatedChannelBuffer1, int3, int1);
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jboss.netty.handler.codec.frame.LengthFieldBasedFrameDecoder", e);
      }
  }
}
